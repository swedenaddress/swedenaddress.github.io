<!doctype html>
<html lang="zh-CN">

<head>
    <!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="canonical" href="https://swedenaddress.github.io/html/category/article-370.htm" />
<link rel="icon" href="/assets/addons/xcblog/img/swedenaddress/favicon.ico" type="image/x-icon"/>
<title>Python 列表和字典数据结构的性能分析 - SwedenAddress</title>
<link rel="stylesheet" href="/assets/addons/xcblog/css/swedenaddress/style-starter.css">
<link href="https://fonts.googleapis.com/css?family=Josefin+Slab:400,700,700i&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?ff0c66a832e6568df61664f01ded8b73";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="home">
    <section class=" w3l-header-4 header-sticky">
    <header class="absolute-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a class="navbar-brand" href="/">
                        Sweden Address
                    </a>
                                <button class="navbar-toggler bg-gradient collapsed" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="fa icon-expand fa-bars"></span>
                    <span class="fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
        </div>
        </nav>
        </div>
    </header>
</section>
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/jquery-3.3.1.min.js"></script> <!-- Common jquery plugin -->
<!--bootstrap working-->
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/bootstrap.min.js"></script>
<!-- //bootstrap working-->
<!-- disable body scroll which navbar is in active -->
<script>
$(function() {
    $('.navbar-toggler').click(function() {
        $('body').toggleClass('noscroll');
    })
});
</script>
    <!-- breadcrumbs -->
    <section class="w3l-inner-banner-main">
        <div class="about-inner about ">
            <div class="container">
                <div class="main-titles-head text-center">
                    <h1 class="header-name" style="word-break: break-all;">
                        Python 列表和字典数据结构的性能分析                    </h1>
                    
                </div>
            </div>
        </div>
        <div class="breadcrumbs-sub">
            <div class="container">
                <ul class="breadcrumbs-custom-path">
                    <li class="right-side propClone"><a href="/" class="">首页 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="right-side propClone"><a href="/html/category/" class="">文章分类 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="active ">正文</li>
                </ul>
            </div>
        </div>
        </div>
    </section>
    <!-- breadcrumbs //-->
    <section class="w3l-content-with-photo-4" id="about">
        <div class="content-with-photo4-block ">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="markdown_views prism-tomorrow-night"> <div class="toc"> <h3>文章目录</h3> <ul> <li>Python 列表和字典数据结构的性能分析</li> <li> <ul> <li>list列表数据类型</li> <li>dict字典数据类型</li> </ul> </li> </ul> </div> <h1>Python 列表和字典数据结构的性能分析</h1> <h2>list列表数据类型</h2> <p>list类型各种操作（interface）的实现方法有很多，如何选择具体哪种实现方法？ 总的方案就是，<code>让最常用的操作性能最好，牺牲不太常用的操作</code>。<br /> 有一个准则：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220905/a573eb62433051317f744d224bcbcac9.jpg" alt="Python 列表和字典数据结构的性能分析"></p> <p><strong>80/20准则</strong>：80%的功能其使用率只有20%<br /> 在实现列表数据结构时，Python的设计师有许多选择，每一个选择都会影响操作的性能。为了做出正确的选择，他们考虑了列表最常见的用法，并据此优化列表的实现，以使最常用的操作非常快。</p> <p>当然，他们也尽力使不常用的操作也很快，但在需要权衡时，往往会牺牲低频操作的性能。</p> <p>最常用的是：按索引取值和赋值（v =a[i], a[i]= v）,由于列表的随机访问特性，这两个操作执行时间与列表大小无关，均为O(1)</p> <p>另一个是列表增长，可以选择append()和__add__()“+”<br /> lst.append(v)，执行时间是O(1),<br /> lst= lst+ [v]，执行时间是O(n+k)，其中k是被加的列表长度，<br /> 选择哪个方法来操作列表，决定了程序的性能。</p> <p><strong>4种生成前n个整数列表的方法</strong>：</p> <pre><code>import time  # 1 循环连接 def test1(num):     l = []     for i in range(num):         l = l + [i]  # 2 append()方法 def test2(num):     l = []     for i in range(num):         l.append(i)  # 3 列表推导式 def test3(num):     l = [i for i in range(num)]  # 4 list(range()) def test4(num):     l = list(range(num))  num = 100000 t1 = time.time() test1(num) t2 = time.time() print('concat %f seconds\n' % (t2-t1))  test2(num) t3 = time.time() print("append %f seconds\n" % (t3-t2))  test3(num) t4 = time.time() print("comprehension %f seconds\n" % (t4-t3))  test4(num) t5 = time.time() print("list range %f seconds\n" %  (t5-t4))</code></pre> <p>运行结果：</p> <pre><code>concat 19.451530 seconds  append 0.007978 seconds  comprehension 0.003990 seconds  list range 0.002991 seconds</code></pre> <p>我们看到，4种方法运行时间差别很大，列表连接（concat）最慢，List range最快。</p> <p><strong>List基本操作的大O数量级</strong>：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220905/38f84c9c6af771b903bfe844ef66b519.jpg" alt="Python 列表和字典数据结构的性能分析"></p> <p>我们注意到pop这个操作，<br /> pop()从列表末尾移除元素，O(1)<br /> pop(i)从列表中部移除元素，O(n)<br /> 原因在于Python所选择的实现方法，从中部移除元素的话，要把移除元素后面的元素，全部向前挪位复制一遍，这个看起来有点笨拙，但这种实现方法能够保证列表按索引取值和赋值的操作很快，达到O(1)，这也算是一种对常用和不常用操作的折中方案。</p> <p>为了验证表中的大O数量级，我们把两种情况下的pop操作来实际计时对比<br /> 相对同一个大小的list，分别调用pop()和pop(0)，对不同大小的list做计时，期望的结果是<code>pop()的时间不随list大小变化，pop(0)的时间随着list变大而变长</code>。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220905/023e5320efb3b6484012061d3311615b.jpg" alt="Python 列表和字典数据结构的性能分析"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220905/48af40bf6f73e8897d7bc70d346bb384.jpg" alt="Python 列表和字典数据结构的性能分析"><br /> 虽然测试结果说明pop(0)确实比pop()慢,但是并没有证明pop(0)的时间复杂度是O(n),也没有证明pop()的是O(1)。要证明这一点，需要看看两个操作在各个列表长度下的性能。以下代码实现了这个测试。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220905/60f6a24564fd2329d5be4d5bd8fe13e4.jpg" alt="Python 列表和字典数据结构的性能分析"></p> <p>图2-3展示了实验结果。可以看出，<code>列表越长，pop(0)的耗时也随之变长，而 pop()的耗时很稳定</code>。这刚好符合O(n)和O(1)的特征。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220905/b8bcdf292058628ee66a28b8425b58be.jpg" alt="Python 列表和字典数据结构的性能分析"></p> <p>实验会有一些误差。因为用来测量的计算机运行着其他进程，所以可能拖慢代码的速度。因此，尽管我们尽力减少计算机所做的其他工作,测出的时间仍然会有些许变化。这也是测试1000遍的原因，从统计角度来说，收集足够多的信息有助于得到可靠的结果。</p> <h2>dict字典数据类型</h2> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220905/91996544fb95575faebff29018b4a2d7.jpg" alt="Python 列表和字典数据结构的性能分析"></p> <p>字典与列表不同，根据关键码（key）找到数据项，而列表是根据位置（index）,最常用的取值get和赋值set，其性能为O(1)，另一个重要操作contains(in)是判断字典中是否存在某个关键码（key），这个性能也是O(1)。</p> <p>下面设计一个性能试验来验证list中检索一个值，以及dict中检索一个值的计时对比，生成包含连续值的list和包含连续关键码key的dict，用随机数来检验操作符in的耗时。<br /> 程序示例：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220905/326349d58f78ad0d4f854151b7c9c7ab.jpg" alt="Python 列表和字典数据结构的性能分析"><br /> 结果：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220905/2ee0956fea7a8a13f40c072f708b9a68.jpg" alt="Python 列表和字典数据结构的性能分析"></p> <p>下图展示了实验结果：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220905/12949fe77492b54117905a833507aca9.jpg" alt="Python 列表和字典数据结构的性能分析"></p> <p>可见<code>字典的执行时间与规模无关，是常数，而列表的执行时间则随着列表的规模加大而线性上升</code>。</p> </div> 			
                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-369.htm">JavaScript在嵌套数组中查找最大值方法详解</a></p>
                                                        <p>下一个：<a href="/html/category/article-371.htm">@Transactional 详解</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4480.htm" title="一岁的猫还用打猫三联吗（一岁的猫还打疫苗吗）">一岁的猫还用打猫三联吗（一岁的猫还打疫苗吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-6106.htm" title="猫打疫苗总共多少钱（猫打疫苗多少钱一只啊）">猫打疫苗总共多少钱（猫打疫苗多少钱一只啊）</a></li>
                        <li class="py-2"><a href="/html/category/article-4551.htm" title="动物活疫苗与死疫苗的区别（动物灭活疫苗的作用机理）">动物活疫苗与死疫苗的区别（动物灭活疫苗的作用机理）</a></li>
                        <li class="py-2"><a href="/html/category/article-6893.htm" title="动物疫苗排名前十名品种有哪些（动物疫苗的作用）">动物疫苗排名前十名品种有哪些（动物疫苗的作用）</a></li>
                        <li class="py-2"><a href="/html/category/article-6063.htm" title="王允海动物医院(道里店)怎么样（王允海宠物医院）">王允海动物医院(道里店)怎么样（王允海宠物医院）</a></li>
                        <li class="py-2"><a href="/html/category/article-7123.htm" title="中国十大女士皮鞋品牌排行榜(国内女士皮鞋品牌大全)">中国十大女士皮鞋品牌排行榜(国内女士皮鞋品牌大全)</a></li>
                        <li class="py-2"><a href="/html/category/article-5571.htm" title="附近的宠物领养中心地址（附近领养宠物小猫）">附近的宠物领养中心地址（附近领养宠物小猫）</a></li>
                        <li class="py-2"><a href="/html/category/article-4444.htm" title="国产狗粮性价比（国产狗粮性价比排行榜）">国产狗粮性价比（国产狗粮性价比排行榜）</a></li>
                        <li class="py-2"><a href="/html/category/article-4481.htm" title="动物接种疫苗的方法有几种呢（动物接种疫苗的方法有几种呢图片）">动物接种疫苗的方法有几种呢（动物接种疫苗的方法有几种呢图片）</a></li>
                        <li class="py-2"><a href="/html/category/article-4552.htm" title="济南领养宠物的地方 济南领养宠物的地方有哪些">济南领养宠物的地方 济南领养宠物的地方有哪些</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">4</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            
            </div>
        </div>
    </section>
    
        <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    SwedenAddress 版权所有
                    <br />
                    Powered by WordPress
                </p>
                <div class="col-lg-4 main-social-footer-29">
                    <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                    <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                    <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                    <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                </div>
            </div>
        </div>
    </section>
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-long-arrow-up"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- /move top -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>