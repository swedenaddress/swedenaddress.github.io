<!doctype html>
<html lang="zh-CN">

<head>
    <!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="canonical" href="https://swedenaddress.github.io/html/category/article-403.htm" />
<link rel="icon" href="/assets/addons/xcblog/img/swedenaddress/favicon.ico" type="image/x-icon"/>
<title>vue3引入element-plus的各种方式 - SwedenAddress</title>
<link rel="stylesheet" href="/assets/addons/xcblog/css/swedenaddress/style-starter.css">
<link href="https://fonts.googleapis.com/css?family=Josefin+Slab:400,700,700i&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?ff0c66a832e6568df61664f01ded8b73";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="home">
    <section class=" w3l-header-4 header-sticky">
    <header class="absolute-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a class="navbar-brand" href="/">
                        Sweden Address
                    </a>
                                <button class="navbar-toggler bg-gradient collapsed" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="fa icon-expand fa-bars"></span>
                    <span class="fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
        </div>
        </nav>
        </div>
    </header>
</section>
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/jquery-3.3.1.min.js"></script> <!-- Common jquery plugin -->
<!--bootstrap working-->
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/bootstrap.min.js"></script>
<!-- //bootstrap working-->
<!-- disable body scroll which navbar is in active -->
<script>
$(function() {
    $('.navbar-toggler').click(function() {
        $('body').toggleClass('noscroll');
    })
});
</script>
    <!-- breadcrumbs -->
    <section class="w3l-inner-banner-main">
        <div class="about-inner about ">
            <div class="container">
                <div class="main-titles-head text-center">
                    <h1 class="header-name" style="word-break: break-all;">
                        vue3引入element-plus的各种方式                    </h1>
                    
                </div>
            </div>
        </div>
        <div class="breadcrumbs-sub">
            <div class="container">
                <ul class="breadcrumbs-custom-path">
                    <li class="right-side propClone"><a href="/" class="">首页 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="right-side propClone"><a href="/html/category/" class="">文章分类 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="active ">正文</li>
                </ul>
            </div>
        </div>
        </div>
    </section>
    <!-- breadcrumbs //-->
    <section class="w3l-content-with-photo-4" id="about">
        <div class="content-with-photo4-block ">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h1><a id="vue3elementplus_0" rel="nofollow"></a>vue3引入element-plus的各种方式</h1> <ul> <li>element-plus 导入总是出现问题，所以做了个小结</li> <li>使用 pnpm 管理，版本号<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/d4833c7d5c119b34f33ff50109b439a8.jpg" alt="vue3引入element-plus的各种方式"></li> </ul> <h3><a id="___6" rel="nofollow"></a>如何进行引入的 先搞清楚具体的包的位置和内容</h3> <ul> <li>element-plus 在项目中的地址</li> <li>el-xxx 就是一个一个封装好的组件</li> <li><code>注意 目录的层级 element-plus----&gt;lib----&gt; xxxx</code><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/1eba17d53f041d01515a91241213c196.jpg" alt="vue3引入element-plus的各种方式"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/54a8d5a636b429a43659980072d2dc6d.jpg" alt="vue3引入element-plus的各种方式"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/ac79ee15d0b9449e30408e885981be95.jpg" alt="vue3引入element-plus的各种方式"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/2b4f6e88a2f5232e53bc56644b55e404.jpg" alt="vue3引入element-plus的各种方式"></li> </ul> <h2><a id="__14" rel="nofollow"></a>第一种 全局注册</h2> <ul> <li>有了上面的图解应该很容易明白这种引入方式的原理了</li> </ul> <pre><code class="prism language-js"><span class="token comment">//全局导入</span><span class="token keyword">import</span><span class="token string">'element-plus/lib/theme-chalk/index.css'</span><span class="token comment">//所有的css</span><span class="token keyword">import</span> ElementPlus<span class="token keyword">from</span><span class="token string">'element-plus'</span><span class="token keyword">const</span> app<span class="token operator">=</span><span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>   app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span><span class="token comment">// 全局使用插件</span></code></pre> <h2><a id="_css_23" rel="nofollow"></a>第二种 按需注册和引入css样式</h2> <pre><code class="prism language-js"><span class="token comment">// 按需引入</span><span class="token keyword">import</span><span class="token string">'element-plus/lib/theme-chalk/base.css'</span><span class="token comment">// 基础cass 圆角等css</span><span class="token keyword">import</span><span class="token string">'element-plus/lib/theme-chalk/el-button.css'</span><span class="token comment">// button 的css</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span> ElButton<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'element-plus'</span><span class="token comment">//导入 button组件</span><span class="token keyword">const</span> app<span class="token operator">=</span><span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token comment">// 组件注册和插件注册都行，自己选一种</span><span class="token comment">//app.component(ElButton.name, ElButton) // 注册组件形式</span>  app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElButton<span class="token punctuation">)</span><span class="token comment">// 使用插件的形式</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/fc3e35802caa459ef8f3b0a87eba1dd5.jpg" alt="vue3引入element-plus的各种方式"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/1e869d8a9f647fdbbee2931d6113dbe8.jpg" alt="vue3引入element-plus的各种方式"></p> <ul> <li>这样就能理解 如何进行按需导入组件了</li> </ul> <h2><a id="_css_37" rel="nofollow"></a>第三种 优雅的按需注册和引入css样式方式</h2> <ul> <li>可以使用 vue add element-plus 自动会生成plugins结构<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/a6a40bd024b09b12b49b50e3aa6a0002.jpg" alt="vue3引入element-plus的各种方式"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/762da26d22a779d3eb7727463672b4ae.jpg" alt="vue3引入element-plus的各种方式"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/9b32508aed185fc673f12e02c30a5f57.jpg" alt="vue3引入element-plus的各种方式"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/adaf8b527c8d86e53375307825f20cca.jpg" alt="vue3引入element-plus的各种方式"></li> </ul> <h3><a id="___43" rel="nofollow"></a><strong>还差自己组件的样式</strong> 利用一个插件 实现自动导入</h3> <pre><code class="prism language-JS">pnpm i babel-plugin-import -D</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/74355c1b1e8aa3ae1514833c0cc17c08.jpg" alt="vue3引入element-plus的各种方式"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/48ce003010ae3740790f6a054be77f10.jpg" alt="vue3引入element-plus的各种方式"></p> <h3><a id="_el__lib__themechalk_50" rel="nofollow"></a>重点<code>一定要对应好，有的版本是直接没有el 开头，或者就没有 lib这个文件 或者 不是叫theme-chalk</code>自己去看看自己下载的包长什么样子的，网上都有对应解决的办法。</h3> <h2><a id="__52" rel="nofollow"></a>第四种 官方推荐的引入</h2> <pre><code class="prism language-js">npm install<span class="token operator">-</span><span class="token constant">D</span> unplugin<span class="token operator">-</span>vue<span class="token operator">-</span>components unplugin<span class="token operator">-</span>auto<span class="token operator">-</span><span class="token keyword">import</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/1de4824e837f809d4f86800a7c3710cf.jpg" alt="vue3引入element-plus的各种方式"><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/41385f53a95de3a618f0cde0faa430aa.jpg" alt="vue3引入element-plus的各种方式"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/0434322f4c8147c32f58f48623696d68.jpg" alt="vue3引入element-plus的各种方式"><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/938377796655752e615e5af3f1b24c45.jpg" alt="vue3引入element-plus的各种方式"></p> <ul> <li>main.js</li> </ul> <pre><code class="prism language-js"><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span> createApp<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vue'</span><span class="token keyword">import</span> App<span class="token keyword">from</span><span class="token string">'./App.vue'</span><span class="token keyword">import</span> router<span class="token keyword">from</span><span class="token string">'@/router/index'</span><span class="token keyword">import</span> store<span class="token keyword">from</span><span class="token string">'./store'</span><span class="token comment">// 全局导入</span><span class="token comment">// import 'element-plus/lib/theme-chalk/index.css' //所有的css</span><span class="token comment">// import ElementPlus from 'element-plus'</span><span class="token comment">// app.use(ElementPlus) // 全局使用插件</span><span class="token comment">// 按需引入</span><span class="token comment">// import 'element-plus/lib/theme-chalk/base.css' // 基础cass 圆角等</span><span class="token comment">// import 'element-plus/lib/theme-chalk/el-button.css' // button 的css</span><span class="token comment">// import { ElButton } from 'element-plus'</span><span class="token keyword">const</span> app<span class="token operator">=</span><span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token comment">// app.component(ElButton.name, ElButton) // 注册组件形式</span><span class="token comment">// app.use(ElButton) // 使用插件的形式</span><span class="token comment">// import { globalRegister } from './plugins'</span><span class="token comment">// app.use(globalRegister)</span>  app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span> app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>store<span class="token punctuation">)</span>  app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span></code></pre> <ul> <li>babel.config.js</li> </ul> <pre><code class="prism language-js">module<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">presets</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">'@vue/cli-plugin-babel/preset'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'import'</span><span class="token punctuation">,</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">libraryName</span><span class="token operator">:</span><span class="token string">'element-plus'</span><span class="token punctuation">,</span><span class="token function-variable function">customStyleName</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">element-plus/lib/theme-chalk/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${<!-- --></span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.css</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre> <ul> <li>vue.config.js</li> </ul> <pre><code class="prism language-js"><span class="token keyword">const</span><span class="token punctuation">{<!-- --></span> defineConfig<span class="token punctuation">}</span><span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@vue/cli-service'</span><span class="token punctuation">)</span><span class="token keyword">const</span> AutoImport<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'unplugin-auto-import/webpack'</span><span class="token punctuation">)</span><span class="token keyword">const</span> Components<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'unplugin-vue-components/webpack'</span><span class="token punctuation">)</span><span class="token keyword">const</span><span class="token punctuation">{<!-- --></span> ElementPlusResolver<span class="token punctuation">}</span><span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'unplugin-vue-components/resolvers'</span><span class="token punctuation">)</span>  module<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">transpileDependencies</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token literal-property property">lintOnSave</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token literal-property property">configureWebpack</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token function">AutoImport</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">resolvers</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token function">ElementPlusResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">Components</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">resolvers</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token function">ElementPlusResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre> </div> 			
                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-402.htm">纳尼！ROOT修改权限不足？提示Operation not permitted？</a></p>
                                                        <p>下一个：<a href="/html/category/article-404.htm">字符串逆序(递归实现)</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3757.htm" title="Python 图_系列之纵横对比  Bellman-Ford 和  Dijkstra 最短路径算法">Python 图_系列之纵横对比  Bellman-Ford 和  Dijkstra 最短路径算法</a></li>
                        <li class="py-2"><a href="/html/category/article-3426.htm" title="springboot 使用 ActiveMQ">springboot 使用 ActiveMQ</a></li>
                        <li class="py-2"><a href="/html/category/article-1324.htm" title="Task提高异步执行效率技巧_C#教程_">Task提高异步执行效率技巧_C#教程_</a></li>
                        <li class="py-2"><a href="/html/category/article-4069.htm" title="Rust如何开发eBPF应用">Rust如何开发eBPF应用</a></li>
                        <li class="py-2"><a href="/html/category/article-1928.htm" title="Java 9中的JShell中的前向参考是什么？">Java 9中的JShell中的前向参考是什么？</a></li>
                        <li class="py-2"><a href="/html/category/article-1913.htm" title="Nacos配置管理基础应用">Nacos配置管理基础应用</a></li>
                        <li class="py-2"><a href="/html/category/article-2531.htm" title="自动化加载Express的路由设置">自动化加载Express的路由设置</a></li>
                        <li class="py-2"><a href="/html/category/article-2241.htm" title="高并发下redis缓存常见问题">高并发下redis缓存常见问题</a></li>
                        <li class="py-2"><a href="/html/category/article-522.htm" title="用字符串中的ASCII值替换所有特殊字符-JavaScript">用字符串中的ASCII值替换所有特殊字符-JavaScript</a></li>
                        <li class="py-2"><a href="/html/category/article-507.htm" title="vue 封装图片路径">vue 封装图片路径</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">2</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            
            </div>
        </div>
    </section>
    
        <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    SwedenAddress 版权所有
                    <br />
                    Powered by WordPress
                </p>
                <div class="col-lg-4 main-social-footer-29">
                    <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                    <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                    <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                    <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                </div>
            </div>
        </div>
    </section>
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-long-arrow-up"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- /move top -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>