<!doctype html>
<html lang="zh-CN">

<head>
    <!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="canonical" href="https://swedenaddress.github.io/html/category/article-3425.htm" />
<link rel="icon" href="/assets/addons/xcblog/img/swedenaddress/favicon.ico" type="image/x-icon"/>
<title>【UWP】实现一个波浪进度条 - SwedenAddress</title>
<link rel="stylesheet" href="/assets/addons/xcblog/css/swedenaddress/style-starter.css">
<link href="https://fonts.googleapis.com/css?family=Josefin+Slab:400,700,700i&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?ff0c66a832e6568df61664f01ded8b73";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="home">
    <section class=" w3l-header-4 header-sticky">
    <header class="absolute-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a class="navbar-brand" href="/">
                        Sweden Address
                    </a>
                                <button class="navbar-toggler bg-gradient collapsed" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="fa icon-expand fa-bars"></span>
                    <span class="fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
        </div>
        </nav>
        </div>
    </header>
</section>
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/jquery-3.3.1.min.js"></script> <!-- Common jquery plugin -->
<!--bootstrap working-->
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/bootstrap.min.js"></script>
<!-- //bootstrap working-->
<!-- disable body scroll which navbar is in active -->
<script>
$(function() {
    $('.navbar-toggler').click(function() {
        $('body').toggleClass('noscroll');
    })
});
</script>
    <!-- breadcrumbs -->
    <section class="w3l-inner-banner-main">
        <div class="about-inner about ">
            <div class="container">
                <div class="main-titles-head text-center">
                    <h1 class="header-name" style="word-break: break-all;">
                        【UWP】实现一个波浪进度条                    </h1>
                    
                </div>
            </div>
        </div>
        <div class="breadcrumbs-sub">
            <div class="container">
                <ul class="breadcrumbs-custom-path">
                    <li class="right-side propClone"><a href="/" class="">首页 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="right-side propClone"><a href="/html/category/" class="">文章分类 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="active ">正文</li>
                </ul>
            </div>
        </div>
        </div>
    </section>
    <!-- breadcrumbs //-->
    <section class="w3l-content-with-photo-4" id="about">
        <div class="content-with-photo4-block ">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<p>好久没写 blog 了，一个是忙，另外一个是觉得没啥好写。废话不多说，直接上效果图：</p> <p><img fetchpriority="high" decoding="async" src="http://img.555519.xyz/uploads3/20220510/404fce0e6affec8977e1c03a1e4c1ce9.jpg" alt="【UWP】实现一个波浪进度条"></p> <p id="1649048519086"> <p>可能看到这波浪线你觉得会很难，但看完这篇 blog 后应该你也会像我一样恍然大悟。图上的图形，我们可以考虑是由 3 条直线和 1 条曲线组成。直线没什么难的，难的是曲线。在曲线这一领域，我们有一种特殊的曲线，叫贝塞尔曲线。</p> <p>在上面这曲线，我们可以对应到的是三次方贝塞尔曲线，它由 4 个点控制，起点、终点和两个控制点。这里我找了一个在线的 demo：https://www.bezier-curve.com/</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/4ffffb2d2649c8c784821ae91578fe0b.jpg" alt="【UWP】实现一个波浪进度条"></p> <p>调整控制点 1（红色）和控制点 2（蓝色）的位置我们可以得到像最开始的图那样的波浪线了。</p> <p>另外，我们也可以注意到一个性质，假如起点、终点、控制点 1 和控制点 2 都在同一条直线上的话，那么我们这条贝塞尔曲线就是一条直线。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/ae03fc3c422933e88e7d46efe4bd3a30.jpg" alt="【UWP】实现一个波浪进度条"></p> <p>按最开始的图的动画，我们最终状态是一条直线，显然就是需要这 4 个点都在同一直线上，然而在动画过程中，我们需要的是一条曲线，也就是说动画过程中它们不会在同一直线上了。我们也可以注意到，在波浪往上涨的时候，左边部分是凸起来的，而右半部分是凹进去的。这对应了控制点 1 是在直线以上，而控制点 2 在直线以下。那么如何在动画里做到呢，很简单，使用缓动函数就行了，让控制点 1 的值更快到达最终目标值，让控制点 2 的值更慢到达最终目标值即可。（当然，单纯使用时间控制也行，在这里我还是用缓动函数）</p> <p>理论已经有了，现在让我们开始编码。</p> <p>新建一个 UWP 项目，然后我们创建一个模板控件，叫 WaveProgressBar。之所以不继承自 ProgressBar，是因为 ProgressBar 上有一个 IsIndeterminate 属性，代表不确定状态，我们的 WaveProgressBar 并不需要，简单起见，我们还是从模板控件开始。</p> <p><img loading="lazy" decoding="async" src="http://img.555519.xyz/uploads3/20220510/71f434e4409f82267798741ac67c54e4.jpg" alt="【UWP】实现一个波浪进度条"></p> <p>接下来我们修改 Generic.xaml 中的控件模板代码</p> <div class="cnblogs_code" style="padding: 5px; border: 1px solid rgba(204, 204, 204, 1); background-color: rgba(245, 245, 245, 1)"> <pre><span style="color: rgba(0, 0, 255, 1)"><</span><span style="color: rgba(128, 0, 0, 1)">Style</span><span style="color: rgba(255, 0, 0, 1)">TargetType</span><span style="color: rgba(0, 0, 255, 1)">="local:WaveProgressBar"</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"><</span><span style="color: rgba(128, 0, 0, 1)">Setter</span><span style="color: rgba(255, 0, 0, 1)">Property</span><span style="color: rgba(0, 0, 255, 1)">="Background"</span><span style="color: rgba(255, 0, 0, 1)"> Value</span><span style="color: rgba(0, 0, 255, 1)">="LightBlue"</span><span style="color: rgba(0, 0, 255, 1)">/></span><span style="color: rgba(0, 0, 255, 1)"><</span><span style="color: rgba(128, 0, 0, 1)">Setter</span><span style="color: rgba(255, 0, 0, 1)">Property</span><span style="color: rgba(0, 0, 255, 1)">="Template"</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"><</span><span style="color: rgba(128, 0, 0, 1)">Setter.Value</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"><</span><span style="color: rgba(128, 0, 0, 1)">ControlTemplate</span><span style="color: rgba(255, 0, 0, 1)">TargetType</span><span style="color: rgba(0, 0, 255, 1)">="local:WaveProgressBar"</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"><</span><span style="color: rgba(128, 0, 0, 1)">Viewbox</span><span style="color: rgba(255, 0, 0, 1)">Stretch</span><span style="color: rgba(0, 0, 255, 1)">="Fill"</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"><</span><span style="color: rgba(128, 0, 0, 1)">Path</span><span style="color: rgba(255, 0, 0, 1)">Width</span><span style="color: rgba(0, 0, 255, 1)">="100"</span><span style="color: rgba(255, 0, 0, 1)">                             Height</span><span style="color: rgba(0, 0, 255, 1)">="100"</span><span style="color: rgba(255, 0, 0, 1)">                             Fill</span><span style="color: rgba(0, 0, 255, 1)">="</span><span style="color: rgba(128, 128, 0, 1)">{TemplateBinding Background}</span><span style="color: rgba(0, 0, 255, 1)">"</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"><</span><span style="color: rgba(128, 0, 0, 1)">Path.Data</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"><</span><span style="color: rgba(128, 0, 0, 1)">PathGeometry</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"><</span><span style="color: rgba(128, 0, 0, 1)">PathGeometry.Figures</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"><</span><span style="color: rgba(128, 0, 0, 1)">PathFigure</span><span style="color: rgba(255, 0, 0, 1)">StartPoint</span><span style="color: rgba(0, 0, 255, 1)">="0,100"</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"><</span><span style="color: rgba(128, 0, 0, 1)">PathFigure.Segments</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"><</span><span style="color: rgba(128, 0, 0, 1)">LineSegment</span><span style="color: rgba(255, 0, 0, 1)">x:Name</span><span style="color: rgba(0, 0, 255, 1)">="PART_LineSegment"</span><span style="color: rgba(255, 0, 0, 1)"> Point</span><span style="color: rgba(0, 0, 255, 1)">="0,50"</span><span style="color: rgba(0, 0, 255, 1)">/></span><span style="color: rgba(0, 0, 255, 1)"><</span><span style="color: rgba(128, 0, 0, 1)">BezierSegment</span><span style="color: rgba(255, 0, 0, 1)">x:Name</span><span style="color: rgba(0, 0, 255, 1)">="PART_BezierSegment"</span><span style="color: rgba(255, 0, 0, 1)">                                                     Point1</span><span style="color: rgba(0, 0, 255, 1)">="35,25"</span><span style="color: rgba(255, 0, 0, 1)">                                                     Point2</span><span style="color: rgba(0, 0, 255, 1)">="65,75"</span><span style="color: rgba(255, 0, 0, 1)">                                                     Point3</span><span style="color: rgba(0, 0, 255, 1)">="100,50"</span><span style="color: rgba(0, 0, 255, 1)">/></span><span style="color: rgba(0, 0, 255, 1)"><</span><span style="color: rgba(128, 0, 0, 1)">LineSegment</span><span style="color: rgba(255, 0, 0, 1)">Point</span><span style="color: rgba(0, 0, 255, 1)">="100,100"</span><span style="color: rgba(0, 0, 255, 1)">/></span><span style="color: rgba(0, 0, 255, 1)"></</span><span style="color: rgba(128, 0, 0, 1)">PathFigure.Segments</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"></</span><span style="color: rgba(128, 0, 0, 1)">PathFigure</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"></</span><span style="color: rgba(128, 0, 0, 1)">PathGeometry.Figures</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"></</span><span style="color: rgba(128, 0, 0, 1)">PathGeometry</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"></</span><span style="color: rgba(128, 0, 0, 1)">Path.Data</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"></</span><span style="color: rgba(128, 0, 0, 1)">Path</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"></</span><span style="color: rgba(128, 0, 0, 1)">Viewbox</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"></</span><span style="color: rgba(128, 0, 0, 1)">ControlTemplate</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"></</span><span style="color: rgba(128, 0, 0, 1)">Setter.Value</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"></</span><span style="color: rgba(128, 0, 0, 1)">Setter</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"></</span><span style="color: rgba(128, 0, 0, 1)">Style</span><span style="color: rgba(0, 0, 255, 1)">></span></pre> </div> <p>这里我使用了一个 Viewbox 以适应 Path 缩放。Path 大小我们定义为 100x100，然后先从左下角 0,100 开始绘制，绘制一条直线到 0,50，接下来绘制我们的贝塞尔曲线，Point3 是终点 100,50，最后我们绘制了一条直线从 100,50 到 100,100。另外因为 PathFigure 默认就是会自动封闭的，所以我们不需要画 100,100 到 0,100 的这一条直线。当然以上这些点的坐标都会在运行期间发生变化是了，这里这些坐标仅仅只是先看看效果。</p> <p>加入如下代码到我们的页面：</p> <div class="cnblogs_code" style="padding: 5px; border: 1px solid rgba(204, 204, 204, 1); background-color: rgba(245, 245, 245, 1)"> <pre><span style="color: rgba(0, 0, 255, 1)"><</span><span style="color: rgba(128, 0, 0, 1)">local:WaveProgressBar</span><span style="color: rgba(255, 0, 0, 1)">Width</span><span style="color: rgba(0, 0, 255, 1)">="200"</span><span style="color: rgba(255, 0, 0, 1)"> Height</span><span style="color: rgba(0, 0, 255, 1)">="300"</span><span style="color: rgba(0, 0, 255, 1)">/></span></pre> </div> <p>运行程序应该会看到如下效果：</p> <p><img loading="lazy" decoding="async" src="http://img.555519.xyz/uploads3/20220510/a6675e5aee660df23fd9d3860a0f71c8.jpg" alt="【UWP】实现一个波浪进度条"></p> <p>接下来我们就可以考虑我们的进度 Progress 属性了，这里我定义 0 代表 0%，1 代表 100%，那 0.5 就是 50% 了。定义如下依赖属性：</p> <div class="cnblogs_code" style="padding: 5px; border: 1px solid rgba(204, 204, 204, 1); background-color: rgba(245, 245, 245, 1)"> <pre><span style="color: rgba(0, 0, 255, 1)">    public</span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> WaveProgressBar : Control     {</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 255, 1)">readonly</span> DependencyProperty ProgressProperty =<span style="color: rgba(0, 0, 0, 1)"> DependencyProperty.Register(             nameof(Progress),</span><span style="color: rgba(0, 0, 255, 1)">typeof</span>(<span style="color: rgba(0, 0, 255, 1)">double</span>),<span style="color: rgba(0, 0, 255, 1)">typeof</span>(WaveProgressBar),<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> PropertyMetadata(0d, OnProgressChanged));</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> WaveProgressBar()         {             DefaultStyleKey</span>=<span style="color: rgba(0, 0, 255, 1)">typeof</span><span style="color: rgba(0, 0, 0, 1)">(WaveProgressBar);         }</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">double</span><span style="color: rgba(0, 0, 0, 1)"> Progress         {</span><span style="color: rgba(0, 0, 255, 1)">get</span> => (<span style="color: rgba(0, 0, 255, 1)">double</span><span style="color: rgba(0, 0, 0, 1)">)GetValue(ProgressProperty);</span><span style="color: rgba(0, 0, 255, 1)">set</span> =><span style="color: rgba(0, 0, 0, 1)"> SetValue(ProgressProperty, value);         }</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> OnProgressChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)         {</span><span style="color: rgba(0, 0, 255, 1)">throw</span><span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> NotImplementedException();         }     }</span></pre> </div> <p>由于我们要对 Path 里面的点进行动画，所以先在 OnApplyTemplate 方法中把它们拿出来。</p> <div class="cnblogs_code" style="padding: 5px; border: 1px solid rgba(204, 204, 204, 1); background-color: rgba(245, 245, 245, 1)"> <pre>    [TemplatePart(Name = LineSegmentTemplateName, Type =<span style="color: rgba(0, 0, 255, 1)">typeof</span><span style="color: rgba(0, 0, 0, 1)">(LineSegment))]     [TemplatePart(Name</span>= BezierSegmentTemplateName, Type =<span style="color: rgba(0, 0, 255, 1)">typeof</span><span style="color: rgba(0, 0, 0, 1)">(BezierSegment))]</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> WaveProgressBar : Control     {</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 255, 1)">readonly</span> DependencyProperty ProgressProperty =<span style="color: rgba(0, 0, 0, 1)"> DependencyProperty.Register(             nameof(Progress),</span><span style="color: rgba(0, 0, 255, 1)">typeof</span>(<span style="color: rgba(0, 0, 255, 1)">double</span>),<span style="color: rgba(0, 0, 255, 1)">typeof</span>(WaveProgressBar),<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> PropertyMetadata(0d, OnProgressChanged));</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">const</span><span style="color: rgba(0, 0, 255, 1)">string</span> BezierSegmentTemplateName =<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">PART_BezierSegment</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">const</span><span style="color: rgba(0, 0, 255, 1)">string</span> LineSegmentTemplateName =<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">PART_LineSegment</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> BezierSegment _bezierSegment;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> LineSegment _lineSegment;</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> WaveProgressBar()         {             DefaultStyleKey</span>=<span style="color: rgba(0, 0, 255, 1)">typeof</span><span style="color: rgba(0, 0, 0, 1)">(WaveProgressBar);         }</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">double</span><span style="color: rgba(0, 0, 0, 1)"> Progress         {</span><span style="color: rgba(0, 0, 255, 1)">get</span> => (<span style="color: rgba(0, 0, 255, 1)">double</span><span style="color: rgba(0, 0, 0, 1)">)GetValue(ProgressProperty);</span><span style="color: rgba(0, 0, 255, 1)">set</span> =><span style="color: rgba(0, 0, 0, 1)"> SetValue(ProgressProperty, value);         }</span><span style="color: rgba(0, 0, 255, 1)">protected</span><span style="color: rgba(0, 0, 255, 1)">override</span><span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> OnApplyTemplate()         {             _lineSegment</span>=<span style="color: rgba(0, 0, 0, 1)"> (LineSegment)GetTemplateChild(LineSegmentTemplateName);             _bezierSegment</span>=<span style="color: rgba(0, 0, 0, 1)"> (BezierSegment)GetTemplateChild(BezierSegmentTemplateName);         }</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> OnProgressChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)         {</span><span style="color: rgba(0, 0, 255, 1)">throw</span><span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> NotImplementedException();         }     }</span></pre> </div> <p>接着我们可以考虑动画部分了，这里应该有两个地方会调用到动画，一个是 OnProgressChanged，Progress 值变动需要触发动画。另一个地方是 OnApplyTemplate，因为控件第一次出现时需要将 Progress 的值立刻同步上去（不然 Progress 跟看上去的不一样），所以这个是瞬时的动画。</p> <p>配合最开始的理论，我们大致可以编写出如下的动画代码：</p> <div class="cnblogs_code" style="padding: 5px; border: 1px solid rgba(204, 204, 204, 1); background-color: rgba(245, 245, 245, 1)"> <pre><span style="color: rgba(0, 0, 255, 1)">        private</span><span style="color: rgba(0, 0, 255, 1)">void</span> PlayAnimation(<span style="color: rgba(0, 0, 255, 1)">bool</span><span style="color: rgba(0, 0, 0, 1)"> isInit)         {</span><span style="color: rgba(0, 0, 255, 1)">if</span> (_lineSegment ==<span style="color: rgba(0, 0, 255, 1)">null</span> || _bezierSegment ==<span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">)             {</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)">;             }</span><span style="color: rgba(0, 0, 255, 1)">var</span> targetY =<span style="color: rgba(128, 0, 128, 1)">100</span> * (<span style="color: rgba(128, 0, 128, 1)">1</span> -<span style="color: rgba(0, 0, 0, 1)"> Progress);</span><span style="color: rgba(0, 0, 255, 1)">var</span> duration =<span style="color: rgba(0, 0, 255, 1)">new</span> Duration(TimeSpan.FromSeconds(isInit ?<span style="color: rgba(128, 0, 128, 1)">0</span> :<span style="color: rgba(128, 0, 128, 1)">0.7</span><span style="color: rgba(0, 0, 0, 1)">));</span><span style="color: rgba(0, 0, 255, 1)">var</span> storyboard =<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Storyboard();</span><span style="color: rgba(0, 0, 255, 1)">var</span> point1Animation =<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> PointAnimation             {                 EnableDependentAnimation</span>=<span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,                 Duration</span>=<span style="color: rgba(0, 0, 0, 1)"> duration,                 To</span>=<span style="color: rgba(0, 0, 255, 1)">new</span> Point(<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">, targetY),                 EasingFunction</span>=<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> BackEase                 {                     Amplitude</span>=<span style="color: rgba(128, 0, 128, 1)">0.5</span><span style="color: rgba(0, 0, 0, 1)">                 }             };             Storyboard.SetTarget(point1Animation, _lineSegment);             Storyboard.SetTargetProperty(point1Animation, nameof(_lineSegment.Point));             storyboard.Children.Add(point1Animation);</span><span style="color: rgba(0, 0, 255, 1)">var</span> point2Animation =<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> PointAnimation             {                 EnableDependentAnimation</span>=<span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,                 Duration</span>=<span style="color: rgba(0, 0, 0, 1)"> duration,                 To</span>=<span style="color: rgba(0, 0, 255, 1)">new</span> Point(<span style="color: rgba(128, 0, 128, 1)">35</span><span style="color: rgba(0, 0, 0, 1)">, targetY),                 EasingFunction</span>=<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> BackEase                 {                     Amplitude</span>=<span style="color: rgba(128, 0, 128, 1)">1.5</span><span style="color: rgba(0, 0, 0, 1)">                 }             };             Storyboard.SetTarget(point2Animation, _bezierSegment);             Storyboard.SetTargetProperty(point2Animation, nameof(_bezierSegment.Point1));             storyboard.Children.Add(point2Animation);</span><span style="color: rgba(0, 0, 255, 1)">var</span> point3Animation =<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> PointAnimation             {                 EnableDependentAnimation</span>=<span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,                 Duration</span>=<span style="color: rgba(0, 0, 0, 1)"> duration,                 To</span>=<span style="color: rgba(0, 0, 255, 1)">new</span> Point(<span style="color: rgba(128, 0, 128, 1)">65</span><span style="color: rgba(0, 0, 0, 1)">, targetY),                 EasingFunction</span>=<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> BackEase                 {                     Amplitude</span>=<span style="color: rgba(128, 0, 128, 1)">0.1</span><span style="color: rgba(0, 0, 0, 1)">                 }             };             Storyboard.SetTarget(point3Animation, _bezierSegment);             Storyboard.SetTargetProperty(point3Animation, nameof(_bezierSegment.Point2));             storyboard.Children.Add(point3Animation);</span><span style="color: rgba(0, 0, 255, 1)">var</span> point4Animation =<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> PointAnimation             {                 EnableDependentAnimation</span>=<span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,                 Duration</span>=<span style="color: rgba(0, 0, 0, 1)"> duration,                 To</span>=<span style="color: rgba(0, 0, 255, 1)">new</span> Point(<span style="color: rgba(128, 0, 128, 1)">100</span><span style="color: rgba(0, 0, 0, 1)">, targetY),                 EasingFunction</span>=<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> BackEase                 {                     Amplitude</span>=<span style="color: rgba(128, 0, 128, 1)">0.5</span><span style="color: rgba(0, 0, 0, 1)">                 }             };             Storyboard.SetTarget(point4Animation, _bezierSegment);             Storyboard.SetTargetProperty(point4Animation, nameof(_bezierSegment.Point3));             storyboard.Children.Add(point4Animation);              storyboard.Begin();         }</span></pre> </div> <p>对于 OnApplyTemplate 的瞬时动画，我们直接设置 Duration 为 0。</p> <p>接下来 4 个点的控制，我们通过使用 BackEase 缓动函数，配上不同的强度（Amplitude）来实现控制点 1 先到达目标，然后是起点和终点同时到达目标，最后控制点 2 到达目标。</p> <p>最后 WaveProgressBar 的完整代码应该是这样的：</p> <div class="cnblogs_code" style="padding: 5px; border: 1px solid rgba(204, 204, 204, 1); background-color: rgba(245, 245, 245, 1)"> <pre>    [TemplatePart(Name = LineSegmentTemplateName, Type =<span style="color: rgba(0, 0, 255, 1)">typeof</span><span style="color: rgba(0, 0, 0, 1)">(LineSegment))]     [TemplatePart(Name</span>= BezierSegmentTemplateName, Type =<span style="color: rgba(0, 0, 255, 1)">typeof</span><span style="color: rgba(0, 0, 0, 1)">(BezierSegment))]</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> WaveProgressBar : Control     {</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 255, 1)">readonly</span> DependencyProperty ProgressProperty =<span style="color: rgba(0, 0, 0, 1)"> DependencyProperty.Register(             nameof(Progress),</span><span style="color: rgba(0, 0, 255, 1)">typeof</span>(<span style="color: rgba(0, 0, 255, 1)">double</span>),<span style="color: rgba(0, 0, 255, 1)">typeof</span>(WaveProgressBar),<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> PropertyMetadata(0d, OnProgressChanged));</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">const</span><span style="color: rgba(0, 0, 255, 1)">string</span> BezierSegmentTemplateName =<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">PART_BezierSegment</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">const</span><span style="color: rgba(0, 0, 255, 1)">string</span> LineSegmentTemplateName =<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">PART_LineSegment</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> BezierSegment _bezierSegment;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> LineSegment _lineSegment;</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> WaveProgressBar()         {             DefaultStyleKey</span>=<span style="color: rgba(0, 0, 255, 1)">typeof</span><span style="color: rgba(0, 0, 0, 1)">(WaveProgressBar);         }</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">double</span><span style="color: rgba(0, 0, 0, 1)"> Progress         {</span><span style="color: rgba(0, 0, 255, 1)">get</span> => (<span style="color: rgba(0, 0, 255, 1)">double</span><span style="color: rgba(0, 0, 0, 1)">)GetValue(ProgressProperty);</span><span style="color: rgba(0, 0, 255, 1)">set</span> =><span style="color: rgba(0, 0, 0, 1)"> SetValue(ProgressProperty, value);         }</span><span style="color: rgba(0, 0, 255, 1)">protected</span><span style="color: rgba(0, 0, 255, 1)">override</span><span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> OnApplyTemplate()         {             _lineSegment</span>=<span style="color: rgba(0, 0, 0, 1)"> (LineSegment)GetTemplateChild(LineSegmentTemplateName);             _bezierSegment</span>=<span style="color: rgba(0, 0, 0, 1)"> (BezierSegment)GetTemplateChild(BezierSegmentTemplateName);              PlayAnimation(</span><span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">);         }</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> OnProgressChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)         {</span><span style="color: rgba(0, 0, 255, 1)">var</span> obj =<span style="color: rgba(0, 0, 0, 1)"> (WaveProgressBar)d;             obj.PlayAnimation(</span><span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">);         }</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">void</span> PlayAnimation(<span style="color: rgba(0, 0, 255, 1)">bool</span><span style="color: rgba(0, 0, 0, 1)"> isInit)         {</span><span style="color: rgba(0, 0, 255, 1)">if</span> (_lineSegment ==<span style="color: rgba(0, 0, 255, 1)">null</span> || _bezierSegment ==<span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">)             {</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)">;             }</span><span style="color: rgba(0, 0, 255, 1)">var</span> targetY =<span style="color: rgba(128, 0, 128, 1)">100</span> * (<span style="color: rgba(128, 0, 128, 1)">1</span> -<span style="color: rgba(0, 0, 0, 1)"> Progress);</span><span style="color: rgba(0, 0, 255, 1)">var</span> duration =<span style="color: rgba(0, 0, 255, 1)">new</span> Duration(TimeSpan.FromSeconds(isInit ?<span style="color: rgba(128, 0, 128, 1)">0</span> :<span style="color: rgba(128, 0, 128, 1)">0.7</span><span style="color: rgba(0, 0, 0, 1)">));</span><span style="color: rgba(0, 0, 255, 1)">var</span> storyboard =<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Storyboard();</span><span style="color: rgba(0, 0, 255, 1)">var</span> point1Animation =<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> PointAnimation             {                 EnableDependentAnimation</span>=<span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,                 Duration</span>=<span style="color: rgba(0, 0, 0, 1)"> duration,                 To</span>=<span style="color: rgba(0, 0, 255, 1)">new</span> Point(<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">, targetY),                 EasingFunction</span>=<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> BackEase                 {                     Amplitude</span>=<span style="color: rgba(128, 0, 128, 1)">0.5</span><span style="color: rgba(0, 0, 0, 1)">                 }             };             Storyboard.SetTarget(point1Animation, _lineSegment);             Storyboard.SetTargetProperty(point1Animation, nameof(_lineSegment.Point));             storyboard.Children.Add(point1Animation);</span><span style="color: rgba(0, 0, 255, 1)">var</span> point2Animation =<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> PointAnimation             {                 EnableDependentAnimation</span>=<span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,                 Duration</span>=<span style="color: rgba(0, 0, 0, 1)"> duration,                 To</span>=<span style="color: rgba(0, 0, 255, 1)">new</span> Point(<span style="color: rgba(128, 0, 128, 1)">35</span><span style="color: rgba(0, 0, 0, 1)">, targetY),                 EasingFunction</span>=<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> BackEase                 {                     Amplitude</span>=<span style="color: rgba(128, 0, 128, 1)">1.5</span><span style="color: rgba(0, 0, 0, 1)">                 }             };             Storyboard.SetTarget(point2Animation, _bezierSegment);             Storyboard.SetTargetProperty(point2Animation, nameof(_bezierSegment.Point1));             storyboard.Children.Add(point2Animation);</span><span style="color: rgba(0, 0, 255, 1)">var</span> point3Animation =<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> PointAnimation             {                 EnableDependentAnimation</span>=<span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,                 Duration</span>=<span style="color: rgba(0, 0, 0, 1)"> duration,                 To</span>=<span style="color: rgba(0, 0, 255, 1)">new</span> Point(<span style="color: rgba(128, 0, 128, 1)">65</span><span style="color: rgba(0, 0, 0, 1)">, targetY),                 EasingFunction</span>=<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> BackEase                 {                     Amplitude</span>=<span style="color: rgba(128, 0, 128, 1)">0.1</span><span style="color: rgba(0, 0, 0, 1)">                 }             };             Storyboard.SetTarget(point3Animation, _bezierSegment);             Storyboard.SetTargetProperty(point3Animation, nameof(_bezierSegment.Point2));             storyboard.Children.Add(point3Animation);</span><span style="color: rgba(0, 0, 255, 1)">var</span> point4Animation =<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> PointAnimation             {                 EnableDependentAnimation</span>=<span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,                 Duration</span>=<span style="color: rgba(0, 0, 0, 1)"> duration,                 To</span>=<span style="color: rgba(0, 0, 255, 1)">new</span> Point(<span style="color: rgba(128, 0, 128, 1)">100</span><span style="color: rgba(0, 0, 0, 1)">, targetY),                 EasingFunction</span>=<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> BackEase                 {                     Amplitude</span>=<span style="color: rgba(128, 0, 128, 1)">0.5</span><span style="color: rgba(0, 0, 0, 1)">                 }             };             Storyboard.SetTarget(point4Animation, _bezierSegment);             Storyboard.SetTargetProperty(point4Animation, nameof(_bezierSegment.Point3));             storyboard.Children.Add(point4Animation);              storyboard.Begin();         }     }</span></pre> </div> <p>修改项目主页面如下：</p> <div class="cnblogs_code" style="padding: 5px; border: 1px solid rgba(204, 204, 204, 1); background-color: rgba(245, 245, 245, 1)"> <pre><span style="color: rgba(0, 0, 255, 1)"><</span><span style="color: rgba(128, 0, 0, 1)">Grid</span><span style="color: rgba(0, 0, 255, 1)">></span><span style="color: rgba(0, 0, 255, 1)"><</span><span style="color: rgba(128, 0, 0, 1)">local:WaveProgressBar</span><span style="color: rgba(255, 0, 0, 1)">Width</span><span style="color: rgba(0, 0, 255, 1)">="200"</span><span style="color: rgba(255, 0, 0, 1)">             Height</span><span style="color: rgba(0, 0, 255, 1)">="300"</span><span style="color: rgba(255, 0, 0, 1)">             Progress</span><span style="color: rgba(0, 0, 255, 1)">="</span><span style="color: rgba(128, 128, 0, 1)">{Binding ElementName=Slider, Path=Value}</span><span style="color: rgba(0, 0, 255, 1)">"</span><span style="color: rgba(0, 0, 255, 1)">/></span><span style="color: rgba(0, 0, 255, 1)"><</span><span style="color: rgba(128, 0, 0, 1)">Slider</span><span style="color: rgba(255, 0, 0, 1)">x:Name</span><span style="color: rgba(0, 0, 255, 1)">="Slider"</span><span style="color: rgba(255, 0, 0, 1)">             Width</span><span style="color: rgba(0, 0, 255, 1)">="200"</span><span style="color: rgba(255, 0, 0, 1)">             Margin</span><span style="color: rgba(0, 0, 255, 1)">="0,0,0,20"</span><span style="color: rgba(255, 0, 0, 1)">             HorizontalAlignment</span><span style="color: rgba(0, 0, 255, 1)">="Center"</span><span style="color: rgba(255, 0, 0, 1)">             VerticalAlignment</span><span style="color: rgba(0, 0, 255, 1)">="Bottom"</span><span style="color: rgba(255, 0, 0, 1)">             Maximum</span><span style="color: rgba(0, 0, 255, 1)">="1"</span><span style="color: rgba(255, 0, 0, 1)">             Minimum</span><span style="color: rgba(0, 0, 255, 1)">="0"</span><span style="color: rgba(255, 0, 0, 1)">             StepFrequency</span><span style="color: rgba(0, 0, 255, 1)">="0.01"</span><span style="color: rgba(0, 0, 255, 1)">/></span><span style="color: rgba(0, 0, 255, 1)"></</span><span style="color: rgba(128, 0, 0, 1)">Grid</span><span style="color: rgba(0, 0, 255, 1)">></span></pre> </div> <p>此时再运行的话，你就会看到如本文开头中动图的效果了。</p> <p>本文的代码也可以在这里找到：https://github.com/h82258652/UWPWaveProgressBar</p> 			
                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-3124.htm">[JVM]java虚拟机运行时数据区域&#8211;程序计数器、虚拟机栈和本地方法栈</a></p>
                                                        <p>下一个：<a href="/html/category/article-3426.htm">springboot 使用 ActiveMQ</a></p>
                                                    </div>

                                                <div class="panel panel-default mt-5">
                            <div class="panel-heading">
                                <h3 class="m-0">推荐文章</h3>
                            </div>
                            <div class="panel-body">
                                <ul class="p-0 x-0">
                                                                        <li class="py-2"><a href="/html/category/article-494.htm">python列表添加数据</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-481.htm">如何在同一个MySQL表中存储固定长度字符串和可变长度字符串？</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-471.htm">linux清理磁盘文件夹方法</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-436.htm">vue-cli@3封装多模块Vuex（vue项目模板封装系列）</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-433.htm">python内置函数有哪些？</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-414.htm">如何用pycharm来查看PyTorch，CUDA版本</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-400.htm">超详细讲解JPA查询数据库</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-373.htm">准确详解：C/C++ float、double数据类型的表示范围及精度</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-344.htm">从源码看ONNXRuntime的执行流程</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-294.htm">浅谈c++的命名空间（namespace）</a></li>
                                                                    </ul>
                            </div>
                        </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2531.htm" title="自动化加载Express的路由设置">自动化加载Express的路由设置</a></li>
                        <li class="py-2"><a href="/html/category/article-4325.htm" title="都挺好苏明玉人物前史（苏明玉）干货满满，">都挺好苏明玉人物前史（苏明玉）干货满满，</a></li>
                        <li class="py-2"><a href="/html/category/article-4125.htm" title="基于vue-seamless-scroll实现无缝滚动效果_vue.js">基于vue-seamless-scroll实现无缝滚动效果_vue.js</a></li>
                        <li class="py-2"><a href="/html/category/article-4588.htm" title="动物疫苗多长时间内打一次 动物疫苗多长时间内打一次最好">动物疫苗多长时间内打一次 动物疫苗多长时间内打一次最好</a></li>
                        <li class="py-2"><a href="/html/category/article-1956.htm" title="企业应用架构研究系列二十八：身份认证 Beginning Out With IdentityServer4">企业应用架构研究系列二十八：身份认证 Beginning Out With IdentityServer4</a></li>
                        <li class="py-2"><a href="/html/category/article-1913.htm" title="Nacos配置管理基础应用">Nacos配置管理基础应用</a></li>
                        <li class="py-2"><a href="/html/category/article-6194.htm" title="瑞鹏宠物医院什么时候上市（瑞鹏宠物医院创始人简历）">瑞鹏宠物医院什么时候上市（瑞鹏宠物医院创始人简历）</a></li>
                        <li class="py-2"><a href="/html/category/article-4069.htm" title="Rust如何开发eBPF应用">Rust如何开发eBPF应用</a></li>
                        <li class="py-2"><a href="/html/category/article-4481.htm" title="动物接种疫苗的方法有几种呢（动物接种疫苗的方法有几种呢图片）">动物接种疫苗的方法有几种呢（动物接种疫苗的方法有几种呢图片）</a></li>
                        <li class="py-2"><a href="/html/category/article-3731.htm" title="夯实基础图解作用域链和闭包">夯实基础图解作用域链和闭包</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">38</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            
            </div>
        </div>
    </section>
    
        <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    SwedenAddress 版权所有
                    <br />
                    Powered by WordPress
                </p>
                <div class="col-lg-4 main-social-footer-29">
                    <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                    <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                    <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                    <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                </div>
            </div>
        </div>
    </section>
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-long-arrow-up"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- /move top -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>