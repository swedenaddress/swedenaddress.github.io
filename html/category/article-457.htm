<!doctype html>
<html lang="zh-CN">

<head>
    <!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="canonical" href="https://swedenaddress.github.io/html/category/article-457.htm" />
<link rel="icon" href="/assets/addons/xcblog/img/swedenaddress/favicon.ico" type="image/x-icon"/>
<title>.NET混合开发解决方案4 WebView2的线程模型 - SwedenAddress</title>
<link rel="stylesheet" href="/assets/addons/xcblog/css/swedenaddress/style-starter.css">
<link href="https://fonts.googleapis.com/css?family=Josefin+Slab:400,700,700i&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?ff0c66a832e6568df61664f01ded8b73";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="home">
    <section class=" w3l-header-4 header-sticky">
    <header class="absolute-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a class="navbar-brand" href="/">
                        Sweden Address
                    </a>
                                <button class="navbar-toggler bg-gradient collapsed" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="fa icon-expand fa-bars"></span>
                    <span class="fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
        </div>
        </nav>
        </div>
    </header>
</section>
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/jquery-3.3.1.min.js"></script> <!-- Common jquery plugin -->
<!--bootstrap working-->
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/bootstrap.min.js"></script>
<!-- //bootstrap working-->
<!-- disable body scroll which navbar is in active -->
<script>
$(function() {
    $('.navbar-toggler').click(function() {
        $('body').toggleClass('noscroll');
    })
});
</script>
    <!-- breadcrumbs -->
    <section class="w3l-inner-banner-main">
        <div class="about-inner about ">
            <div class="container">
                <div class="main-titles-head text-center">
                    <h1 class="header-name" style="word-break: break-all;">
                        .NET混合开发解决方案4 WebView2的线程模型                    </h1>
                    
                </div>
            </div>
        </div>
        <div class="breadcrumbs-sub">
            <div class="container">
                <ul class="breadcrumbs-custom-path">
                    <li class="right-side propClone"><a href="/" class="">首页 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="right-side propClone"><a href="/html/category/" class="">文章分类 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="active ">正文</li>
                </ul>
            </div>
        </div>
        </div>
    </section>
    <!-- breadcrumbs //-->
    <section class="w3l-content-with-photo-4" id="about">
        <div class="content-with-photo4-block ">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="comment_nav_orange"><strong>系列目录【已更新最新开发文章，点击查看详细】</strong></div> <blockquote> <p><span> WebView2控件应用详解系列博客</span></p> <p>.NET桌面程序集成Web网页开发的十种解决方案</p> <p>.NET混合开发解决方案1 WebView2简介</p> <p>.NET混合开发解决方案2 WebView2与Edge浏览器的区别</p> <p>.NET混合开发解决方案3 WebView2的进程模型</p> </blockquote> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">　　WebView2控件基于组件对象模型（COM），必须在单线程单元（STA）线程上运行。<br /></span></p> <div id="comment_nav_green"><strong>线程安全</strong></div> <ul> <li><span style="font-family: "Microsoft YaHei"; font-size: 14px">WebView2必须在使用消息泵的UI线程上创建。所有回调都发生在该线程上，对WebView2的请求必须在该线程上完成。从另一个线程使用WebView2是不安全的。</span></li> <li><span style="font-family: "Microsoft YaHei"; font-size: 14px">唯一的例外是CoreWebView2WebResourceRequest的Content属性。内容属性流是从后台线程读取的。流应该是灵活的，或者应该从后台STA创建，以防止UI线程的性能下降。</span></li> <li><span style="font-family: "Microsoft YaHei"; font-size: 14px">对象属性是单线程的。例如，调用CoreWebView2CookieManager.CookiesAsync（null），从主线程以外的线程获取会成功（即返回cookie）；但是在这样的调用之后尝试访问cookie的属性（例如c.Domain）将引发异常。</span></li> </ul> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">下面以真实项目案例（建筑工程施工图BIM人工智能审查系统）讲解WbView2控件如何实现与网页、宿主程序之间进行线程安全的互相通讯。</span></p> <p><span style="font-size: 16px"><strong><span style="font-family: "Microsoft YaHei"">业务场景1</span></strong></span></p> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">　　项目的某个单体下有建筑、结构、给排水、电器、暖通 5个专业，【图纸信息】模型树中上传了4个模型，底部工具栏中有“查看智能审查结果”按钮。</span></p> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">（1）双击模型节点创建Tab页签，页签中使用WebView2控件加载网页，渲染对应的模型。</span></p> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px"><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/cd6b239e4dfffb548778f43eed71793f.jpg" alt=".NET混合开发解决方案4 WebView2的线程模型" loading="lazy"/></span></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/0ffa706369f4aa54f7bc551971594762.jpg" alt=".NET混合开发解决方案4 WebView2的线程模型"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/f2b15fc3c09267bf26a98e4d92efe4e0.jpg" alt=".NET混合开发解决方案4 WebView2的线程模型"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/7b5d44454bb3fb2fa05285ca6aba4949.jpg" alt=".NET混合开发解决方案4 WebView2的线程模型"></p> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">实现方式如下：</span></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/3e0d513e0c517496c7bd3b01135d19c0.jpg" alt=".NET混合开发解决方案4 WebView2的线程模型"></p> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">首先判断模型是否已经在Tab页中打开并加载，如果已经加载，则直接切换到对应的Tab页。如果未打开则创建新的Tab页，Tab页中创建WebView2控件，使用LoadWebBrowser()方法加载模型。</span></p> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">第2441行代码，将模型与对应的WebView2控件加入集合中，用于在下面的第2个业务场景中。</span></p> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">LoadWebBrowser()方法实现逻辑如下：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">void</span> LoadWebBrowser(WebView2 webView2Control,<span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)"> bimFaceFileId)         {             Node nodeSelected</span>=<span style="color: rgba(0, 0, 0, 1)"> advTree1.SelectedNode;</span><span style="color: rgba(0, 0, 255, 1)">string</span>[] arrTzIdAndSclc = nodeSelected.Name.Split(<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">|</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 0, 255, 1)">string</span> url = ConfigurationManager.AppSettings[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">BIMFaceReviewPath</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">];             url</span>+=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">?fileId=</span><span style="color: rgba(128, 0, 0, 1)">"</span> +<span style="color: rgba(0, 0, 0, 1)"> bimFaceFileId</span>+<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&tzName=</span><span style="color: rgba(128, 0, 0, 1)">"</span> + HttpUtility.UrlEncode(tzName)<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 解决：图纸名称中包含#会截断url</span>                  +<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&xmid=</span><span style="color: rgba(128, 0, 0, 1)">"</span> +<span style="color: rgba(0, 0, 0, 1)"> _xmid</span>+<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&dtgcID=</span><span style="color: rgba(128, 0, 0, 1)">"</span> +<span style="color: rgba(0, 0, 0, 1)"> _dtgcId</span>+<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&tzxxID=</span><span style="color: rgba(128, 0, 0, 1)">"</span> + arrTzIdAndSclc[<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">]</span>+<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&sclc_com=</span><span style="color: rgba(128, 0, 0, 1)">"</span> + arrTzIdAndSclc[<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">]</span>+<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&sczy_com=</span><span style="color: rgba(128, 0, 0, 1)">"</span> +<span style="color: rgba(0, 0, 0, 1)"> _sczy_com</span>+<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&scyjbID=''</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 意见表ID，这里取不到，设置一个空值。在新增意见的时候才会产生</span>                  +<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&scjlbID=</span><span style="color: rgba(128, 0, 0, 1)">"</span> +<span style="color: rgba(0, 0, 0, 1)"> _scjlbID</span>+<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&scr_sf=</span><span style="color: rgba(128, 0, 0, 1)">"</span> +<span style="color: rgba(0, 0, 0, 1)"> _scrsf</span>+<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&scyjbh=</span><span style="color: rgba(128, 0, 0, 1)">"</span> +<span style="color: rgba(0, 0, 0, 1)"> _sclc_com</span>+<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&gclb_com=</span><span style="color: rgba(128, 0, 0, 1)">"</span> +<span style="color: rgba(0, 0, 0, 1)"> _gclb_com</span>+<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&tz_sczy_code=</span><span style="color: rgba(128, 0, 0, 1)">"</span> +<span style="color: rgba(0, 0, 0, 1)"> ((NodeTagObject)advTree1.SelectedNode.Tag).TZ_SCZY_Code</span>+<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&drawingType=BIM</span><span style="color: rgba(128, 0, 0, 1)">"</span>                  +<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&drawingType2=BIM</span><span style="color: rgba(128, 0, 0, 1)">"</span>                  +<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&sclc_is_change=</span><span style="color: rgba(128, 0, 0, 1)">"</span> + (arrTzIdAndSclc[<span style="color: rgba(128, 0, 128, 1)">1</span>].ToInt32() == _sclc_com ?<span style="color: rgba(128, 0, 128, 1)">0</span> :<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">)</span>+<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&bimAnnotationId=''</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">20210621 add by zcn</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 向网页注册C#对象，供JS调用</span><span style="font-size: 16px"><strong>     webView2Control.CoreWebView2.AddHostObjectToScript(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">customWebView2HostObject</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> CustomWebView2HostObject());           webView2Control.Source</span>=<span style="color: rgba(0, 0, 255, 1)">new</span></strong></span><span style="color: rgba(0, 0, 0, 1)"><span style="font-size: 16px"><strong> Uri(url);</strong></span></span><span style="color: rgba(0, 0, 0, 1)">         }</span></pre> </div> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">其中<strong>webView2Control.CoreWebView2.AddHostObjectToScript("customWebView2HostObject", new CustomWebView2HostObject());</strong>是向目标网页中注入宿主绑定对象，用于JS调用C#方法。用于在下面的第2个业务场景中。</span></p> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">（2）单击模型节点创建Tab页，页签中使用WebView2组件加载网页，渲染智能审查结果。</span></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/7e486cb0f86299fc7988478835fc1217.jpg" alt=".NET混合开发解决方案4 WebView2的线程模型"></p> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">实现方式如下：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 查看智能审查引擎结果</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">async</span><span style="color: rgba(0, 0, 255, 1)">void</span> btnQueryAIReviewResult_Click(<span style="color: rgba(0, 0, 255, 1)">object</span><span style="color: rgba(0, 0, 0, 1)"> sender, EventArgs e) {</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">格式： project_id + dtgc_id + sclc + 工程类别，如：00004361-962-0-FJ</span><span style="color: rgba(0, 0, 255, 1)">string</span> batchId = _xmid +<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">-</span><span style="color: rgba(128, 0, 0, 1)">"</span> + _dtgcId +<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">-</span><span style="color: rgba(128, 0, 0, 1)">"</span> + _sclc_com +<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">-</span><span style="color: rgba(128, 0, 0, 1)">"</span> +<span style="color: rgba(0, 0, 0, 1)"> _gclb_com;</span><span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)"> aiResult;</span><span style="color: rgba(0, 0, 255, 1)">int</span> flag = WebDAL.GetModelCheckProgress(batchId,<span style="color: rgba(0, 0, 255, 1)">out</span><span style="color: rgba(0, 0, 0, 1)"> aiResult);</span><span style="color: rgba(0, 0, 255, 1)">if</span> (flag ==<span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)">)     {</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 将结果页面集成到系统客户端进行展示</span>         tabControl_TZ.SelectedTab =<span style="color: rgba(0, 0, 0, 1)"> tabPage_BIM;          SimpleResult</span><<span style="color: rgba(0, 0, 255, 1)">int</span>> sr =<span style="color: rgba(0, 0, 0, 1)"> WebDAL.QueryAIReviewResultFromDB(_xmid, _dtgcId.ToInt32(), _sclc_com, _sczy_com);</span><span style="color: rgba(0, 0, 255, 1)">string</span> urlParas =<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&batch_id=</span><span style="color: rgba(128, 0, 0, 1)">"</span> + batchId +<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&operate_role=ST_ZJ&operator_id=</span><span style="color: rgba(128, 0, 0, 1)">"</span> + Global.gstrUserID +<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&operator_name=</span><span style="color: rgba(128, 0, 0, 1)">"</span> + Global.gstrUserName +<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&operate_major_code=</span><span style="color: rgba(128, 0, 0, 1)">"</span> + _sczy_com +<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&is_confirm=</span><span style="color: rgba(128, 0, 0, 1)">"</span> +<span style="color: rgba(0, 0, 0, 1)"> sr.ResultObject;</span><span style="color: rgba(0, 0, 255, 1)">#region</span> 打开网页<span style="color: rgba(0, 0, 255, 1)">string</span> nameForTab =<span style="color: rgba(0, 0, 0, 1)"> batchId;</span><span style="color: rgba(0, 0, 255, 1)">#region</span>  如果图纸已经打开，则直接切换到目标tab，无需再创建<span style="color: rgba(0, 0, 255, 1)">foreach</span> (TabItem tItem<span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> tabControl_BIMFACE.Tabs)         {</span><span style="color: rgba(0, 0, 255, 1)">if</span> (nameForTab ==<span style="color: rgba(0, 0, 0, 1)"> tItem.Name)             {</span><span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> (dicTzAndWebBrowsers.ContainsKey(nameForTab))                 {                     tabControl_BIMFACE.SelectedTab</span>=<span style="color: rgba(0, 0, 0, 1)"> tItem;                  }</span><span style="color: rgba(0, 0, 255, 1)">else</span><span style="color: rgba(0, 0, 0, 1)">                 {                     MessageBox2.ShowError(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">查看审查意见失败。集合中不存在 WebView2 对象。</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);                 }</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)">;             }         }</span><span style="color: rgba(0, 0, 255, 1)">#endregion</span><span style="color: rgba(0, 0, 255, 1)">if</span> (tabControl_BIMFACE.Tabs.Count ><span style="color: rgba(128, 0, 128, 1)">15</span><span style="color: rgba(0, 0, 0, 1)">)         {             MessageBox2.ShowWarning(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">系统最多只允许打开15个页签。请关闭暂时不用的页签之后再打开新的图纸。</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)">;         }</span><span style="color: rgba(0, 0, 255, 1)">#region</span> 创建新的Tab页签，加载模型并弹出审查意见框<span style="color: rgba(0, 0, 0, 1)">          WebView2 webView2Control</span>=<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> WebView2();         webView2Control.Dock</span>=<span style="color: rgba(0, 0, 0, 1)"> DockStyle.Fill;</span><span style="color: rgba(0, 0, 255, 1)">await</span> webView2Control.EnsureCoreWebView2Async(<span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">);          TabControlPanel tabPanel</span>=<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> TabControlPanel();         tabPanel.Name</span>=<span style="color: rgba(0, 0, 0, 1)"> nameForTab;          TabItem tabItem</span>=<span style="color: rgba(0, 0, 0, 1)"> tabControl_BIMFACE.CreateTab(nameForTab);         tabItem.Name</span>=<span style="color: rgba(0, 0, 0, 1)"> nameForTab;         tabItem.Text</span>=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">智能审查结果[</span><span style="color: rgba(128, 0, 0, 1)">"</span> + _dtgcmc +<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">]</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;         tabItem.AttachedControl</span>=<span style="color: rgba(0, 0, 0, 1)"> tabPanel;          tabPanel.TabItem</span>=<span style="color: rgba(0, 0, 0, 1)"> tabItem;         tabPanel.Dock</span>=<span style="color: rgba(0, 0, 0, 1)"> DockStyle.Fill;          tabPanel.Controls.Add(webView2Control);          tabControl_BIMFACE.Controls.Add(tabPanel);         tabControl_BIMFACE.SelectedTab</span>=<span style="color: rgba(0, 0, 0, 1)"> tabItem;</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 向网页注册C#对象，供JS调用</span>         webView2Control.CoreWebView2.AddHostObjectToScript(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">customWebView2HostObject</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> CustomWebView2HostObject());         webView2Control.Source</span>=<span style="color: rgba(0, 0, 255, 1)">new</span> Uri(aiResult +<span style="color: rgba(0, 0, 0, 1)"> urlParas);</span><span style="color: rgba(0, 0, 255, 1)">#endregion</span><span style="color: rgba(0, 0, 0, 1)">          dicTzAndWebBrowsers.Add(nameForTab, webView2Control);</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 将图纸与浏览器对象加入集合</span><span style="color: rgba(0, 0, 255, 1)">#endregion</span><span style="color: rgba(0, 0, 0, 1)">          LogUtils.Info(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">专家端审查模型-查看智能审查结果地址：</span><span style="color: rgba(128, 0, 0, 1)">"</span> + aiResult +<span style="color: rgba(0, 0, 0, 1)"> urlParas);     }</span><span style="color: rgba(0, 0, 255, 1)">else</span><span style="color: rgba(0, 0, 255, 1)">if</span> (flag ==<span style="color: rgba(128, 0, 128, 1)">0</span> || flag ==<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">)     {         MessageBox2.ShowWarning(aiResult);     }</span><span style="color: rgba(0, 0, 255, 1)">else</span><span style="color: rgba(0, 0, 0, 1)">     {</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> flag == 3 || flag == 4 或者 flag < 0</span><span style="color: rgba(0, 0, 0, 1)">        MessageBox2.ShowError(aiResult);     } }</span></pre> </div> <p><span style="font-size: 16px"><strong><span style="font-family: "Microsoft YaHei"">业务场景2</span></strong></span></p> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">审查专家手动审查模型时，填写完审查意见，点击【保存】按钮后，网页中js调用C#方法，将对应的模型节点的“蓝色加号”图标，修改为“黄色警告”图标，表示该模型有审查意见。</span></p> <p><strong><span style="font-family: "Microsoft YaHei"; font-size: 14px"><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/7226e06142d000423e1106636aa8f66d.jpg" alt=".NET混合开发解决方案4 WebView2的线程模型"></span></strong></p> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">实现逻辑如下:</span></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/bdbb24dc2d8680bef1cddbb50eaed625.jpg" alt=".NET混合开发解决方案4 WebView2的线程模型"></p> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">其中926行是获取注入的自定义宿主绑定对象，927行通过该对象调用C#方法来刷新专家审查意见。CustomWebView2HostObject 类的完整定义如下：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 128, 128, 1)"> 1</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> System;</span><span style="color: rgba(0, 128, 128, 1)"> 2</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> System.Runtime.InteropServices;</span><span style="color: rgba(0, 128, 128, 1)"> 3</span><span style="color: rgba(0, 128, 128, 1)"> 4</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> Zjgsgtsc.Sczj;</span><span style="color: rgba(0, 128, 128, 1)"> 5</span><span style="color: rgba(0, 128, 128, 1)"> 6</span><span style="color: rgba(0, 0, 255, 1)">namespace</span><span style="color: rgba(0, 0, 0, 1)"> Zjgsgtsc.SczjWinFrom</span><span style="color: rgba(0, 128, 128, 1)"> 7</span><span style="color: rgba(0, 0, 0, 1)">{</span><span style="color: rgba(0, 128, 128, 1)"> 8</span><span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(128, 128, 128, 1)"><summary></span><span style="color: rgba(0, 128, 128, 1)"> 9</span><span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 自定义宿主类，用于向网页注册C#对象，供JS调用</span><span style="color: rgba(0, 128, 128, 1)">10</span><span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(128, 128, 128, 1)"></summary></span><span style="color: rgba(0, 128, 128, 1)">11</span><strong><span style="color: rgba(0, 0, 0, 1)">    [ClassInterface(ClassInterfaceType.AutoDual)]</span></strong><span style="color: rgba(0, 128, 128, 1)">12</span><strong> [ComVisible(<span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">)]</span></strong><span style="color: rgba(0, 128, 128, 1)">13</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> CustomWebView2HostObject</span><span style="color: rgba(0, 128, 128, 1)">14</span><span style="color: rgba(0, 0, 0, 1)">    {</span><span style="color: rgba(0, 128, 128, 1)">15</span><span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(128, 128, 128, 1)"><summary></span><span style="color: rgba(0, 128, 128, 1)">16</span><span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> (该方法供网页js调用)网页中保存审查意见后，刷新WinForm中的审查专家意见，以及设置图纸的节点的图标</span><span style="color: rgba(0, 128, 128, 1)">17</span><span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(128, 128, 128, 1)"></summary></span><span style="color: rgba(0, 128, 128, 1)">18</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">string</span> RefreshZJSCYJ(<span style="color: rgba(0, 0, 255, 1)">int</span> dtgcID,<span style="color: rgba(0, 0, 255, 1)">int</span> tzxxID,<span style="color: rgba(0, 0, 255, 1)">int</span> sclc_com,<span style="color: rgba(0, 0, 255, 1)">string</span> sc_action,<span style="color: rgba(0, 0, 255, 1)">string</span> drawingType,<span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)"> drawingType2)</span><span style="color: rgba(0, 128, 128, 1)">19</span><span style="color: rgba(0, 0, 0, 1)">        {</span><span style="color: rgba(0, 128, 128, 1)">20</span><span style="color: rgba(0, 128, 0, 1)">/*</span><span style="color: rgba(0, 128, 0, 1)"> WebView2 是运行在其他线程中的，所以必须使用跨线程的方式进行调用。</span><span style="color: rgba(0, 128, 128, 1)">21</span><span style="color: rgba(0, 128, 0, 1)">            *  否则无法在目标窗体中创建对象，且访问控件的属性值并不是当前运行时的属性值。</span><span style="color: rgba(0, 128, 128, 1)">22</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 128, 128, 1)">23</span><span style="color: rgba(0, 128, 128, 1)">24</span><span style="color: rgba(0, 0, 255, 1)">string</span> name = dtgcID +<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">|</span><span style="color: rgba(128, 0, 0, 1)">"</span> +<span style="color: rgba(0, 0, 0, 1)"> sc_action;</span><span style="color: rgba(0, 128, 128, 1)">25</span><span style="color: rgba(0, 128, 128, 1)">26</span><span style="color: rgba(0, 0, 255, 1)">if</span> (drawingType ==<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">BIM</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)</span><span style="color: rgba(0, 128, 128, 1)">27</span><span style="color: rgba(0, 0, 0, 1)">            {</span><span style="color: rgba(0, 128, 128, 1)">28</span><span style="color: rgba(0, 0, 255, 1)">if</span> (drawingType2 ==<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">BIM</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)</span><span style="color: rgba(0, 128, 128, 1)">29</span><span style="color: rgba(0, 0, 0, 1)">                {</span><span style="color: rgba(0, 128, 128, 1)">30</span>                     name +=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">|BIM</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 128, 128, 1)">31</span><span style="color: rgba(0, 128, 128, 1)">32</span><span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> (frmMain.DicXmDtAndBIMForm.ContainsKey(name))</span><span style="color: rgba(0, 128, 128, 1)">33</span><span style="color: rgba(0, 0, 0, 1)">                    {</span><span style="color: rgba(0, 128, 128, 1)">34</span><span style="color: rgba(0, 0, 255, 1)">var</span> form =<span style="color: rgba(0, 0, 0, 1)"> frmMain.DicXmDtAndBIMForm[name];</span><span style="color: rgba(0, 128, 128, 1)">35</span>                         form.BeginInvoke(<span style="color: rgba(0, 0, 255, 1)">new</span> Action(() =><span style="color: rgba(0, 128, 128, 1)">36</span><span style="color: rgba(0, 0, 0, 1)">                        {</span><span style="color: rgba(0, 128, 128, 1)">37</span>                             form.SetNodeImage(tzxxID +<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">|</span><span style="color: rgba(128, 0, 0, 1)">"</span> + sclc_com,<span style="color: rgba(128, 0, 128, 1)">1</span>);<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">设置图纸节点。标记为有审查意见</span><span style="color: rgba(0, 128, 128, 1)">38</span><span style="color: rgba(0, 128, 128, 1)">39</span>                             form.LoadYjxx();<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">重新加载审查意见列表</span><span style="color: rgba(0, 128, 128, 1)">40</span><span style="color: rgba(0, 128, 128, 1)">41</span><span style="color: rgba(0, 0, 0, 1)">                        }));</span><span style="color: rgba(0, 128, 128, 1)">42</span><span style="color: rgba(0, 0, 0, 1)">                    }</span><span style="color: rgba(0, 128, 128, 1)">43</span><span style="color: rgba(0, 0, 255, 1)">else</span><span style="color: rgba(0, 128, 128, 1)">44</span><span style="color: rgba(0, 0, 0, 1)">                    {</span><span style="color: rgba(0, 128, 128, 1)">45</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 正常情况下，不会走到该逻辑中</span><span style="color: rgba(0, 128, 128, 1)">46</span>                         MessageBox2.ShowError(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">frmMain.DicXmDtAndBIMForm 集合中未找到 Tab 页签。</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)">47</span><span style="color: rgba(0, 0, 0, 1)">                    }</span><span style="color: rgba(0, 128, 128, 1)">48</span><span style="color: rgba(0, 0, 0, 1)">                }</span><span style="color: rgba(0, 128, 128, 1)">49</span><span style="color: rgba(0, 0, 255, 1)">else</span><span style="color: rgba(0, 128, 128, 1)">50</span><span style="color: rgba(0, 0, 0, 1)">                {</span><span style="color: rgba(0, 128, 128, 1)">51</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 正常情况下，不会走到该逻辑中</span><span style="color: rgba(0, 128, 128, 1)">52</span>                     MessageBox2.ShowError(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">frmMain.DicXmDtAndBIMForm 集合中未找到 Tab 页签。</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)">53</span><span style="color: rgba(0, 0, 0, 1)">                }</span><span style="color: rgba(0, 128, 128, 1)">54</span><span style="color: rgba(0, 0, 0, 1)">            }</span><span style="color: rgba(0, 128, 128, 1)">55</span><span style="color: rgba(0, 128, 128, 1)">56</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">.Empty;</span><span style="color: rgba(0, 128, 128, 1)">57</span><span style="color: rgba(0, 0, 0, 1)">        }</span><span style="color: rgba(0, 128, 128, 1)">58</span><span style="color: rgba(0, 0, 0, 1)">    }</span><span style="color: rgba(0, 128, 128, 1)">59</span> }</pre> </div> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">重要提醒：</span></p> <ul> <li><span style="font-size: 14px; font-family: "Microsoft YaHei"">主窗体中创建了多个Tab页，每个Tab页中包含一个模型与对应的WebView2控件。在某个模型网页中审查，点击保存按钮后需要转到Form窗体中找到对应的模型节点。所以首先找到该模型对应的WebView2组件，如34行代码。</span></li> <li><span style="font-size: 14px; font-family: "Microsoft YaHei"">第35行，Form窗体程序运行在主线程（UI线程）中，WebView2 是运行在其他线程中的。form.BeginInvoke() 方法获取<span style="color: rgba(255, 0, 0, 1)">创建控件(WebView2)的基础句柄所在的线程(主线程，UI线程)</span>，然后异步执行委托，委托中调用窗体中的业务方法实现审查意见列表的更新与节点图标的更换。</span></li> <li><span style="font-family: "Microsoft YaHei"; font-size: 14px">自定义的&nbsp;CustomWebView2HostObject 类，必须标记&nbsp;[ClassInterface(ClassInterfaceType.AutoDual)]、[ComVisible(true)] 特性，否则JS无法访问到该类，如代码中11、12行。</span></li> </ul> <div id="comment_nav_green"><strong>重新进入</strong></div> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">　　回调（包括事件处理程序和完成处理程序）是连续运行的。运行事件处理程序并开始消息循环后，事件处理程序或完成回调不能以重入方式运行。如果WebView2应用程序试图在WebView2事件处理程序中同步创建嵌套的消息循环或模式UI，这种方法会导致尝试重新进入。WebView2不支持这种可重入性，它会无限期地将事件处理程序留在堆栈中。<br /></span></p> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">例如，不支持以下编码方法：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">void</span> Btn_Click(<span style="color: rgba(0, 0, 255, 1)">object</span><span style="color: rgba(0, 0, 0, 1)"> sender, EventArgs e) {</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 点击按钮时，向网页提交消息</span><span style="color: rgba(0, 0, 255, 1)">this</span>.webView2Control.ExecuteScriptAsync(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">window.chrome.webview.postMessage(\"<strong>Open Dialog</strong>\");</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">); }</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">void</span> CoreWebView2_WebMessageReceived(<span style="color: rgba(0, 0, 255, 1)">object</span><span style="color: rgba(0, 0, 0, 1)"> sender, CoreWebView2WebMessageReceivedEventArgs e) {</span><span style="color: rgba(0, 0, 255, 1)">string</span> msg =<span style="color: rgba(0, 0, 0, 1)"> e.TryGetWebMessageAsString();</span><span style="color: rgba(0, 0, 255, 1)">if</span> (msg ==<span style="color: rgba(128, 0, 0, 1)">"</span><strong><span style="color: rgba(128, 0, 0, 1)">Open Dialog</span></strong><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)    {       Form1 form</span>=<span style="color: rgba(0, 0, 255, 1)">new</span> Form1();<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 当收到web消息时，创建一个包含新WebView2实例的新窗体。</span>       form.ShowDialog();<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 这将导致重入问题，并导致模式对话框中新创建的WebView2控件挂起。</span><span style="color: rgba(0, 0, 0, 1)">   } }</span></pre> </div> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">相反，请安排在完成事件处理程序后执行的相应工作，如以下代码所示：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">void</span> CoreWebView2_WebMessageReceived(<span style="color: rgba(0, 0, 255, 1)">object</span><span style="color: rgba(0, 0, 0, 1)"> sender, CoreWebView2WebMessageReceivedEventArgs e) {</span><span style="color: rgba(0, 0, 255, 1)">string</span> msg =<span style="color: rgba(0, 0, 0, 1)"> e.TryGetWebMessageAsString();</span><span style="color: rgba(0, 0, 255, 1)">if</span> (msg ==<span style="color: rgba(128, 0, 0, 1)">"</span><strong><span style="color: rgba(128, 0, 0, 1)">Open Dialog</span></strong><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)    {</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 在当前事件处理程序完成后显示一个模式对话框，以避免在WebView2事件处理程序中运行嵌套的消息循环导致潜在的重入问题</span>       System.Threading.SynchronizationContext.Current.Post((_) =><span style="color: rgba(0, 0, 0, 1)"> {          Form1 form</span>=<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Form1();          form.ShowDialog();          form.Closed();       },</span><span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">);    } }</span></pre> </div> <blockquote> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">对于 WinForms 和 WPF 应用，若要获取用于调试的完整调用堆栈，必须为 WebView2 应用启用本机代码调试，如下所示：</span></p> <ol> <li><span style="font-family: "Microsoft YaHei"; font-size: 14px">在Visual Studio中打开 WebView2 项目。</span></li> <li><span style="font-family: "Microsoft YaHei"; font-size: 14px">在解决方案资源管理器中，右键单击 WebView2 项目，然后选择&nbsp;“属性”。</span></li> <li><span style="font-family: "Microsoft YaHei"; font-size: 14px">选择&nbsp;“调试&nbsp;”选项卡，然后选中&nbsp;“启用本机代码调试&nbsp;”复选框，如下所示。</span></li> </ol> <p><span><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/8955b9f3a8f0b8dc5725b11798ce1310.jpg" alt=".NET混合开发解决方案4 WebView2的线程模型"></span></p> </blockquote> <div id="comment_nav_green"><strong><strong>延期</strong></strong></div> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">　　一些WebView2事件读取在相关事件参数上设置的值，或者在事件处理程序完成后启动一些操作。如果还需要运行异步操作，例如事件处理程序，请对关联事件的事件参数使用GetDeferral()方法。返回的延迟对象确保在请求延迟的complete方法之前，事件处理程序不会被认为是已完成的。</span></p> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">　例如，可以使用 NewWindowRequested 事件提供CoreWebView2对象，以便在事件处理程序完成时作为子窗口进行连接。但是，如果需要异步创建CoreWebView2，则应该在 NewWindowRequestedEventArgs 上调用 GetDeleral() 方法。异步创建 CoreWebView2对象 并在 NewWindowRequestedEventArgs上设置 NewWindow 属性后，对 GetDeferral() 方法返回的延迟对象调用Complete方法()。</span></p> <ul> <li><strong><span style="font-family: "Microsoft YaHei"; font-size: 14px">C#语言中的延迟</span></strong></li> </ul> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">　　在 C# 中使用 Deferral 时，最佳做法是将其与using块一起使用。 即使在using块中间引发异常，该using块也可确保Deferral已完成。&nbsp;相反，如果显式调用Complete()的代码，但在完成调用之前引发了异常，那么延迟直到一段时间后才完成，此时垃圾收集器最终会收集并处理延迟。在此期间，WebView2会等待应用程序代码处理事件。</span></p> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">　　例如，不要执行以下操作，因为如果在调用 Complete之前出现异常， WebResourceRequested 则事件不会被视为“已处理”，并阻止 WebView2 呈现该 Web 内容。</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">async</span><span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> WebView2WebResourceRequestedHandler(CoreWebView2 sender,CoreWebView2WebResourceRequestedEventArgs eventArgs) {</span><span style="color: rgba(0, 0, 255, 1)">var</span> deferral =<span style="color: rgba(0, 0, 0, 1)"> eventArgs.GetDeferral();    args.Response</span>=<span style="color: rgba(0, 0, 255, 1)">await</span><span style="color: rgba(0, 0, 0, 1)"> CreateResponse(eventArgs);</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 不建议调用Complete，因为如果CreateResponse引发异常，则延迟不会完成。</span><span style="color: rgba(0, 0, 0, 1)">   deferral.Complete(); }</span></pre> </div> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">请改用块<code>using</code>&nbsp;，如以下示例所示。 无论是否存在异常，该<code>using</code>&nbsp;块都可确保<code>Deferral</code>&nbsp;已完成。</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">async</span><span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> WebView2WebResourceRequestedHandler(CoreWebView2 sender,                            CoreWebView2WebResourceRequestedEventArgs eventArgs) {</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> using块确保延迟完成，而不管是否存在异常。</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> (eventArgs.GetDeferral())    {       args.Response</span>=<span style="color: rgba(0, 0, 255, 1)">await</span><span style="color: rgba(0, 0, 0, 1)"> CreateResponse(eventArgs);    } }</span></pre> </div> <div id="comment_nav_green"><strong>延期阻止UI线程</strong></div> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">　　WebView2 依赖于 UI 线程的消息泵来运行事件处理程序回调和异步方法完成回调。 如果使用阻止消息泵的方法（例如<code>Task.Result</code>&nbsp;或<code>WaitForSingleObject</code>），则 WebView2 事件处理程序和异步方法完成处理程序不会运行。 例如，以下代码未完成，因为<code>Task.Result</code>&nbsp;在等待<code>ExecuteScriptAsync</code>&nbsp;完成时停止消息泵。 由于消息泵被阻止，<code>ExecuteScriptAsync</code>&nbsp;因此无法完成。</span></p> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">例如，以下代码不起作用，因为它使用<code>Task.Result</code>。</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">void</span> Button_Click(<span style="color: rgba(0, 0, 255, 1)">object</span><span style="color: rgba(0, 0, 0, 1)"> sender, EventArgs e) {</span><span style="color: rgba(0, 0, 255, 1)">string</span> result = webView2Control.CoreWebView2.ExecuteScriptAsync(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">'test'</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">).Result;     MessageBox.Show(</span><span style="color: rgba(0, 0, 255, 1)">this</span>, result,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Script Result</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">); }</span></pre> </div> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">相反，请使用异步<code>await</code>机制，例如<code>async、await</code>，不会阻止消息泵或 UI 线程。 例如：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">async</span><span style="color: rgba(0, 0, 255, 1)">void</span> Button_Click(<span style="color: rgba(0, 0, 255, 1)">object</span><span style="color: rgba(0, 0, 0, 1)"> sender, EventArgs e) {</span><span style="color: rgba(0, 0, 255, 1)">string</span> result =<span style="color: rgba(0, 0, 255, 1)">await</span> webView2Control.CoreWebView2.ExecuteScriptAsync(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">'test'</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);     MessageBox.Show(</span><span style="color: rgba(0, 0, 255, 1)">this</span>, result,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Script Result</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">); }</span></pre> </div> <p><span style="font-family: "Microsoft YaHei"; font-size: 14px">审图系统业务中创建WebView2控件并初始化CoreWebView2属性以及执行JS脚本时都是使用异步方式</span></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/eb3d0a03cc29549de76a093609bc5f64.jpg" alt=".NET混合开发解决方案4 WebView2的线程模型"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/f05ab309703876e502ce5317c38dbd35.jpg" alt=".NET混合开发解决方案4 WebView2的线程模型"></p> 			
                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-456.htm">Java程序扩展给范围的数字</a></p>
                                                        <p>下一个：<a href="/html/category/article-458.htm">nohup: ignoring input and redirecting stderr to stdout报错</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6063.htm" title="王允海动物医院(道里店)怎么样（王允海宠物医院）">王允海动物医院(道里店)怎么样（王允海宠物医院）</a></li>
                        <li class="py-2"><a href="/html/category/article-3124.htm" title="[JVM]java虚拟机运行时数据区域&#8211;程序计数器、虚拟机栈和本地方法栈">[JVM]java虚拟机运行时数据区域&#8211;程序计数器、虚拟机栈和本地方法栈</a></li>
                        <li class="py-2"><a href="/html/category/article-5571.htm" title="附近的宠物领养中心地址（附近领养宠物小猫）">附近的宠物领养中心地址（附近领养宠物小猫）</a></li>
                        <li class="py-2"><a href="/html/category/article-4324.htm" title="动物疫苗证明怎么写（动物疫苗证明怎么写的）">动物疫苗证明怎么写（动物疫苗证明怎么写的）</a></li>
                        <li class="py-2"><a href="/html/category/article-3123.htm" title="Python调用C语言方法">Python调用C语言方法</a></li>
                        <li class="py-2"><a href="/html/category/article-4588.htm" title="动物疫苗多长时间内打一次 动物疫苗多长时间内打一次最好">动物疫苗多长时间内打一次 动物疫苗多长时间内打一次最好</a></li>
                        <li class="py-2"><a href="/html/category/article-1632.htm" title="MongoDB利用oplog恢复数据的方法_MongoDB_">MongoDB利用oplog恢复数据的方法_MongoDB_</a></li>
                        <li class="py-2"><a href="/html/category/article-1955.htm" title="@DateTimeFormat 和 @JsonFormat 注解">@DateTimeFormat 和 @JsonFormat 注解</a></li>
                        <li class="py-2"><a href="/html/category/article-6001.htm" title="动物疫苗的正确使用方法视频讲解大全（动物疫苗的正确使用方法视频讲解大全图片）">动物疫苗的正确使用方法视频讲解大全（动物疫苗的正确使用方法视频讲解大全图片）</a></li>
                        <li class="py-2"><a href="/html/category/article-1353.htm" title="关于Redis缓存和数据库一致性问题">关于Redis缓存和数据库一致性问题</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            
            </div>
        </div>
    </section>
    
        <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    SwedenAddress 版权所有
                    <br />
                    Powered by WordPress
                </p>
                <div class="col-lg-4 main-social-footer-29">
                    <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                    <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                    <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                    <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                </div>
            </div>
        </div>
    </section>
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-long-arrow-up"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- /move top -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>