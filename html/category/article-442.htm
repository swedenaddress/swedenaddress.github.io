<!doctype html>
<html lang="zh-CN">

<head>
    <!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="canonical" href="https://swedenaddress.github.io/html/category/article-442.htm" />
<link rel="icon" href="/assets/addons/xcblog/img/swedenaddress/favicon.ico" type="image/x-icon"/>
<title>FreeRTOS实时操作系统的内核控制示例解析_操作系统 - SwedenAddress</title>
<link rel="stylesheet" href="/assets/addons/xcblog/css/swedenaddress/style-starter.css">
<link href="https://fonts.googleapis.com/css?family=Josefin+Slab:400,700,700i&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?ff0c66a832e6568df61664f01ded8b73";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="home">
    <section class=" w3l-header-4 header-sticky">
    <header class="absolute-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a class="navbar-brand" href="/">
                        Sweden Address
                    </a>
                                <button class="navbar-toggler bg-gradient collapsed" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="fa icon-expand fa-bars"></span>
                    <span class="fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
        </div>
        </nav>
        </div>
    </header>
</section>
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/jquery-3.3.1.min.js"></script> <!-- Common jquery plugin -->
<!--bootstrap working-->
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/bootstrap.min.js"></script>
<!-- //bootstrap working-->
<!-- disable body scroll which navbar is in active -->
<script>
$(function() {
    $('.navbar-toggler').click(function() {
        $('body').toggleClass('noscroll');
    })
});
</script>
    <!-- breadcrumbs -->
    <section class="w3l-inner-banner-main">
        <div class="about-inner about ">
            <div class="container">
                <div class="main-titles-head text-center">
                    <h1 class="header-name" style="word-break: break-all;">
                        FreeRTOS实时操作系统的内核控制示例解析_操作系统                    </h1>
                    
                </div>
            </div>
        </div>
        <div class="breadcrumbs-sub">
            <div class="container">
                <ul class="breadcrumbs-custom-path">
                    <li class="right-side propClone"><a href="/" class="">首页 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="right-side propClone"><a href="/html/category/" class="">文章分类 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="active ">正文</li>
                </ul>
            </div>
        </div>
        </div>
    </section>
    <!-- breadcrumbs //-->
    <section class="w3l-content-with-photo-4" id="about">
        <div class="content-with-photo4-block ">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li><a href="#_label0" rel="nofollow">前言</a></li> <li><a href="#_label1" rel="nofollow">1.强制上下文切换宏</a></li> <li><a href="#_label2" rel="nofollow">2.进入临界区宏</a></li> <li><a href="#_label3" rel="nofollow">3.退出临界区宏</a></li> <li><a href="#_label4" rel="nofollow">4.禁止可屏蔽中断宏</a></li> <li><a href="#_label5" rel="nofollow">5.使能可屏蔽中断宏</a></li> <li><a href="#_label6" rel="nofollow">6.启动调度器</a></li> <ul class="second_class_ul"> <li><a href="#_lab2_6_0" rel="nofollow">6.1函数描述</a></li> </ul> <li><a href="#_label7" rel="nofollow">7.停止调度器</a></li> <ul class="second_class_ul"> <li><a href="#_lab2_7_1" rel="nofollow">7.1函数描述</a></li> </ul> <li><a href="#_label8" rel="nofollow">8.挂起调度器</a></li> <ul class="second_class_ul"> <li><a href="#_lab2_8_2" rel="nofollow">8.1函数描述</a></li> </ul> <li><a href="#_label9" rel="nofollow">9.恢复被挂起的调度器</a></li> <ul class="second_class_ul"> <li><a href="#_lab2_9_3" rel="nofollow">9.1函数描述</a></li> <li><a href="#_lab2_9_4" rel="nofollow">9.2返回值</a></li> <li><a href="#_lab2_9_5" rel="nofollow">9.3用法举例</a></li> </ul> <li><a href="#_label10" rel="nofollow">10.调整系统节拍</a></li> <ul class="second_class_ul"> <li><a href="#_lab2_10_6" rel="nofollow">10.1函数描述</a></li> <li><a href="#_lab2_10_7" rel="nofollow">10.2参数描述</a></li> <li><a href="#_lab2_10_8" rel="nofollow">10.3用法举例</a></li> </ul> </ul> </div> <p class="maodian"><a name="_label0" rel="nofollow"></a></p> <h2>前言</h2> <p>内核控制的一些功能需要移植层提供，为了方便移植，这些API函数用宏来实现，比如上下文切换、进入和退出临界区、禁止和使能可屏蔽中断。内核控制函数还包括启动和停止调度器、挂起和恢复调度器以及用于低功耗模式的调整系统节拍函数。</p> <p class="maodian"><a name="_label1" rel="nofollow"></a></p> <h2>1.强制上下文切换宏</h2> <p>taskYIELD：用于强制上下文切换的宏。在中断服务程序中的等价版本为portYIELD_FROM_ISR，这也是个宏，其实现取决于移植层。</p> <p>用于上下文切换的实际代码由移植层提供。对于Cortex-M3硬件，这个宏会引起PendSV中断。</p> <p class="maodian"><a name="_label2" rel="nofollow"></a></p> <h2>2.进入临界区宏</h2> <p>taskENTER_CRITICAL：用于进入临界区的宏。在临界区中不会发生上下文切换。</p> <p>进入临界区的实际代码由移植层提供，对于Cortex-M3硬件，先禁止所有RTOS可屏蔽中断，这可以通过向basepri 寄存器写入configMAX_SYSCALL_INTERRUPT_PRIORITY来实现。</p> <p>basepri寄存器被设置成某个值后，所有优先级号大于等于此值的中断都被禁止，但若被设置为0，则不关闭任何中断，0为默认值。然后临界区嵌套计数器增1。</p> <p class="maodian"><a name="_label3" rel="nofollow"></a></p> <h2>3.退出临界区宏</h2> <p>taskEXIT_CRITICAL：用于退出临界区的宏。</p> <p>退出临界区的实际代码有移植层提供，对于Cortex-M3硬件，先将临界区嵌套计数器减1，如果临界区计数器为零，则使能所有RTOS可屏蔽中断，这可以通过向basepri 寄存器写入0来实现。</p> <p class="maodian"><a name="_label4" rel="nofollow"></a></p> <h2>4.禁止可屏蔽中断宏</h2> <p>taskDISABLE_INTERRUPTS：禁止所有RTOS可屏蔽中断。</p> <p>在调用宏taskENTER_CRITICAL进入临界区时，也会间接调用该宏禁止所有RTOS可屏蔽中断。</p> <p class="maodian"><a name="_label5" rel="nofollow"></a></p> <h2>5.使能可屏蔽中断宏</h2> <p>taskENABLE_INTERRUPTS：使能所有RTOS可屏蔽中断。</p> <p>在调用宏taskEXIT_CRITICAL退出临界区时，也会间接调用该宏使能所有RTOS可屏蔽中断。</p> <p class="maodian"><a name="_label6" rel="nofollow"></a></p> <h2>6.启动调度器</h2> <p class="maodian"><a name="_lab2_6_0" rel="nofollow"></a></p> <h3>6.1函数描述</h3> <blockquote> <p>void vTaskStartScheduler( void );</p> </blockquote> <p>启动RTOS调度器，之后RTOS内核控制哪个任务执行以及何时执行。</p> <p>当调用vTaskStartScheduler()后，空闲任务被自动创建。</p> <p>如果configUSE_TIMERS被设置为1，定时器后台任务也会被创建。</p> <p>如果vTaskStartScheduler()成功执行，则该函数不会返回，直到有任务调用了vTaskEndScheduler()。</p> <p>如果因为RAM不足而无法创建空闲任务，该函数也可能执行失败，并会立刻返回调用处。</p> <p class="maodian"><a name="_label7" rel="nofollow"></a></p> <h2>7.停止调度器</h2> <p class="maodian"><a name="_lab2_7_1" rel="nofollow"></a></p> <h3>7.1函数描述</h3> <blockquote> <p>void vTaskEndScheduler( void );</p> </blockquote> <p>仅用于x86硬件架构中。</p> <p>停止RTOS内核系统节拍时钟。所有创建的任务自动删除并停止多任务调度。</p> <p class="maodian"><a name="_label8" rel="nofollow"></a></p> <h2>8.挂起调度器</h2> <p class="maodian"><a name="_lab2_8_2" rel="nofollow"></a></p> <h3>8.1函数描述</h3> <blockquote> <p>void vTaskSuspendAll( void );</p> </blockquote> <p>挂起调度器，但不禁止中断。当调度器挂起时，不会进行上下文切换。调度器挂起后，正在执行的任务会一直继续执行，内核不再调度（意味着当前任务不会被切换出去），直到该任务调用了xTaskResumeAll ()函数。</p> <p>内核调度器挂起期间，那些可以引起上下文切换的API函数（如vTaskDelayUntil()、xQueueSend()等）决不可使用。</p> <p class="maodian"><a name="_label9" rel="nofollow"></a></p> <h2>9.恢复被挂起的调度器</h2> <p class="maodian"><a name="_lab2_9_3" rel="nofollow"></a></p> <h3>9.1函数描述</h3> <blockquote> <p>BaseType_t xTaskResumeAll( void );</p> </blockquote> <p>恢复因调用vTaskSuspendAll()函数而挂起的实时内核调度器。</p> <p>xTaskResumeAll()仅恢复调度器，它不会恢复那些被vTaskSuspend()函数挂起的任务。</p> <p class="maodian"><a name="_lab2_9_4" rel="nofollow"></a></p> <h3>9.2返回值</h3> <p>返回pdTRUE 表示恢复调度器引起了一次上下文切换，否则，返回pdFALSE。</p> <p class="maodian"><a name="_lab2_9_5" rel="nofollow"></a></p> <h3>9.3用法举例</h3> <div class="ay1code"> <pre class="brush:cpp;"> voidvTask1( void * pvParameters )   {       for( ;; )       {           /* 任务代码写在这里 */           /* ... */           /* 有些时候，某个任务希望可以连续长时间的运行，但这时不能使用taskENTER_CRITICAL ()/taskEXIT_CRITICAL ()的方法，这样会屏蔽掉中断，引起中断丢失，包括系统节拍时钟。可以使用vTaskSuspendAll ()停止RTOS内核调度：*/           xTaskSuspendAll ();           /* 执行操作代码放在这里。这样不用进入临界区就可以连续长时间执行了。在这期间，中断仍然会得到响应，RTOS内核系统节拍时钟也会继续保持运作 */           /* ... */           /* 操作结束，重新启动RTOS内核 。我们想强制进行一次上下文切换，但是如果恢复调度器的时候已经执行了上下文切换，再执行一次是没有意义的，因此会进行一次判断。*/           if( !xTaskResumeAll () )           {                taskYIELD ();           }       }   }</pre> </div> <p class="maodian"><a name="_label10" rel="nofollow"></a></p> <h2>10.调整系统节拍</h2> <p class="maodian"><a name="_lab2_10_6" rel="nofollow"></a></p> <h3>10.1函数描述</h3> <blockquote> <p>void vTaskStepTick( TickType_txTicksToJump );</p> </blockquote> <p>如果RTOS使能tickless空闲功能，每当只有空闲任务被执行时，系统节拍时钟中断将会停止，微控制器进入低功耗模式。</p> <p>当微控制器退出低功耗后，系统节拍计数器必须被调整，将进入低功耗的时间弥补上。</p> <p>如果FreeRTOS移植文件中定义了宏portSUPPRESS_TICKS_AND_SLEEP()实体，则函数vTaskStepTick用于在这个宏portSUPPRESS_TICKS_AND_SLEEP()实体内部调整系统节拍计数器。</p> <p>函数vTaskStepTick是一个全局函数，所以也可以在宏portSUPPRESS_TICKS_AND_SLEEP()实体中重写该函数。</p> <p>在文件FreeRTOSConfig.h中，宏configUSE_TICKLESS_IDLE必须设置为1，此函数才有效。</p> <p class="maodian"><a name="_lab2_10_7" rel="nofollow"></a></p> <h3>10.2参数描述</h3> <p>xTickToJump：时间值，单位是系统节拍周期，表示微处理器进入低功耗的时间，函数根据这个值来调整系统节拍计数器的值。</p> <p class="maodian"><a name="_lab2_10_8" rel="nofollow"></a></p> <h3>10.3用法举例</h3> <div class="ay1code"> <pre class="brush:cpp;">/* 首先定义宏portSUPPRESS_TICKS_AND_SLEEP()。宏参数指定要进入低功耗（睡眠）的时间，单位是系统节拍周期。*/#defineportSUPPRESS_TICKS_AND_SLEEP( xIdleTime ) vApplicationSleep( xIdleTime ) /* 定义被宏portSUPPRESS_TICKS_AND_SLEEP()调用的函数 */void vApplicationSleep(TickType_t xExpectedIdleTime ){ unsigned long ulLowPowerTimeBeforeSleep,ulLowPowerTimeAfterSleep; /* 从时钟源获取当前时间，当微控制器进入低功耗的时候，这个时钟源必须在运行 */ ulLowPowerTimeBeforeSleep =ulGetExternalTime(); /*停止系统节拍时钟中断。*/ prvStopTickInterruptTimer(); /* 配置一个中断，当指定的睡眠时间达到后，将处理器从低功耗中唤醒。这个中断源必须在微控制器进入低功耗时也可以工作。*/ vSetWakeTimeInterrupt( xExpectedIdleTime ); /*进入低功耗 */ prvSleep(); /* 确定微控制器进入低功耗模式持续的真正时间。因为其它中断也可能使得微处理器退出低功耗模式。注意：在调用宏portSUPPRESS_TICKS_AND_SLEEP()之前，调度器应该被挂起，portSUPPRESS_TICKS_AND_SLEEP()返回后，再将调度器恢复。因此，这个函数未完成前，不会执行其它任务。*/ ulLowPowerTimeAfterSleep =ulGetExternalTime(); /*调整内核系统节拍计数器。*/ vTaskStepTick( ulLowPowerTimeAfterSleep –ulLowPowerTimeBeforeSleep ); /*重新启动系统节拍时钟中断。*/ prvStartTickInterruptTimer();}/* 首先定义宏portSUPPRESS_TICKS_AND_SLEEP()。宏参数指定要进入低功耗（睡眠）的时间，单位是系统节拍周期。*/  #defineportSUPPRESS_TICKS_AND_SLEEP( xIdleTime ) vApplicationSleep( xIdleTime )   /* 定义被宏portSUPPRESS_TICKS_AND_SLEEP()调用的函数 */  void vApplicationSleep(TickType_t xExpectedIdleTime )  {      unsigned long ulLowPowerTimeBeforeSleep,ulLowPowerTimeAfterSleep;       /* 从时钟源获取当前时间，当微控制器进入低功耗的时候，这个时钟源必须在运行 */      ulLowPowerTimeBeforeSleep =ulGetExternalTime();       /*停止系统节拍时钟中断。*/      prvStopTickInterruptTimer();       /* 配置一个中断，当指定的睡眠时间达到后，将处理器从低功耗中唤醒。这个中断源必须在微控制器进入低功耗时也可以工作。*/      vSetWakeTimeInterrupt( xExpectedIdleTime );       /*进入低功耗 */      prvSleep();       /* 确定微控制器进入低功耗模式持续的真正时间。因为其它中断也可能使得微处理器退出低功耗模式。注意：在调用宏portSUPPRESS_TICKS_AND_SLEEP()之前，调度器应该被挂起，portSUPPRESS_TICKS_AND_SLEEP()返回后，再将调度器恢复。因此，这个函数未完成前，不会执行其它任务。*/      ulLowPowerTimeAfterSleep =ulGetExternalTime();              /*调整内核系统节拍计数器。*/      vTaskStepTick( ulLowPowerTimeAfterSleep –ulLowPowerTimeBeforeSleep );      /*重新启动系统节拍时钟中断。*/      prvStartTickInterruptTimer();  }</pre> </div> 			
                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-441.htm">基于mybatis-plus实现多租户级别的数据隔离</a></p>
                                                        <p>下一个：<a href="/html/category/article-443.htm">Kafka 的安装及启动</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-471.htm" title="linux清理磁盘文件夹方法">linux清理磁盘文件夹方法</a></li>
                        <li class="py-2"><a href="/html/category/article-511.htm" title="Java中的多线程你只要看这一篇就够了">Java中的多线程你只要看这一篇就够了</a></li>
                        <li class="py-2"><a href="/html/category/article-484.htm" title="Springboot启动原理详细解析">Springboot启动原理详细解析</a></li>
                        <li class="py-2"><a href="/html/category/article-518.htm" title="使用TreeMap在Java中对用户定义的对象进行排序">使用TreeMap在Java中对用户定义的对象进行排序</a></li>
                        <li class="py-2"><a href="/html/category/article-498.htm" title="js 小案例 跑马灯效果">js 小案例 跑马灯效果</a></li>
                        <li class="py-2"><a href="/html/category/article-527.htm" title="Confluent之Kafka Connector详细分析">Confluent之Kafka Connector详细分析</a></li>
                        <li class="py-2"><a href="/html/category/article-504.htm" title="Infrastructure 知识: dnf对module的处理">Infrastructure 知识: dnf对module的处理</a></li>
                        <li class="py-2"><a href="/html/category/article-503.htm" title="Vue.js 3.x 双向绑定原理_在线工具">Vue.js 3.x 双向绑定原理_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-480.htm" title="JAVA基础小细节——equals()与hashCode()">JAVA基础小细节——equals()与hashCode()</a></li>
                        <li class="py-2"><a href="/html/category/article-523.htm" title="vue &#8211; 如何实现导入excel功能">vue &#8211; 如何实现导入excel功能</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">22</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            
            </div>
        </div>
    </section>
    
        <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    SwedenAddress 版权所有
                    <br />
                    Powered by WordPress
                </p>
                <div class="col-lg-4 main-social-footer-29">
                    <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                    <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                    <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                    <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                </div>
            </div>
        </div>
    </section>
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-long-arrow-up"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- /move top -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>