<!doctype html>
<html lang="zh-CN">

<head>
    <!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="canonical" href="https://swedenaddress.github.io/html/category/article-465.htm" />
<link rel="icon" href="/assets/addons/xcblog/img/swedenaddress/favicon.ico" type="image/x-icon"/>
<title>C语言数据结构、十字链表的分析及实现 - SwedenAddress</title>
<link rel="stylesheet" href="/assets/addons/xcblog/css/swedenaddress/style-starter.css">
<link href="https://fonts.googleapis.com/css?family=Josefin+Slab:400,700,700i&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?ff0c66a832e6568df61664f01ded8b73";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="home">
    <section class=" w3l-header-4 header-sticky">
    <header class="absolute-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a class="navbar-brand" href="/">
                        Sweden Address
                    </a>
                                <button class="navbar-toggler bg-gradient collapsed" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="fa icon-expand fa-bars"></span>
                    <span class="fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
        </div>
        </nav>
        </div>
    </header>
</section>
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/jquery-3.3.1.min.js"></script> <!-- Common jquery plugin -->
<!--bootstrap working-->
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/bootstrap.min.js"></script>
<!-- //bootstrap working-->
<!-- disable body scroll which navbar is in active -->
<script>
$(function() {
    $('.navbar-toggler').click(function() {
        $('body').toggleClass('noscroll');
    })
});
</script>
    <!-- breadcrumbs -->
    <section class="w3l-inner-banner-main">
        <div class="about-inner about ">
            <div class="container">
                <div class="main-titles-head text-center">
                    <h1 class="header-name" style="word-break: break-all;">
                        C语言数据结构、十字链表的分析及实现                    </h1>
                    
                </div>
            </div>
        </div>
        <div class="breadcrumbs-sub">
            <div class="container">
                <ul class="breadcrumbs-custom-path">
                    <li class="right-side propClone"><a href="/" class="">首页 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="right-side propClone"><a href="/html/category/" class="">文章分类 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="active ">正文</li>
                </ul>
            </div>
        </div>
        </div>
    </section>
    <!-- breadcrumbs //-->
    <section class="w3l-content-with-photo-4" id="about">
        <div class="content-with-photo4-block ">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="htmledit_views"> <h1 id="%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95"></h1> <p id="main-toc"><strong>目录</strong></p> <p id="%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95-toc" style="margin-left:0px;"> <p id="%E5%89%8D%E8%A8%80-toc" style="margin-left:0px;">前言</p> <p id="%E4%B8%80%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%E5%8D%81%E5%AD%97%E9%93%BE%E8%A1%A8-toc" style="margin-left:0px;">一、什么是十字链表</p> <p id="%E4%BA%8C%E3%80%81%E4%BD%BF%E7%94%A8%E6%AD%A5%E9%AA%A4-toc" style="margin-left:0px;">二、认识十字链表</p> <p id="1.%E5%BC%95%E5%85%A5%E5%BA%93-toc" style="margin-left:40px;">1.十字链表的组成</p> <p id="2.%E9%A1%B6%E7%82%B9%E5%92%8C%E5%BC%A7%E7%9A%84%E8%BF%9E%E6%8E%A5-toc" style="margin-left:40px;">2.顶点和弧的连接</p> <p id="%E4%B8%89%E3%80%81%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91%E5%AE%9E%E7%8E%B0-toc" style="margin-left:0px;">三、代码逻辑实现</p> <p id="%E5%87%BA%E5%BA%A6-toc" style="margin-left:40px;">1.出度</p> <p id="%C2%A0%E5%85%A5%E5%BA%A6-toc" style="margin-left:40px;">&nbsp;2.入度</p> <p id="%E6%80%BB%E7%BB%93-toc" style="margin-left:0px;">总结</p> <hr id="hr-toc"/> <hr/> <h1 id="%E5%89%8D%E8%A8%80"> 前言</h1> <p><code>&nbsp; 无论是什么程序都要和数据打交道，一个好的程序员会选择更优的数据结构来更好的解决问题，因此数据结构的重要性不言而喻。数据结构的学习本质上是让我们能见到很多前辈在解决一些要求时间和空间的难点问题上设计出的一系列解决方法，我们可以在今后借鉴这些方法，也可以根据这些方法在遇到具体的新问题时提出自己的解决方法。（所以各种定义等字眼就不用过度深究啦，每个人的表达方式不一样而已），在此以下的所有代码都是仅供参考，并不是唯一的答案，只要逻辑上能行的通，写出来的代码能达到相同的结果，并且在复杂度上差不多，就行了。</code></p> <hr/> <h1 id="%E4%B8%80%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%E5%8D%81%E5%AD%97%E9%93%BE%E8%A1%A8"><strong>一、什么是十字链表</strong></h1> <p>在上篇文章的最后，我们分析了邻接表的优劣，邻接表本身并没有什么大的缺陷，如果说有缺点，那么是对于有向图而言对同时表示一个顶点的出度和入度麻烦，因为需要有邻接表和逆邻接表同时表示，而且这种应用场景是存在的。十字链表就是为了使这个问题得到解决而出现的。</p> <p>所以十字链表就是一种将<strong>邻接表和逆邻接表结合在一起</strong>的一种图的存储结构，它针对的就是有向图中出度和入度一起使用的情况，并且大大节省了内存。</p> <h1 id="%E4%BA%8C%E3%80%81%E4%BD%BF%E7%94%A8%E6%AD%A5%E9%AA%A4"> 二、认识十字链表</h1> <h2 id="1.%E5%BC%95%E5%85%A5%E5%BA%93"> 1.十字链表的组成<code class="language-c"> </code><br /> </h2> <p>十字链表是由<strong>数组+链表</strong>的形式构成的，数组用来记录顶点的信息，链表用来记录弧（边）的信息。</p> <p>在有向图中，顶点集的存储结构如下图所示</p> <p class="img-center"><img fetchpriority="high" decoding="async" alt="" height="121" src="http://img.555519.xyz/uploads/20230204/8eceabac70a3932b8d8fcf6604b196dd.jpg"></p> <p>其中data是数据域，用于记录顶点的信息，而firstIn和firstOut是两个指针，指向的是以该节点为弧头（In）或弧尾（Out）的第一节点。</p> <p>&nbsp;对于如此一个有向图而言，弧头和弧尾的概念是人为设置的，在这里我们假定一个顶点的入度指向弧头，出度的方向为弧尾</p> <p class="img-center"><img decoding="async" alt="" height="150" src="http://img.555519.xyz/uploads/20230204/985960c52dc95e4c54d72d7df4bfa8c9.jpg"></p> <p class="img-center"><img decoding="async" alt="" height="300" src="http://img.555519.xyz/uploads/20230204/6138764f1d280b78195652167f4e2664.jpg"></p> <p>&nbsp;它的顶点数组应该这么表示，为了方便讲解，这里我们假定输入的值就是对应的下标，实际上应该通过用户输入的值在顶点数组中找到对应的下标</p> <p class="img-center"><img loading="lazy" decoding="async" alt="" height="160" src="http://img.555519.xyz/uploads/20230204/aadbe42e4a5d5e5f8a7c862620169c75.jpg"></p> <p>代码实现</p> <pre><code class="language-cpp">//顶点集 typedef struct VexNode {     //数据域     int data;     ArcBox* firstIn, *firstOut;//以该节点为弧头或弧尾的首节点 }VexNode;</code></pre> <p>&nbsp;在有向图中每一个顶点与之对应的弧，具体的弧的存储结构如下所示</p> <p class="img-center"><img loading="lazy" decoding="async" alt="" height="133" src="http://img.555519.xyz/uploads/20230204/777928747297862643d3c77cf8ef6214.jpg"></p> <p>其中tailvex表示的是在这一条弧中弧尾节点在顶点数组中对应的下标，headvex表示的是在这一条弧中弧头节点在顶点数组中对应的下标；（实际上应该还有一个代表权值的元素weight，但这里不做描述）</p> <p>代码实现</p> <pre><code class="language-cpp">//边集(弧集) typedef struct ArcBox {     int tailvex, headvex;//弧尾 弧头对应的顶点下标     struct AcrBox* nextIn, *nextOut;//下一个相同尾节点的弧 下一个相同头节点的弧 }ArcBox;</code></pre> <h2 id="2.%E8%AF%BB%E5%85%A5%E6%95%B0%E6%8D%AE"></h2> <p>然而在代码逻辑上，我们还是需要一个抽象结构，也就是可以用一个结构体把顶点集合与弧的集合联系在一起，构建十字链表</p> <pre><code class="language-cpp">#define MAXVEX 200 typedef struct X {     //存储顶点的一维数组     VexNode* Xlist[MAXVEX];     int numV, numA;//顶点数 弧数 }OLGraph;</code></pre> <h2 id="2.%E9%A1%B6%E7%82%B9%E5%92%8C%E5%BC%A7%E7%9A%84%E8%BF%9E%E6%8E%A5">2.顶点和弧的连接</h2> <p>还是对于这样一个有向图，我们以节点V0为例，可以看到与V0有关的弧有四条，分别是：（V0，V1）、（V0，V2）、（V1，V0）、（V3，V0）因为这是一个有向图，所以我们应该以有向图的入度和出度的形式去观察V0节点，很明显（V0，V1）、（V0，V2）两条弧表示V0的出度，而（V1，V0）、（V3，V0）表示的是V0的入度</p> <p class="img-center"><img decoding="async" alt="" height="300" src="http://img.555519.xyz/uploads/20230204/6138764f1d280b78195652167f4e2664.jpg"></p> <p>结合上文的描述，我们可以构建出这个有向图的顶点集合与弧集，我把它们具现化为如下图表</p> <p><img loading="lazy" decoding="async" alt="" height="470" src="http://img.555519.xyz/uploads/20230204/c94b68bcace36224465081b6a0d378f7.jpg"></p> <p>怎么理解这张图表呢？左边的图表表示的是从V0到V3的顶点的集合，data是V0到V3的值；右边的离散的表格代表的就是有向图中一条一条的弧，也就是每个顶点对应的弧的集合</p> <p>我还是以V0为例，对于V0<strong><span style="color:#f3f3f4;"><span style="background-color:#4da8ee;">入度</span></span></strong>节点是V1和V3，<span style="color:#f3f3f4;"><strong><span style="background-color:#fe2c24;">出度</span></strong></span>节点是V1和V2，现在要根据上文的描述，把V0的顶点集合和与V0有关的弧的集合联系起来</p> <p><img loading="lazy" decoding="async" alt="" height="445" src="http://img.555519.xyz/uploads/20230204/0dad8d1026cecb45874281ab8cdd4f59.jpg"><img loading="lazy" decoding="async" alt="" height="455" src="http://img.555519.xyz/uploads/20230204/d36ec31dc9a6fad968f82a9fc88f9bfe.jpg"></p> <p>&nbsp;对于顶点集合的结构来说，firstOut应该指向V0的第一个出度节点，从逻辑上来说没有先后排序，但从代码上的步骤是遍历V0的所有的邻接点去判断，所以这里firstOut应该指向弧（V0，V1），如下图所示</p> <p><img loading="lazy" decoding="async" alt="" class="left" height="121" src="http://img.555519.xyz/uploads/20230204/8eceabac70a3932b8d8fcf6604b196dd.jpg"><img loading="lazy" decoding="async" alt="" class="right" height="133" src="http://img.555519.xyz/uploads/20230204/777928747297862643d3c77cf8ef6214.jpg"></p> <p>&nbsp;<img loading="lazy" decoding="async" alt="" height="200" src="http://img.555519.xyz/uploads/20230204/1bbac8aeca5bebec408bd1fac59f392c.jpg"></p> <p>&nbsp;而在弧集中的结构来说，nextIn表示的是指向下一个相同尾节点的弧，对于弧（V0，V1）和弧（V0，V2）它们都是从V0开始，也就是它们有着同一个尾节点V0，所以弧（V0，V1）的nextIn应该指向的是弧（V0，V2）</p> <p><img loading="lazy" decoding="async" alt="" height="206" src="http://img.555519.xyz/uploads/20230204/46a3af4a255cf5e3b739c4416b0f5150.jpg"></p> <p>对于顶点集合的结构来说，firstIn应该指向V0的第一个入度节点，从逻辑上来说没有先后排序，但从代码上的步骤是遍历V0的所有的邻接点去判断，所以这里firstIn应该指向弧（V1，V0），如下图所示</p> <p><img loading="lazy" decoding="async" alt="" class="left" height="121" src="http://img.555519.xyz/uploads/20230204/8eceabac70a3932b8d8fcf6604b196dd.jpg"><img loading="lazy" decoding="async" alt="" class="right" height="133" src="http://img.555519.xyz/uploads/20230204/777928747297862643d3c77cf8ef6214.jpg"></p> <p>&nbsp;<img loading="lazy" decoding="async" alt="" height="263" src="http://img.555519.xyz/uploads/20230204/81d8a5996948d6dca69db9d4160c2f8d.jpg"></p> <p>&nbsp;&nbsp;而在弧集中的结构来说，nextOut表示的是指向下一个相同头节点的弧，也就是弧头所指向的都是V0的弧，即弧（V1，V0）的nextOut应该指向弧（V3，V0）</p> <p><img loading="lazy" decoding="async" alt="" height="450" src="http://img.555519.xyz/uploads/20230204/305e49a25b88f0cc389b55e0d8fca10b.jpg"></p> <p>这个时候与顶点V0和其有关所有的弧都联系上了。其它的节点同理</p> <h1 id="%E4%B8%89%E3%80%81%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91%E5%AE%9E%E7%8E%B0">三、代码逻辑实现</h1> <p>在代码逻辑上对上文描述的顶点和弧的连接采用了链表中的<strong>头插法，</strong>逻辑比较简单，不清楚的可以在纸上画一画就清楚了</p> <p>（<strong>黑线</strong>代表原来的连接，<strong><span style="color:#fe2c24;">红线</span></strong>或<strong><span style="color:#6eaad7;">蓝色</span></strong>代表头插以后的连接）</p> <h2 id="%E5%87%BA%E5%BA%A6">1.出度</h2> <p>①</p> <p><img loading="lazy" decoding="async" alt="" height="188" src="http://img.555519.xyz/uploads/20230204/07bf369d26b14fb35c3947be6d009abd.jpg"></p> <p>②</p> <p><img loading="lazy" decoding="async" alt="" height="195" src="http://img.555519.xyz/uploads/20230204/ed5ac043efb1a4f844b1bff22a90e926.jpg"></p> <p>&nbsp;③</p> <p><img loading="lazy" decoding="async" alt="" height="199" src="http://img.555519.xyz/uploads/20230204/6fdcff605bcd9ec319084b1d035d7ffc.jpg"></p> <h2 id="%C2%A0%E5%85%A5%E5%BA%A6">&nbsp;2.入度</h2> <p>①</p> <p><img loading="lazy" decoding="async" alt="" height="486" src="http://img.555519.xyz/uploads/20230204/a4c43cca9f639ea5d0313885c3526697.jpg"></p> <p>②</p> <p><img loading="lazy" decoding="async" alt="" height="480" src="http://img.555519.xyz/uploads/20230204/5fe3e2c4f895237c77fb71746a0a16ce.jpg"></p> <p>③</p> <p><img loading="lazy" decoding="async" alt="" height="467" src="http://img.555519.xyz/uploads/20230204/2f97a4bde739aaf1f06b3a67165fd082.jpg"></p> <p>代码实现</p> <pre><code class="language-cpp">void creatDG(OLGraph* G) {     int vi, vj;     //输入有向图的顶点数和边数     scanf_s("%d%d", &G->numV, &G->numA);     //输入顶点集的数据     for(int i = 0; i < G->numV; i++)     {         scanf_s("%d", &G->Xlist[i]->data);         G->Xlist[i]->firstIn = NULL;         G->Xlist[i]->firstOut = NULL;     }     //构建十字链表     for(int i = 0; i < G->numA; i++)     {         //输入值 查找相对应的下标         //这里就当直接输入下标         scanf_s("%d%d", &vi, &vj);         //建立弧的节点         ArcBox* p = (ArcBox*)malloc(sizeof(ArcBox));         p->tailvex = vi;         p->tailvex = vj;         //头插法插入新的边表节点p         p->nextIn = G->Xlist[vj]->firstIn;//指向弧头相同的下一个弧         p->nextOut = G->Xlist[vi]->firstOut;//指向弧尾相同的下一个弧         G->Xlist[vi]->firstOut = G->Xlist[vj]->firstIn = p;      } }</code></pre> <h1 id="%E6%80%BB%E7%BB%93"> 总结</h1> <p><img loading="lazy" decoding="async" alt="" height="466" src="http://img.555519.xyz/uploads/20230204/818f91a6cab62f1ea1c403de1d65a506.jpg">&nbsp;全部代码</p> <pre><code class="language-cpp">#include<stdio.h> #include<stdlib.h> #define MAXVEX 200 //十字链表 //边集(弧集) typedef struct ArcBox {     int tailvex, headvex;//弧尾 弧头对应的顶点下标     struct AcrBox* nextIn, *nextOut;//下一个相同尾节点的弧 下一个相同头节点的弧 }ArcBox; //顶点集 typedef struct VexNode {     //数据域     int data;     ArcBox* firstIn, *firstOut;//以该节点为弧头或弧尾的首节点 }VexNode; //构建十字链表 typedef struct X {     //存储顶点的一维数组     VexNode* Xlist[MAXVEX];     int numV, numA;//顶点数 弧数 }OLGraph;  void creatDG(OLGraph* G) {     int vi, vj;     //输入有向图的顶点数和边数     scanf_s("%d%d", &G->numV, &G->numA);     //输入顶点集的数据     for(int i = 0; i < G->numV; i++)     {         scanf_s("%d", &G->Xlist[i]->data);         G->Xlist[i]->firstIn = NULL;         G->Xlist[i]->firstOut = NULL;     }     //构建十字链表     for(int i = 0; i < G->numA; i++)     {         //输入值 查找相对应的下标         //这里就当直接输入下标         scanf_s("%d%d", &vi, &vj);         //建立弧的节点         ArcBox* p = (ArcBox*)malloc(sizeof(ArcBox));         p->tailvex = vi;         p->tailvex = vj;         //头插法插入新的边表节点p         p->nextIn = G->Xlist[vj]->firstIn;//指向弧头相同的下一个弧         p->nextOut = G->Xlist[vi]->firstOut;//指向弧尾相同的下一个弧         G->Xlist[vi]->firstOut = G->Xlist[vj]->firstIn = p;      } }   </code></pre> <p>如果在一个项目中，需要频繁的对一个图的边（弧）增删改查呢？那么对十字链表来说增加或删除一条边有可能就会牵一发而动全身呢？是不是操作很麻烦？这就是十字链表的缺点，那么又存在什么样的结构可以解决上述问题呢？我们下一篇文章再解析。</p> </p></div> 			
                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-464.htm">Python技法：实现简单的递归下降Parser_在线工具</a></p>
                                                        <p>下一个：<a href="/html/category/article-466.htm">Spring Security核心组件详解</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6846.htm" title="宠物饲料创业计划书 宠物饲料创业计划书怎么写">宠物饲料创业计划书 宠物饲料创业计划书怎么写</a></li>
                        <li class="py-2"><a href="/html/category/article-4445.htm" title="三国杀特殊技能说明书（三国杀特殊技能说明书图片）">三国杀特殊技能说明书（三国杀特殊技能说明书图片）</a></li>
                        <li class="py-2"><a href="/html/category/article-6150.htm" title="上海市青浦区二中分数线是多少分（上海市青浦区二中分数线是多少分啊）">上海市青浦区二中分数线是多少分（上海市青浦区二中分数线是多少分啊）</a></li>
                        <li class="py-2"><a href="/html/category/article-6800.htm" title="农业大学动物医院地址在哪里（农业大学动物医院怎么样）">农业大学动物医院地址在哪里（农业大学动物医院怎么样）</a></li>
                        <li class="py-2"><a href="/html/category/article-6939.htm" title="高宇桥个人资料年龄简介（快来看）高宇桥原名叫什么，丁冬影视，徐若琪，">高宇桥个人资料年龄简介（快来看）高宇桥原名叫什么，丁冬影视，徐若琪，</a></li>
                        <li class="py-2"><a href="/html/category/article-6709.htm" title="宠物店一个月挣5万（宠物店一个月盈利大概是多少）">宠物店一个月挣5万（宠物店一个月盈利大概是多少）</a></li>
                        <li class="py-2"><a href="/html/category/article-4552.htm" title="济南领养宠物的地方 济南领养宠物的地方有哪些">济南领养宠物的地方 济南领养宠物的地方有哪些</a></li>
                        <li class="py-2"><a href="/html/category/article-6194.htm" title="瑞鹏宠物医院什么时候上市（瑞鹏宠物医院创始人简历）">瑞鹏宠物医院什么时候上市（瑞鹏宠物医院创始人简历）</a></li>
                        <li class="py-2"><a href="/html/category/article-4324.htm" title="动物疫苗证明怎么写（动物疫苗证明怎么写的）">动物疫苗证明怎么写（动物疫苗证明怎么写的）</a></li>
                        <li class="py-2"><a href="/html/category/article-4480.htm" title="一岁的猫还用打猫三联吗（一岁的猫还打疫苗吗）">一岁的猫还用打猫三联吗（一岁的猫还打疫苗吗）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">4</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            
            </div>
        </div>
    </section>
    
        <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    SwedenAddress 版权所有
                    <br />
                    Powered by WordPress
                </p>
                <div class="col-lg-4 main-social-footer-29">
                    <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                    <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                    <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                    <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                </div>
            </div>
        </div>
    </section>
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-long-arrow-up"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- /move top -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>