<!doctype html>
<html lang="zh-CN">

<head>
    <!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="canonical" href="https://swedenaddress.github.io/html/category/article-361.htm" />
<link rel="icon" href="/assets/addons/xcblog/img/swedenaddress/favicon.ico" type="image/x-icon"/>
<title>mapreduce读取parquet文件 - SwedenAddress</title>
<link rel="stylesheet" href="/assets/addons/xcblog/css/swedenaddress/style-starter.css">
<link href="https://fonts.googleapis.com/css?family=Josefin+Slab:400,700,700i&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?ff0c66a832e6568df61664f01ded8b73";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="home">
    <section class=" w3l-header-4 header-sticky">
    <header class="absolute-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a class="navbar-brand" href="/">
                        Sweden Address
                    </a>
                                <button class="navbar-toggler bg-gradient collapsed" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="fa icon-expand fa-bars"></span>
                    <span class="fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
        </div>
        </nav>
        </div>
    </header>
</section>
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/jquery-3.3.1.min.js"></script> <!-- Common jquery plugin -->
<!--bootstrap working-->
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/bootstrap.min.js"></script>
<!-- //bootstrap working-->
<!-- disable body scroll which navbar is in active -->
<script>
$(function() {
    $('.navbar-toggler').click(function() {
        $('body').toggleClass('noscroll');
    })
});
</script>
    <!-- breadcrumbs -->
    <section class="w3l-inner-banner-main">
        <div class="about-inner about ">
            <div class="container">
                <div class="main-titles-head text-center">
                    <h1 class="header-name" style="word-break: break-all;">
                        mapreduce读取parquet文件                    </h1>
                    
                </div>
            </div>
        </div>
        <div class="breadcrumbs-sub">
            <div class="container">
                <ul class="breadcrumbs-custom-path">
                    <li class="right-side propClone"><a href="/" class="">首页 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="right-side propClone"><a href="/html/category/" class="">文章分类 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="active ">正文</li>
                </ul>
            </div>
        </div>
        </div>
    </section>
    <!-- breadcrumbs //-->
    <section class="w3l-content-with-photo-4" id="about">
        <div class="content-with-photo4-block ">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="htmledit_views"> <h1>1.添加parquet1.8.1 maven依赖</h1> <p>&lt;parquet.version&gt;1.8.1&lt;/parquet.version&gt;</p> <p>JDateTime 依赖&nbsp; &lt;jodd.version&gt;3.3.8&lt;/jodd.version&gt;</p> <pre class="has"><code class="language-html">&lt;dependency&gt; 	&lt;groupId&gt;org.apache.parquet&lt;/groupId&gt; 	&lt;artifactId&gt;parquet-hadoop&lt;/artifactId&gt; 	&lt;version&gt;${parquet.version}&lt;/version&gt; &lt;/dependency&gt; &lt;!-- jodd --&gt; &lt;dependency&gt; 	&lt;groupId&gt;org.jodd&lt;/groupId&gt; 	&lt;artifactId&gt;jodd&lt;/artifactId&gt; 	&lt;version&gt;${jodd.version}&lt;/version&gt; &lt;/dependency&gt;</code></pre> <h1>2.获取parquet文件的元数据信息（schema）</h1> <pre class="has"><code class="language-java">package mapreduce.job.decodeparquet;  import static org.apache.parquet.format.converter.ParquetMetadataConverter.NO_FILTER;  import java.io.IOException; import java.util.List;  import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.fs.Path; import org.apache.parquet.hadoop.ParquetFileReader; import org.apache.parquet.hadoop.metadata.ParquetMetadata; import org.apache.parquet.schema.MessageType; import org.apache.parquet.schema.Type; /**  * 解析parquet文件  * @author 15257  *  */ public class DecodeParquetApp {  	public static void main(String[] args) { 		 		Configuration conf = new Configuration(); 		String filePath = "D:\\BONC\\Shanxi\\data\\parquet\\002186_0.0"; 		try { 			ParquetMetadata parquetMetadata = ParquetFileReader.readFooter(conf, new Path(filePath), NO_FILTER); 			// 获取 parquet 格式文件的全部 schema 			MessageType schema = parquetMetadata.getFileMetaData().getSchema(); 			System.out.println(schema.toString()); 			List&lt;Type&gt; fields = schema.getFields(); 			for (Type field : fields) { 				System.out.println(field.getName()); 			} 		} catch (IllegalArgumentException e) { 			// TODO Auto-generated catch block 			e.printStackTrace(); 		} catch (IOException e) { 			// TODO Auto-generated catch block 			e.printStackTrace(); 		} 	} }</code></pre> <p><img decoding="async" alt="" class="has" height="112" src="http://img.555519.xyz/uploads3/20220823/4af411c98227831815c1d07f6f8b5c20.jpg"></p> <p><img decoding="async" alt="" class="has" height="134" src="http://img.555519.xyz/uploads3/20220823/3f3e956b226f4033e94a7a3c16fbb3a3.jpg"></p> <p>schema解释</p> <p><strong>message</strong></p> <p>固定声明，就像结构体中的struct一样。</p> <p><strong>hive_schema</strong></p> <p>message name，可以粗暴的理解为表名，因为里面都是field</p> <p><strong>optional，required，repeated</strong></p> <p>这是三种field的关键字，分别表示可选，必选，可重复选</p> <p>可选和必选类似数据库中的nullable，可重复选是为了支持复杂的嵌套结构。</p> <p><strong>field类型</strong></p> <p>目前parquet支持int32,int64,int96(有些系统会把时间戳存成int96如老版hive),float,double,boolean,binary,fixed_len_byte_array。</p> <p>参考类org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName</p> <p><strong>UTF8</strong></p> <p>field的原始类型（Original Type），可以辅助field的type进行细粒度的类型判断。</p> <p>参考类 org.apache.parquet.schema.OriginalType</p> <p><strong>group</strong></p> <p>嵌套结构声明，类似json对象</p> <h1>3.java读parquet文件Demo</h1> <pre class="has"><code class="language-java">package test.parquet;  import java.sql.Timestamp; import java.util.Calendar;  import org.apache.hadoop.fs.Path; import org.apache.parquet.example.data.Group; import org.apache.parquet.example.data.simple.NanoTime; import org.apache.parquet.hadoop.ParquetReader; import org.apache.parquet.hadoop.example.GroupReadSupport; import org.apache.parquet.io.api.Binary;  import jodd.datetime.JDateTime;  public class ParquetReadTest {  	public static final long NANOS_PER_SECOND = 1000000000; 	public static final long SECONDS_PER_MINUTE = 60; 	public static final long MINUTES_PER_HOUR = 60;  	public static void main(String[] args) throws Exception { 		parquetReader("D:\\BONC\\Shanxi\\data\\parquet\\002186_0.0"); 	}  	private static void parquetReader(String inPath) throws Exception { 		GroupReadSupport readSupport = new GroupReadSupport(); 		ParquetReader&lt;Group&gt; reader = ParquetReader.builder(readSupport, new Path(inPath)).build(); 		Group line = null; 		while ((line = reader.read()) != null) { 			System.out.println(getTimestamp(line.getInt96("start_time", 0))); 			return; 		} 	}  	public static long getTimestamp(Binary time) { 		NanoTime nanoTime = NanoTime.fromBinary(time); 		int julianDay = nanoTime.getJulianDay(); 		long timeOfDayNanos = nanoTime.getTimeOfDayNanos(); 		JDateTime jDateTime = new JDateTime((double) julianDay); 		Calendar calendar = Calendar.getInstance(); 		calendar.set(Calendar.YEAR, jDateTime.getYear()); 		// java calender index starting at 1. 		calendar.set(Calendar.MONTH, jDateTime.getMonth() - 1); 		calendar.set(Calendar.DAY_OF_MONTH, jDateTime.getDay()); 		long remainder = timeOfDayNanos; 		int hour = (int) (remainder / (NANOS_PER_SECOND * SECONDS_PER_MINUTE * MINUTES_PER_HOUR)); 		remainder = remainder % (NANOS_PER_SECOND * SECONDS_PER_MINUTE * MINUTES_PER_HOUR); 		int minutes = (int) (remainder / (NANOS_PER_SECOND * SECONDS_PER_MINUTE)); 		remainder = remainder % (NANOS_PER_SECOND * SECONDS_PER_MINUTE); 		int seconds = (int) (remainder / (NANOS_PER_SECOND)); 		long nanos = remainder % NANOS_PER_SECOND; 		calendar.set(Calendar.HOUR_OF_DAY, hour); 		calendar.set(Calendar.MINUTE, minutes); 		calendar.set(Calendar.SECOND, seconds); 		Timestamp ts = new Timestamp(calendar.getTimeInMillis()); 		ts.setNanos((int) nanos); 		return ts.getTime(); 	} }</code></pre> <p>解析结果<br /> Binary{12 constant bytes, [-128, 81, 50, 42, -100, 13, 0, 0, -125, -125, 37, 0]}<br /> NanoTime{julianDay=2458499, timeOfDayNanos=14964374000000}<br /> 2019-01-15 04:09:24.374<br /> 1547496564374</p> <h1>4.mapreduce解析parquet文件Demo</h1> <pre class="has"><code class="language-java">package com.bonc.AiMrLocate.job.parquetTest;  import java.io.IOException; import java.util.Iterator;  import org.apache.commons.lang.ArrayUtils; import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.fs.FileSystem; import org.apache.hadoop.fs.Path; import org.apache.hadoop.io.LongWritable; import org.apache.hadoop.io.Text; import org.apache.hadoop.mapreduce.Job; import org.apache.hadoop.mapreduce.Mapper; import org.apache.hadoop.mapreduce.Reducer; import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat; import org.apache.hadoop.mapreduce.lib.output.TextOutputFormat; import org.apache.parquet.example.data.Group; import org.apache.parquet.hadoop.ParquetInputFormat; import org.apache.parquet.hadoop.api.DelegatingReadSupport; import org.apache.parquet.hadoop.api.InitContext; import org.apache.parquet.hadoop.api.ReadSupport; import org.apache.parquet.hadoop.example.GroupReadSupport; import org.apache.parquet.io.api.Binary;  import com.bonc.AiMrLocate.util.DateUtils;  public class ParquetRunner { 	 	public static class WordCountMap extends Mapper&lt;Void, Group, LongWritable, Text&gt; { 		protected void map(Void key, Group value, Mapper&lt;Void, Group, LongWritable, Text&gt;.Context context) throws IOException, InterruptedException { 			try { 				Binary start_time = value.getInt96("start_time", 0); 				long timestamp = DateUtils.getTimestamp(start_time); 				String imsi = value.getString("imsi",0); 				String mme_group_id = value.getString("mme_group_id",0); 				String mme_code = value.getString("mme_code",0); 				String ue_s1ap_id = value.getString("ue_s1ap_id",0); 				String src_eci = value.getString("src_eci",0); 				context.write(new LongWritable(1),new Text(timestamp+","+imsi+","+mme_group_id+","+mme_code+","+ue_s1ap_id+","+src_eci)); 			} catch (Exception e) { 				return; 			} 		} 	} 	 	public static class WordCountReduce extends Reducer&lt;LongWritable, Text, LongWritable, Text&gt; { 		public void reduce(LongWritable key, Iterable&lt;Text&gt; values, Context context) throws IOException, InterruptedException { 		    Iterator&lt;Text&gt; iterator = values.iterator(); 		    while(iterator.hasNext()){ 		        context.write(key,iterator.next()); 		    } 		} 	} 	 	public static final class MyReadSupport extends DelegatingReadSupport&lt;Group&gt; { 		public MyReadSupport() { 		    super(new GroupReadSupport()); 		} 		 		@Override 		public org.apache.parquet.hadoop.api.ReadSupport.ReadContext init(InitContext context) { 		    return super.init(context); 		} 	} 	 	public static void main(String[] args) throws Exception { 		Configuration conf = new Configuration(); 		String readSchema = ""; 		conf.set(ReadSupport.PARQUET_READ_SCHEMA, readSchema); 		          Job job = new Job(conf);         job.setJarByClass(ParquetRunner.class);         job.setJobName("parquet");          String in = "D:\\Work\\MR定位\\山西\\数据字段说明及样例数据\\信令\\mme\\002186_0";         String  out = "D:\\Work\\MR定位\\山西\\数据字段说明及样例数据\\信令\\mme\\output";                  job.setMapperClass(WordCountMap.class);         job.setInputFormatClass(ParquetInputFormat.class);         ParquetInputFormat.setReadSupportClass(job, MyReadSupport.class);         ParquetInputFormat.addInputPath(job, new Path(in));                  job.setReducerClass(WordCountReduce.class);         job.setOutputFormatClass(TextOutputFormat.class);         FileOutputFormat.setOutputPath(job, new Path(out));                  //判断output文件夹是否存在，如果存在则删除         Path path = new Path(out);         //根据path找到这个文件         FileSystem fileSystem = path.getFileSystem(conf);         if (fileSystem.exists(path)) {             fileSystem.delete(path, true);             System.out.println(out+"已存在，删除");         }          job.waitForCompletion(true); 	} }</code></pre> </div> 			
                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-360.htm">Android开发基础——Activity生命周期</a></p>
                                                        <p>下一个：<a href="/html/category/article-362.htm">Python os.path常用操作</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-519.htm" title="Springboot 整合 xxljob 动态API调度任务(进阶篇)">Springboot 整合 xxljob 动态API调度任务(进阶篇)</a></li>
                        <li class="py-2"><a href="/html/category/article-527.htm" title="Confluent之Kafka Connector详细分析">Confluent之Kafka Connector详细分析</a></li>
                        <li class="py-2"><a href="/html/category/article-490.htm" title="vue实现简单无缝滚动效果_vue.js">vue实现简单无缝滚动效果_vue.js</a></li>
                        <li class="py-2"><a href="/html/category/article-515.htm" title="css文字在图片下方_web前端入门到实战：CSS让文字环绕图片显示">css文字在图片下方_web前端入门到实战：CSS让文字环绕图片显示</a></li>
                        <li class="py-2"><a href="/html/category/article-495.htm" title="python读写hdfs">python读写hdfs</a></li>
                        <li class="py-2"><a href="/html/category/article-791.htm" title="Linux网络——NFS服务">Linux网络——NFS服务</a></li>
                        <li class="py-2"><a href="/html/category/article-521.htm" title="typescript的安装运行与自动编译">typescript的安装运行与自动编译</a></li>
                        <li class="py-2"><a href="/html/category/article-520.htm" title="什么是MySQL ENUM数据类型？使用ENUM数据类型有什么优势？">什么是MySQL ENUM数据类型？使用ENUM数据类型有什么优势？</a></li>
                        <li class="py-2"><a href="/html/category/article-514.htm" title="Windows 系统电脑如何下载安装并运行 Kubectl 查看云服务器 k8s 集群资源">Windows 系统电脑如何下载安装并运行 Kubectl 查看云服务器 k8s 集群资源</a></li>
                        <li class="py-2"><a href="/html/category/article-518.htm" title="使用TreeMap在Java中对用户定义的对象进行排序">使用TreeMap在Java中对用户定义的对象进行排序</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            
            </div>
        </div>
    </section>
    
        <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    SwedenAddress 版权所有
                    <br />
                    Powered by WordPress
                </p>
                <div class="col-lg-4 main-social-footer-29">
                    <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                    <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                    <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                    <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                </div>
            </div>
        </div>
    </section>
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-long-arrow-up"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- /move top -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>