<!doctype html>
<html lang="zh-CN">

<head>
    <!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="canonical" href="https://swedenaddress.github.io/html/category/article-1056.htm" />
<link rel="icon" href="/assets/addons/xcblog/img/swedenaddress/favicon.ico" type="image/x-icon"/>
<title>vue项目的excel的导入与导出 - SwedenAddress</title>
<link rel="stylesheet" href="/assets/addons/xcblog/css/swedenaddress/style-starter.css">
<link href="https://fonts.googleapis.com/css?family=Josefin+Slab:400,700,700i&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?ff0c66a832e6568df61664f01ded8b73";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="home">
    <section class=" w3l-header-4 header-sticky">
    <header class="absolute-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a class="navbar-brand" href="/">
                        Sweden Address
                    </a>
                                <button class="navbar-toggler bg-gradient collapsed" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="fa icon-expand fa-bars"></span>
                    <span class="fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
        </div>
        </nav>
        </div>
    </header>
</section>
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/jquery-3.3.1.min.js"></script> <!-- Common jquery plugin -->
<!--bootstrap working-->
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/bootstrap.min.js"></script>
<!-- //bootstrap working-->
<!-- disable body scroll which navbar is in active -->
<script>
$(function() {
    $('.navbar-toggler').click(function() {
        $('body').toggleClass('noscroll');
    })
});
</script>
    <!-- breadcrumbs -->
    <section class="w3l-inner-banner-main">
        <div class="about-inner about ">
            <div class="container">
                <div class="main-titles-head text-center">
                    <h1 class="header-name" style="word-break: break-all;">
                        vue项目的excel的导入与导出                    </h1>
                    
                </div>
            </div>
        </div>
        <div class="breadcrumbs-sub">
            <div class="container">
                <ul class="breadcrumbs-custom-path">
                    <li class="right-side propClone"><a href="/" class="">首页 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="right-side propClone"><a href="/html/category/" class="">文章分类 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="active ">正文</li>
                </ul>
            </div>
        </div>
        </div>
    </section>
    <!-- breadcrumbs //-->
    <section class="w3l-content-with-photo-4" id="about">
        <div class="content-with-photo4-block ">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="htmledit_views"> <p>在做人力资源管理的后台项目时，实现了excel表的导入导出功能。用到了vue-element-admin提供的框架（链接地址&nbsp;），我们只需要在自己的项目中封装改造即可。</p> <p>下面，来讲一下在项目中实现excel表的导入与导出的步骤。</p> <h2>一、excel的导入</h2> <h3>1.excel导入功能需要使用npm包<strong><code>xlsx</code></strong>，所以需要安装<strong><code>xlsx</code></strong>插件</h3> <pre><code>npm i xlsx</code></pre> <h3>2.将vue-element-admin提供的导入功能新建一个公共组件 ，将组件引入到我们的页面中</h3> <p>（为了让我们的项目每次跳转都跳转到一个统一的页面，我们的项目中封装了单独的路由和页面组件@/views/import/index.vue来放excel导入）</p> <p>注意：这个页面结构用到了element-ui框架，但是如果用的是其他框架只需要改页面结构，逻辑代码是通用的。</p> <p>@/components/UploadExcel/index.vue</p> <p>代码到链接中复制即可，要改动的只有页面结构和样式。（代码地址）</p> <h3>3.实现excel的导入</h3> <p>在我们的import/index.vue组件中，传给UploadExcel/index.vue一个<strong><span style="color:#0d0016;">onsuccess</span></strong>方法，在这个方法里面我们可以拿到excel表的header表头和results表格数据。拿到这些数据就可以根据我们的业务需求来转换数据，来实现我们的业务需求逻辑代码。</p> <p>拿到的数据大概是如下这种：</p> <pre><code>      // 拿到的数据是如下这种，我们要将它转化成我们请求接口中所需要的数据       console.log(header)       // ["手机号", "姓名", "入职日期", "转正日期", "工号", ...]       console.log(results)       // [{入职日期: 'xxx', 姓名: 'xxx', 工号: 'xxx', ...}, {入职日期: 'xxx', 姓名: 'xxx', 工号: 'xxx', ...}]       // 我们需要的数据是如下这种       // [{timeOfEntry: 'xxx', username: 'xxx', workNumber: 'xxx', ...}, {timeOfEntry: 'xxx', username: 'xxx', workNumber: 'xxx', ...}]</code></pre> <p>&nbsp;下面附上整个代码：</p> <pre><code><template>   <upload-excel :on-success="success" /> </template>  <script> // 导入封装的导入excel表组件 import UploadExcel from '@/components/UploadExcel/index' import { importEmployee } from '@/api/employees' export default {   components: {     UploadExcel   },   data() {   },   methods: {     // 要使用这个组件，可以传入beforeUpload和onSuccess这两个函数     // beforeUpload要注意要return一个布尔值     // onSuccess这里面可以拿到表格的header(表头)和results(表格内容)     // 在我们自己的onSuccess函数里，可以拼接出我们需要的结构的数据     async success({ header, results }) {       // 拿到的数据是如下这种，我们要将它转化成我们请求接口中所需要的数据       console.log(header)       // ["手机号", "姓名", "入职日期", "转正日期", "工号", ...]       console.log(results)       // [{入职日期: 'xxx', 姓名: 'xxx', 工号: 'xxx', ...}]        // 1.定义我们需要的表头的映射关系（表头的字段其实就是我们接口中所需要的参数）       const userRelations = {         '入职日期': 'timeOfEntry',         '手机号': 'mobile',         '姓名': 'username',         '转正日期': 'correctionTime',         '工号': 'workNumber'       }       // 2.进行数据转换，实现业务需求       var newArr = results.map(item => {         const userInfo = {}         Object.keys(item).forEach(k => {           // key是当前的中文名 找到对应的英文名           if (userRelations[k] === 'timeOfEntry' || userRelations[k] === 'correctionTime') {             userInfo[userRelations[k]] = new Date(this.formatDate(item[k], '/')) // 只有这样, 才能入库             return           }           userInfo[userRelations[k]] = item[k]         })         return userInfo       })       await importEmployee(newArr)       this.$message.success('导入成功')       this.$router.back() // 回到上一页     },     formatDate(numb, format) {       const time = new Date((numb - 1) * 24 * 3600000 + 1)       time.setYear(time.getFullYear() - 70)       const year = time.getFullYear() + ''       const month = time.getMonth() + 1 + ''       const date = time.getDate() - 1 + ''       if (format && format.length === 1) {         return year + format + month + format + date       }       return year + (month < 10 ? '0' + month : month) + (date < 10 ? '0' + date : date)     }   } } </script></code></pre> <h2>二、excel的导出</h2> <h3>1.下载所需js文件</h3> <p>Excel 的导入导出都是依赖于js-xlsx来实现的。</p> <p>在<code>js-xlsx</code>的基础上又封装了Export2Excel.js来方便导出数据。所以我们可以先下载该js文件到我们的项目目录下（链接地址）</p> <p>src/vendor/Export2Excel.js</p> <h3>2.安装导出excel所需依赖</h3> <p>由于<code>Export2Excel</code>不仅依赖<code>js-xlsx</code>还依赖<code>file-saver</code>和<code>script-loader，所以我们要再下载两个依赖包。</code></p> <pre><code>npm install xlsx file-saver -S npm install script-loader -S -D</code></pre> <h3>3.按需导入引用方法</h3> <p>由于下载的Export2Excel.js文件还挺大的，我们可以用按需导入的方法导入到我们的组件中。然后调用导入文件的导出对象上的方法，这个方法需要我们传入一些参数。</p> <pre><code>// 懒加载 import('@/vendor/Export2Excel').then(excel => {   // excel是引入文件（也就是@/ventor/Export2Excel）的导出对象   excel.export_json_to_excel({     header: tHeader, // 表头 必填  []     data, // 具体数据 必填  [[], [], ...]     filename: 'excel-list', // 导出文件名 非必填      autoWidth: true, // 单元格是否要自适应宽度 非必填  true / false     bookType: 'xlsx' // 导出文件类型 非必填  'xlsx'/'csv'/'txt'等   }) })</code></pre> <p>在导出的函数我们，我们需要将我们项目中拿到的数据转化成参数所需要的数据格式</p> <pre><code>        // 拿到的数据是这种         //  [{ username: 'xxx', mobile: 'xxx', ... }, { username: 'xxx', mobile: 'xxx', ... }]         // 要转化的是如下这种         // header: ['姓名', '手机号', '入职日期', ...]         // data: [['张三', '138xxxxxxxx', '1992-08-04', ...], ['李四', '135xxxxxxxx', '1992-08-04', ...]]</code></pre> <p>下面附上整个代码</p> <pre><code>    // 导出数据     exportData() {       // 1.定义表头对应关系       const headers = {         '姓名': 'username',         '手机号': 'mobile',         '入职日期': 'timeOfEntry',         '聘用形式': 'formOfEmployment',         '转正日期': 'correctionTime',         '工号': 'workNumber',         '部门': 'departmentName'       }       // 懒加载       import('@/vendor/Export2Excel').then(async excel => {         // excel是引入文件（也就是@/ventor/Export2Excel）的导出对象         // 获取所有的数据         const { rows } = await getEmployeeList({ page: 1, size: this.page.total })         const data = this.formatJson(headers, rows) // 返回的data就是我们转化后的数据         excel.export_json_to_excel({           // 要求转出的表头是中文           header: Object.keys(headers), // 表头 必填           data, // //具体数据 必填           filename: 'excel-list', // 非必填           autoWidth: true, // 非必填           bookType: 'xlsx' // 非必填         })         // 拿到的数据是这种         //  [{ username: 'xxx', mobile: 'xxx', ... }, { username: 'xxx', mobile: 'xxx', ... }]         // 要转化的是如下这种         // header: ['姓名', '手机号', '入职日期', ...]         // data: [['张三', '138xxxxxxxx', '1992-08-04', ...], ['李四', '135xxxxxxxx', '1992-08-04', ...]]       })     },     formatJson(headers, rows) {       return rows.map(item => {         console.log(item)         return Object.keys(headers).map(k => {           if (headers[k] === 'timeOfEntry' || headers[k] === 'correctionTime') {             return formatDate(item[headers[k]]) // 返回格式化之前的时间           } else if (headers[k] === 'formOfEmployment') {             return EmployeeEnum.hireType[item.formOfEmployment] ? EmployeeEnum.hireType[item.formOfEmployment] : '未知'           }           return item[headers[k]]         })       })     }</code></pre> <p>好啦，以上就是excel表导入导出的步骤啦，有不对的地方欢迎指正哦！~</p> </div> 			
                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1055.htm">Java 轻松掌握字符缓冲流的使用_java</a></p>
                                                        <p>下一个：<a href="/html/category/article-1323.htm">springcloud  Hystrix 及 Feign与Hystrix结合 使用方法</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6846.htm" title="宠物饲料创业计划书 宠物饲料创业计划书怎么写">宠物饲料创业计划书 宠物饲料创业计划书怎么写</a></li>
                        <li class="py-2"><a href="/html/category/article-4516.htm" title="公务员国考考试报名入口官网（国家公务员国考报名入口）">公务员国考考试报名入口官网（国家公务员国考报名入口）</a></li>
                        <li class="py-2"><a href="/html/category/article-6194.htm" title="瑞鹏宠物医院什么时候上市（瑞鹏宠物医院创始人简历）">瑞鹏宠物医院什么时候上市（瑞鹏宠物医院创始人简历）</a></li>
                        <li class="py-2"><a href="/html/category/article-4444.htm" title="国产狗粮性价比（国产狗粮性价比排行榜）">国产狗粮性价比（国产狗粮性价比排行榜）</a></li>
                        <li class="py-2"><a href="/html/category/article-6893.htm" title="动物疫苗排名前十名品种有哪些（动物疫苗的作用）">动物疫苗排名前十名品种有哪些（动物疫苗的作用）</a></li>
                        <li class="py-2"><a href="/html/category/article-6708.htm" title="小动物打疫苗有什么用（给动物打的疫苗是什么）">小动物打疫苗有什么用（给动物打的疫苗是什么）</a></li>
                        <li class="py-2"><a href="/html/category/article-4404.htm" title="动物疫苗品牌排名前十 动物疫苗品牌排名前十名">动物疫苗品牌排名前十 动物疫苗品牌排名前十名</a></li>
                        <li class="py-2"><a href="/html/category/article-5931.htm" title="厦门宠物寄养哪里好 厦门宠物寄养哪里好点">厦门宠物寄养哪里好 厦门宠物寄养哪里好点</a></li>
                        <li class="py-2"><a href="/html/category/article-4445.htm" title="三国杀特殊技能说明书（三国杀特殊技能说明书图片）">三国杀特殊技能说明书（三国杀特殊技能说明书图片）</a></li>
                        <li class="py-2"><a href="/html/category/article-6571.htm" title="﻿动物疫苗价格 ">﻿动物疫苗价格 </a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            
            </div>
        </div>
    </section>
    
        <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    SwedenAddress 版权所有
                    <br />
                    Powered by WordPress
                </p>
                <div class="col-lg-4 main-social-footer-29">
                    <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                    <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                    <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                    <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                </div>
            </div>
        </div>
    </section>
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-long-arrow-up"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- /move top -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>