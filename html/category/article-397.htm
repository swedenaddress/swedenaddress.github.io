<!doctype html>
<html lang="zh-CN">

<head>
    <!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="canonical" href="https://swedenaddress.github.io/html/category/article-397.htm" />
<link rel="icon" href="/assets/addons/xcblog/img/swedenaddress/favicon.ico" type="image/x-icon"/>
<title>HCNP Routing&amp;Switching之端口隔离 - SwedenAddress</title>
<link rel="stylesheet" href="/assets/addons/xcblog/css/swedenaddress/style-starter.css">
<link href="https://fonts.googleapis.com/css?family=Josefin+Slab:400,700,700i&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?ff0c66a832e6568df61664f01ded8b73";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="home">
    <section class=" w3l-header-4 header-sticky">
    <header class="absolute-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a class="navbar-brand" href="/">
                        Sweden Address
                    </a>
                                <button class="navbar-toggler bg-gradient collapsed" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="fa icon-expand fa-bars"></span>
                    <span class="fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
        </div>
        </nav>
        </div>
    </header>
</section>
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/jquery-3.3.1.min.js"></script> <!-- Common jquery plugin -->
<!--bootstrap working-->
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/bootstrap.min.js"></script>
<!-- //bootstrap working-->
<!-- disable body scroll which navbar is in active -->
<script>
$(function() {
    $('.navbar-toggler').click(function() {
        $('body').toggleClass('noscroll');
    })
});
</script>
    <!-- breadcrumbs -->
    <section class="w3l-inner-banner-main">
        <div class="about-inner about ">
            <div class="container">
                <div class="main-titles-head text-center">
                    <h1 class="header-name" style="word-break: break-all;">
                        HCNP Routing&amp;Switching之端口隔离                    </h1>
                    
                </div>
            </div>
        </div>
        <div class="breadcrumbs-sub">
            <div class="container">
                <ul class="breadcrumbs-custom-path">
                    <li class="right-side propClone"><a href="/" class="">首页 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="right-side propClone"><a href="/html/category/" class="">文章分类 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="active ">正文</li>
                </ul>
            </div>
        </div>
        </div>
    </section>
    <!-- breadcrumbs //-->
    <section class="w3l-content-with-photo-4" id="about">
        <div class="content-with-photo4-block ">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<p>　　前文我们了解了组播路由协议稀疏模式中的RP相关话题，回顾请参考<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/qiuhom-1874/p/16154347.html"  target="_blank" rel="nofollow">https://www.cnblogs.com/qiuhom-1874/p/16154347.html</a>；今天我们来聊一聊二层交换机中有关vlan隔离相关话题；</p> <p>　　我们知道在二层交换机上划分vlan可以实现将一个广播域划分为多个广播域，从而避免广播域过大而造成的广播风暴；简单讲划分vlan就是隔离广播域；默认情况下在同一广播域的主机，只要有一台pc发送广播，同一广播域中的其他主机也会收到对应广播，这样一来可能造成同一广播域中的主机相互干扰；那有没有一种方法避免同一广播域中的主机互不干扰呢？</p> <p>　　端口隔离</p> <p>　　所谓端口隔离就是指在同一vlan内端口之间的隔离，它是交换机端口之间的一种安全访问控制机制，配置端口隔离后，无论是那个vlan都不能互相通信；</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/9733d16a6f4e6ffad30d3a64f0f084e4.jpg" alt="HCNP Routing&amp;Switching之端口隔离"></p> <p>　　提示：如上图所示，pc1和pc2同属于vlan10，在没有配置端口隔离pc1和pc2可以通过交换机 相互通信，即fa0/1和fa0/2可以相互转发数据；配置了端口隔离以后pc1和pc2就不能相互通信了；当然pc1和pc2都可以和gi0/1接口通信；</p> <p>　　双向端口隔离</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/084995dc146c76f5800f201bcc97c73e.jpg" alt="HCNP Routing&amp;Switching之端口隔离"></p> <p>　　提示：双向隔离是指在同一隔离组的端口两两相互隔离；报文不能达到通信双方的任何一端；</p> <p>　　单向端口隔离</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/f23f787e1724b00dd393ced8f0fa8f20.jpg" alt="HCNP Routing&amp;Switching之端口隔离"></p> <p>　　提示：单向隔离是某一端口到另一些端口的单向隔离；报文只能从某一个方向发送到对端；</p> <p>　　实验：如下图所示，配置双向隔离和单向隔离</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/137918e95b1ef77549dd3f16e99e5219.jpg" alt="HCNP Routing&amp;Switching之端口隔离"></p> <p>　　实验环境：在一个交换机上有三台主机，它们同属vlan12，在交换机上配置实现，pc1和pc2双向隔离，pc1到pc3单向隔离</p> <p>　　交换机配置</p> <div class="cnblogs_code"><img decoding="async" src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt="HCNP Routing&amp;Switching之端口隔离" id="code_img_closed_e25e22ce-a614-43f5-a2d9-96dba8c4032b" class="code_img_closed"/><img decoding="async" src="https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt="HCNP Routing&amp;Switching之端口隔离" id="code_img_opened_e25e22ce-a614-43f5-a2d9-96dba8c4032b" class="code_img_opened" style="display: none"/></p> <div id="cnblogs_code_open_e25e22ce-a614-43f5-a2d9-96dba8c4032b" class="cnblogs_code_hide"> <pre><span style="color: rgba(0, 0, 0, 1)">sys sys sw1 vlan</span><span style="color: rgba(128, 0, 128, 1)">12</span><span style="color: rgba(0, 0, 255, 1)">int</span> g0/<span style="color: rgba(128, 0, 128, 1)">0</span>/<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)"> port link</span>-<span style="color: rgba(0, 0, 0, 1)">type access port default vlan</span><span style="color: rgba(128, 0, 128, 1)">12</span><span style="color: rgba(0, 0, 255, 1)">int</span> g0/<span style="color: rgba(128, 0, 128, 1)">0</span>/<span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)"> port link</span>-<span style="color: rgba(0, 0, 0, 1)">type access port default vlan</span><span style="color: rgba(128, 0, 128, 1)">12</span><span style="color: rgba(0, 0, 255, 1)">int</span> g0/<span style="color: rgba(128, 0, 128, 1)">0</span>/<span style="color: rgba(128, 0, 128, 1)">3</span><span style="color: rgba(0, 0, 0, 1)"> port link</span>-<span style="color: rgba(0, 0, 0, 1)">type access port default vlan</span><span style="color: rgba(128, 0, 128, 1)">12</span></pre> </div> <p><span class="cnblogs_code_collapse">View Code</span></div> <p>　　验证vlan信息</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/3a0ae6eeb7bf8374daad691a2f7d79e6.jpg" alt="HCNP Routing&amp;Switching之端口隔离"></p> <p>　　验证pc1,pc2,pc3是否能够正常通信？</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/19271f34ab185611ada95fe55d472101.jpg" alt="HCNP Routing&amp;Switching之端口隔离"></p> <p>　　提示：可以看到默认情况下在同一vlan下的主机是可以相互通信；并不隔离；</p> <p>　　在交换机上配置pc1和pc2双向端口隔离</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/d168315d728e5c660035abba944e01bf.jpg" alt="HCNP Routing&amp;Switching之端口隔离"></p> <p>　　提示：配置双向端口隔离，我们只需把对应需要隔离的端口加入同一隔离组即可；默认不写隔离组就是组1；</p> <p>　　把pc2直连所在端口加入到隔离组</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/68cce08712bd240552d3d0016d272322.jpg" alt="HCNP Routing&amp;Switching之端口隔离"></p> <p>　　验证端口隔离信息</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/ce64ac5d088a45ba7eec5b52285953f6.jpg" alt="HCNP Routing&amp;Switching之端口隔离"></p> <p>　　提示：可以看到现在有一个隔离组group1，里面有两个端口分别是g0/0/1和g0/0/2；</p> <p>　　验证：pc1和pc2是否还能正常通信呢？</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/4383bc03fca126e1a6c47679a7cc5b21.jpg" alt="HCNP Routing&amp;Switching之端口隔离"></p> <p>　　提示：可以看到现在pc1和pc2就不能正常通信了；</p> <p>　　在交换机的1口和2口抓包查看其过程</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/e179f631d22e4a7cda12a67d34c69ae7.jpg" alt="HCNP Routing&amp;Switching之端口隔离"></p> <p>　　提示：可以看到做了端口双向隔离以后，在同一vlan下的两台主机就不能正常通信了，其实不能正常通信的最主要原因是通信双方发送的arp对方收不到，所以导致没有通信对方的mac，二层封装就不能完成；</p> <p>　　验证：pc1和pc3是否能正常通信呢？pc2和pc3是否能正常通信呢？</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/131f4a9ecc09afd4f8df65b8652edd32.jpg" alt="HCNP Routing&amp;Switching之端口隔离"></p> <p>　　提示：可以看到pc1和pc3通信，pc2和pc3的通信并不受pc1和pc2所在端口做双向端口隔离的影响；也就是说只有在同一隔离组里的端口通信才会相互隔离；</p> <p>　　在交换机上配置pc1和pc3单向隔离</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/8d4aabe48ee712c84ca148943011ea0b.jpg" alt="HCNP Routing&amp;Switching之端口隔离"></p> <p>　　提示：上述配置表示pc1所在端口单向隔离pc3,即pc1能将arp发送给pc3，但是pc3回复报文被隔离，pc1收不到pc3的回答；反之pc3发送arp，pc1和pc3做了单向隔离，所以pc3发送的arppc1根本就收不到；</p> <p>　　验证：用pc1pingpc3看看是否能够正常ping通？</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/411b3a6f3e253be08507302f925e9bef.jpg" alt="HCNP Routing&amp;Switching之端口隔离"></p> <p>　　提示：可以看到现在pc1pingpc3提示我们目标主机不可达；其原因是pc1发送的arp广播迟迟没有回复；所以pc1认为pc3不可达；</p> <p>　　在g0/0/1和g0/0/3上抓包，看看通信过程</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/4988dce4d4514d5b87e125189de6e3a5.jpg" alt="HCNP Routing&amp;Switching之端口隔离"></p> <p>　　提示：可以看到做了单向端口隔离以后，pc1的arp能够正常到达pc3,但是pc3回复的arp被阻断，pc1收不到pc3回复的mac，所以二层封装不能正常完成，所以icmp提示我们目标主机不可达；相反pc3pingpc1，由于之前pc1发送的arp pc3收到了，即pc3拿到了pc1的mac，所以pc3pingpc1的时候是直接封装icmp包发送，并没有先发arp；由于pc1和pc3做了单向端口隔离，所以pc3发送的icmp报文pc1并没有收到，当然也就没有回复报文，所以pc3pingpc1提示超时，并不是目标主机不可达；</p> <p>　　当然端口隔离技术不仅仅限于可管理的二三层交换机上实现，有的傻瓜交换机也有端口隔离，不同的是二三层交换机可以由管理员手动定义端口隔离，而傻瓜交换机的端口隔离是通过一个拨码按钮实现，且不能手动定义端口隔离；如下图所示</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/d468fb659e6a118570682d70271d9cbf.jpg" alt="HCNP Routing&amp;Switching之端口隔离"></p> 			
                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-396.htm">Vertica集成Apache Hudi指南</a></p>
                                                        <p>下一个：<a href="/html/category/article-398.htm">Java-GUI编程之菜单组件</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1928.htm" title="Java 9中的JShell中的前向参考是什么？">Java 9中的JShell中的前向参考是什么？</a></li>
                        <li class="py-2"><a href="/html/category/article-1632.htm" title="MongoDB利用oplog恢复数据的方法_MongoDB_">MongoDB利用oplog恢复数据的方法_MongoDB_</a></li>
                        <li class="py-2"><a href="/html/category/article-2532.htm" title="面向对象编程-终结篇 es6新增语法">面向对象编程-终结篇 es6新增语法</a></li>
                        <li class="py-2"><a href="/html/category/article-1343.htm" title="HttpClient 设置超时时间">HttpClient 设置超时时间</a></li>
                        <li class="py-2"><a href="/html/category/article-1056.htm" title="vue项目的excel的导入与导出">vue项目的excel的导入与导出</a></li>
                        <li class="py-2"><a href="/html/category/article-792.htm" title="SpringMVC+Log4j配置定时生成、删除日志">SpringMVC+Log4j配置定时生成、删除日志</a></li>
                        <li class="py-2"><a href="/html/category/article-3123.htm" title="Python调用C语言方法">Python调用C语言方法</a></li>
                        <li class="py-2"><a href="/html/category/article-520.htm" title="什么是MySQL ENUM数据类型？使用ENUM数据类型有什么优势？">什么是MySQL ENUM数据类型？使用ENUM数据类型有什么优势？</a></li>
                        <li class="py-2"><a href="/html/category/article-510.htm" title="PHP对象序列化">PHP对象序列化</a></li>
                        <li class="py-2"><a href="/html/category/article-1942.htm" title="如何在MySQL中添加两个或多个字符串？">如何在MySQL中添加两个或多个字符串？</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">4</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            
            </div>
        </div>
    </section>
    
        <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    SwedenAddress 版权所有
                    <br />
                    Powered by WordPress
                </p>
                <div class="col-lg-4 main-social-footer-29">
                    <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                    <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                    <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                    <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                </div>
            </div>
        </div>
    </section>
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-long-arrow-up"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- /move top -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>