<!doctype html>
<html lang="zh-CN">

<head>
    <!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="canonical" href="https://swedenaddress.github.io/html/category/article-285.htm" />
<link rel="icon" href="/assets/addons/xcblog/img/swedenaddress/favicon.ico" type="image/x-icon"/>
<title>spring security 权限(注解) - SwedenAddress</title>
<link rel="stylesheet" href="/assets/addons/xcblog/css/swedenaddress/style-starter.css">
<link href="https://fonts.googleapis.com/css?family=Josefin+Slab:400,700,700i&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?ff0c66a832e6568df61664f01ded8b73";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="home">
    <section class=" w3l-header-4 header-sticky">
    <header class="absolute-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a class="navbar-brand" href="/">
                        Sweden Address
                    </a>
                                <button class="navbar-toggler bg-gradient collapsed" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="fa icon-expand fa-bars"></span>
                    <span class="fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
        </div>
        </nav>
        </div>
    </header>
</section>
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/jquery-3.3.1.min.js"></script> <!-- Common jquery plugin -->
<!--bootstrap working-->
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/bootstrap.min.js"></script>
<!-- //bootstrap working-->
<!-- disable body scroll which navbar is in active -->
<script>
$(function() {
    $('.navbar-toggler').click(function() {
        $('body').toggleClass('noscroll');
    })
});
</script>
    <!-- breadcrumbs -->
    <section class="w3l-inner-banner-main">
        <div class="about-inner about ">
            <div class="container">
                <div class="main-titles-head text-center">
                    <h1 class="header-name" style="word-break: break-all;">
                        spring security 权限(注解)                    </h1>
                    
                </div>
            </div>
        </div>
        <div class="breadcrumbs-sub">
            <div class="container">
                <ul class="breadcrumbs-custom-path">
                    <li class="right-side propClone"><a href="/" class="">首页 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="right-side propClone"><a href="/html/category/" class="">文章分类 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="active ">正文</li>
                </ul>
            </div>
        </div>
        </div>
    </section>
    <!-- breadcrumbs //-->
    <section class="w3l-content-with-photo-4" id="about">
        <div class="content-with-photo4-block ">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>写在前边整理的知识点都是从其他博客中来，如有侵权，立删！<br /> 参考:https://blog.csdn.net/qq_32867467/article/details/103097190</p> <h2>正题:</h2> <p>Spring Security 默认是禁用注解的，要想开启注解，要在继承<strong>WebSecurityConfigurerAdapter</strong> 的类加<strong>@EnableMethodSecurity</strong> 注解，并在该类中将<strong>AuthenticationManager</strong> 定义为<strong>Bean</strong>。</p> <pre><code class="prism language-JAVA">@Configuration @EnableWebSecurity @EnableGlobalMethodSecurity(prePostEnabled = true,securedEnabled=true,jsr250Enabled=true) public class WebSecurityConfig extends WebSecurityConfigurerAdapter {     @Bean     @Override     public AuthenticationManager authenticationManagerBean() throws Exception {         return super.authenticationManagerBean();     } }</code></pre> <p>我们看到<strong>@EnableGlobalMethodSecurity</strong> 分别有<strong>prePostEnabled</strong> 、<strong>securedEnabled</strong>、<strong>jsr250Enabled</strong> 三个字段，其中每个字段代码一种注解支持，默认为<strong>false</strong>，<strong>true</strong> 为开启</p> <hr/> <h3>JSR-250注解</h3> <h5>主要注解</h5> <h6>@DenyAll &nbsp;==&nbsp; 拒绝</h6> <h6>@PermitAll &nbsp;==&nbsp; 通过</h6> <h6>@RolesAllowed</h6> <pre><code class="prism language-JAVA">/**  只要具有USER, ADMIN任意一种权限就可以访问  这里可以省略前缀ROLE_，实际的权限可能是ROLE_ADMIN */ @RolesAllowed({"USER", "ADMIN"})</code></pre> <h3>securedEnabled注解</h3> <h5>@Secured &nbsp;==&nbsp; 在方法上指定安全性要求</h5> <p>可以使用<strong>@Secured</strong> 在方法上指定安全性要求 角色/权限等 只有对应 角色/权限 的用户才可以调用这些方法。 如果有人试图调用一个方法，但是不拥有所需的 角色/权限，那会将会拒绝访问将引发异常。<br /><strong>不支持Spring EL表达式</strong></p> <pre><code class="prism language-JAVA">@Secured("ROLE_ADMIN") @Secured({ "ROLE_DBA", "ROLE_ADMIN" })</code></pre> <h3>prePostEnabled注解</h3> <p><em>这个开启后支持Spring EL表达式 算是蛮厉害的。如果没有访问方法的权限，会抛AccessDeniedException</em></p> <h5>@PreAuthorize &nbsp;==&nbsp; 适合进入方法之前验证授权</h5> <p>在方法执行之前执行，而且这里可以调用方法的参数，也可以得到参数值，这里利用JAVA8的参数名反射特性，如果没有JAVA8，那么也可以利用Spring Secuirty的@P标注参数，或利用Spring Data的@Param标注参数。</p> <pre><code class="prism language-java"><span class="token comment">//无java8</span><span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">"#userId == authentication.principal.userId or hasAuthority(‘ADMIN’)"</span><span class="token punctuation">)</span><span class="token keyword">void</span><span class="token function">changePassword</span><span class="token punctuation">(</span><span class="token annotation punctuation">@P</span><span class="token punctuation">(</span><span class="token string">"userId"</span><span class="token punctuation">)</span><span class="token keyword">long</span> userId<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token comment">//有java8</span><span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">"#userId == authentication.principal.userId or hasAuthority(‘ADMIN’)"</span><span class="token punctuation">)</span><span class="token keyword">void</span><span class="token function">changePassword</span><span class="token punctuation">(</span><span class="token keyword">long</span> userId<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token comment">/**  这里表示在changePassword方法执行之前，判断方法参数userId的值是否等于principal中保存的当前用户的userId，或者当前用户是否具有ROLE_ADMIN权限，两种符合其一，就可以访问该 方法。  */</span></code></pre> <hr/> <h5>@PostAuthorize &nbsp;==&nbsp; 检查授权方法之后才被执行</h5> <p>在方法执行之后执行，而且这里可以调用方法的返回值，如果EL为false，那么该方法也已经执行完了，可能会回滚。EL变量returnObject表示返回的对象。</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@PostAuthorize</span><span class="token punctuation">(</span><span class="token string">"returnObject.userId == authentication.principal.userId or hasPermission(returnObject, 'ADMIN')"</span><span class="token punctuation">)</span> User<span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <hr/> <h5>@PostFilter &nbsp;==&nbsp; 在方法执行之后执行，而且这里可以调用方法的返回值，然后对返回值进行过滤或处理或修改并返回</h5> <p>在执行方法之后执行，而且这里可以调用方法的返回值，然后对返回值进行过滤或处理。EL变量returnObject表示返回的对象。只有方法返回的集合或数组类型的才可以使用。（与分页技术不兼容）</p> <hr/> <h5>@PreFilter &nbsp;==&nbsp; 在方法执行之前执行，而且这里可以调用方法的参数，然后对参数值进行过滤或处理或修改</h5> <p>EL变量filterObject表示参数，如果有多个参数，可以使用@filterTarget注解参数，只有方法是集合或数组才行（与分页技术不兼容）。</p> <hr/> <h4>@PreAuthorize 和 @PostAuthorize 中 除了支持原有的权限表达式之外，也是可以支持自定义的。</h4> <pre><code class="prism language-java"><span class="token keyword">interface</span><span class="token class-name">TestPermissionEvaluator</span><span class="token punctuation">{<!-- --></span><span class="token keyword">boolean</span><span class="token function">check</span><span class="token punctuation">(</span>Authentication authentication<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">"testPermissionEvaluator"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">TestPermissionEvaluatorImpl</span><span class="token keyword">implements</span><span class="token class-name">TestPermissionEvaluator</span><span class="token punctuation">{<!-- --></span><span class="token keyword">public</span><span class="token keyword">boolean</span><span class="token function">check</span><span class="token punctuation">(</span>Authentication authentication<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"进入了自定义的匹配器"</span><span class="token operator">+</span> authentication<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">// 返回true 就是有权限 false 则是无权限 。 然后在方法中这样玩即可</span><span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">"@testPermissionEvaluator.check(authentication)"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String<span class="token function">test0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token string">"说明你有自定义权限"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <ul> <li><strong>异常处理</strong></li> </ul> <pre><code class="prism language-java"><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">AccessDeniedAuthenticationHandler</span><span class="token keyword">implements</span><span class="token class-name">AccessDeniedHandler</span><span class="token punctuation">{<!-- --></span><span class="token keyword">private</span><span class="token keyword">final</span> ObjectMapper objectMapper<span class="token punctuation">;</span><span class="token keyword">public</span><span class="token function">AccessDeniedAuthenticationHandler</span><span class="token punctuation">(</span>ObjectMapper objectMapper<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">.</span>objectMapper<span class="token operator">=</span> objectMapper<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">handle</span><span class="token punctuation">(</span>HttpServletRequest httpServletRequest<span class="token punctuation">,</span> HttpServletResponse httpServletResponse<span class="token punctuation">,</span> AccessDeniedException e<span class="token punctuation">)</span><span class="token keyword">throws</span> IOException<span class="token punctuation">{<!-- --></span>         log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"没有权限"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         httpServletResponse<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span>HttpStatus<span class="token punctuation">.</span>INTERNAL_SERVER_ERROR<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         httpServletResponse<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/json;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         httpServletResponse<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>然后在WebSecurityConfig 中的 configure 中配置即可</p> <pre><code class="prism language-java">http<span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exceptionHandling</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">accessDeniedHandler</span><span class="token punctuation">(</span>accessDeniedAuthenticationHandler<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p><strong>权限表达式</strong></p> <table> <thead> <tr> <th>表达式</th> <th>说明</th> </tr> </thead> <tbody> <tr> <td>hasRole([role])</td> <td>用户拥有制定的角色时返回true （Spring security默认会带有ROLE_前缀）</td> </tr> <tr> <td>hasAnyRole([role1,role2])</td> <td>用户拥有任意一个制定的角色时返回true</td> </tr> <tr> <td>hasAuthority([authority])</td> <td>等同于hasRole,但不会带有ROLE_前缀</td> </tr> <tr> <td>asAnyAuthority([auth1,auth2])</td> <td>等同于hasAnyRole</td> </tr> <tr> <td>permitAll</td> <td>永远返回true</td> </tr> <tr> <td>denyAll</td> <td>永远返回false</td> </tr> <tr> <td>authentication</td> <td>当前登录用户的authentication对象</td> </tr> <tr> <td>fullAuthenticated</td> <td>当前用户既不是anonymous也不是rememberMe用户时返回true</td> </tr> <tr> <td>hasIpAddress(‘192.168.1.0/24’))</td> <td>请求发送的IP匹配时返回true</td> </tr> </tbody> </table> <p><strong>eg</strong></p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span><span class="token keyword">void</span><span class="token function">configure</span><span class="token punctuation">(</span>HttpSecurity http<span class="token punctuation">)</span><span class="token keyword">throws</span> Exception<span class="token punctuation">{<!-- --></span>         http<span class="token punctuation">.</span><span class="token function">formLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">failureHandler</span><span class="token punctuation">(</span>failureAuthenticationHandler<span class="token punctuation">)</span><span class="token comment">// 自定义登录失败处理</span><span class="token punctuation">.</span><span class="token function">successHandler</span><span class="token punctuation">(</span>successAuthenticationHandler<span class="token punctuation">)</span><span class="token comment">// 自定义登录成功处理</span><span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">logoutUrl</span><span class="token punctuation">(</span><span class="token string">"/logout"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">formLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">loginPage</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">loginProcessingUrl</span><span class="token punctuation">(</span><span class="token string">"/authentication/form"</span><span class="token punctuation">)</span><span class="token comment">// 自定义登录路径</span><span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 对请求授权</span><span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">,</span><span class="token string">"/authentication/require"</span><span class="token punctuation">,</span><span class="token string">"/authentication/form"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 这些页面不需要身份认证</span><span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/docker"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasRole</span><span class="token punctuation">(</span><span class="token string">"DOCKER"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/java"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasRole</span><span class="token punctuation">(</span><span class="token string">"JAVA"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/java"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasRole</span><span class="token punctuation">(</span><span class="token string">"JAVA"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/custom"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">"@testPermissionEvaluator.check(authentication)"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//其他请求需要认证</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exceptionHandling</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">accessDeniedHandler</span><span class="token punctuation">(</span>accessDeniedAuthenticationHandler<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 禁用跨站攻击</span><span class="token punctuation">}</span></code></pre> <h5>自定义权限表达式</h5> <h6>access() spring3.0后出了spel 超好用，有了这个我们就可以设置自己的权限验证了</h6> <p>eg<code>access("hasRole('JAVA') or hasRole('DOCKER')")</code></p> <p>上述示例代码中的<code>access("@testPermissionEvaluator.check(authentication)")</code> 的意思就是 去testPermissionEvaluator这个bean里来执行check方法，这里需要注意check 方法必须返回值是boolean</p> <pre><code class="prism language-java"><span class="token keyword">interface</span><span class="token class-name">TestPermissionEvaluator</span><span class="token punctuation">{<!-- --></span><span class="token keyword">boolean</span><span class="token function">check</span><span class="token punctuation">(</span>Authentication authentication<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">"testPermissionEvaluator"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">TestPermissionEvaluatorImpl</span><span class="token keyword">implements</span><span class="token class-name">TestPermissionEvaluator</span><span class="token punctuation">{<!-- --></span><span class="token keyword">public</span><span class="token keyword">boolean</span><span class="token function">check</span><span class="token punctuation">(</span>Authentication authentication<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token comment">//这里可以拿到登陆信息然后随便的去定制自己的权限 随便你怎么查询</span><span class="token comment">//true就是过，false就是不过</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"进入了自定义的匹配器"</span><span class="token operator">+</span> authentication<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>示例项目地址: https://github.com/Blackcat308/reimagined-giggle or https://gitee.com/muncle/reimagined-giggle</p> <p>也可以关注我的博客: https://blog.laocat.cn/</p> </div> 			
                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-284.htm">Python调用C++程序的几种方法</a></p>
                                                        <p>下一个：<a href="/html/category/article-286.htm">win11系统怎么调节鼠标移动速度</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7720.htm" title="不宜养猫的4个属相女人图片大全（不能养猫的生肖怎么破解）">不宜养猫的4个属相女人图片大全（不能养猫的生肖怎么破解）</a></li>
                        <li class="py-2"><a href="/html/category/article-7444.htm" title="2011中国城来自市竞争力排行榜，2011最新中国城市排名,2011中国城市人口排名，2011中国城市经济排行榜(2019年中国城市竞争力排名是怎样的？)">2011中国城来自市竞争力排行榜，2011最新中国城市排名,2011中国城市人口排名，2011中国城市经济排行榜(2019年中国城市竞争力排名是怎样的？)</a></li>
                        <li class="py-2"><a href="/html/category/article-7536.htm" title="上海领养宠物狗多少钱一个（上海领养狗狗机构）">上海领养宠物狗多少钱一个（上海领养狗狗机构）</a></li>
                        <li class="py-2"><a href="/html/category/article-6801.htm" title="关于动物医院的动画片有哪些（动物医院绘本故事）">关于动物医院的动画片有哪些（动物医院绘本故事）</a></li>
                        <li class="py-2"><a href="/html/category/article-7122.htm" title="对手全集（对手电视剧剧情分集介绍）一看就会，">对手全集（对手电视剧剧情分集介绍）一看就会，</a></li>
                        <li class="py-2"><a href="/html/category/article-7674.htm" title="宠物粮工厂投资（宠物粮食工厂）">宠物粮工厂投资（宠物粮食工厂）</a></li>
                        <li class="py-2"><a href="/html/category/article-7491.htm" title="芭比堂宠物医院好吗怎么样（芭比堂宠物医院加盟）">芭比堂宠物医院好吗怎么样（芭比堂宠物医院加盟）</a></li>
                        <li class="py-2"><a href="/html/category/article-7352.htm" title="宠物领养协议合同电子版怎么弄的啊 宠物领养协议合同电子版怎么弄的啊图片">宠物领养协议合同电子版怎么弄的啊 宠物领养协议合同电子版怎么弄的啊图片</a></li>
                        <li class="py-2"><a href="/html/category/article-7812.htm" title="女孩十大最好专业工资高（女孩什么专业好就业工资高）">女孩十大最好专业工资高（女孩什么专业好就业工资高）</a></li>
                        <li class="py-2"><a href="/html/category/article-7445.htm" title="东北农业大学动物医学院附属医院招聘公告（东北农业大学动物医院新地址）">东北农业大学动物医学院附属医院招聘公告（东北农业大学动物医院新地址）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            
            </div>
        </div>
    </section>
    
        <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    SwedenAddress 版权所有
                    <br />
                    Powered by WordPress
                </p>
                <div class="col-lg-4 main-social-footer-29">
                    <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                    <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                    <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                    <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                </div>
            </div>
        </div>
    </section>
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-long-arrow-up"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- /move top -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>