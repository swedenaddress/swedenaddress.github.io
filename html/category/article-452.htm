<!doctype html>
<html lang="zh-CN">

<head>
    <!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="canonical" href="https://swedenaddress.github.io/html/category/article-452.htm" />
<link rel="icon" href="/assets/addons/xcblog/img/swedenaddress/favicon.ico" type="image/x-icon"/>
<title>SpringMVC接受参数 - SwedenAddress</title>
<link rel="stylesheet" href="/assets/addons/xcblog/css/swedenaddress/style-starter.css">
<link href="https://fonts.googleapis.com/css?family=Josefin+Slab:400,700,700i&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?ff0c66a832e6568df61664f01ded8b73";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="home">
    <section class=" w3l-header-4 header-sticky">
    <header class="absolute-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a class="navbar-brand" href="/">
                        Sweden Address
                    </a>
                                <button class="navbar-toggler bg-gradient collapsed" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="fa icon-expand fa-bars"></span>
                    <span class="fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
        </div>
        </nav>
        </div>
    </header>
</section>
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/jquery-3.3.1.min.js"></script> <!-- Common jquery plugin -->
<!--bootstrap working-->
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/bootstrap.min.js"></script>
<!-- //bootstrap working-->
<!-- disable body scroll which navbar is in active -->
<script>
$(function() {
    $('.navbar-toggler').click(function() {
        $('body').toggleClass('noscroll');
    })
});
</script>
    <!-- breadcrumbs -->
    <section class="w3l-inner-banner-main">
        <div class="about-inner about ">
            <div class="container">
                <div class="main-titles-head text-center">
                    <h1 class="header-name" style="word-break: break-all;">
                        SpringMVC接受参数                    </h1>
                    
                </div>
            </div>
        </div>
        <div class="breadcrumbs-sub">
            <div class="container">
                <ul class="breadcrumbs-custom-path">
                    <li class="right-side propClone"><a href="/" class="">首页 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="right-side propClone"><a href="/html/category/" class="">文章分类 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="active ">正文</li>
                </ul>
            </div>
        </div>
        </div>
    </section>
    <!-- breadcrumbs //-->
    <section class="w3l-content-with-photo-4" id="about">
        <div class="content-with-photo4-block ">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>一.SpringMVC接受参数</p> <ol> <li>语法：使用控制器方法的参数(形参)，接受客户端的请求数据，</li> <li>优点：完成类型的自动转换，定义不定长形式参数列表接受客户端请求数据</li> <li>前台转递参数方式：<br /> Get方式传递参数，通过url传递；例如url?id=2&amp;name=zhangsan<br /> Form表单post方式传递参数；<br /> 例如:</li> </ol> <pre><code class="prism language-js">   <span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"url"</span> method<span class="token operator">=</span><span class="token string">"post"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"id"</span><span class="token operator">/</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"name"</span><span class="token operator">/</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>buttom<span class="token operator">&gt;</span>commit<span class="token operator">&lt;</span><span class="token operator">/</span>buttom<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span> </code></pre> <ol start="4"> <li>参数接受分类，采用Get方式：<br /> 4.1 接受零散类型数据：后台在控制器方法中生命多个形参，保证接受的参数变量名和前台传递参数名变量一致。conteoller方法：</li> </ol> <pre><code class="prism language-c"><span class="token comment">/***      * 零散类型参数接收      * url?id=2&amp;name=zhangsan&amp;sex=true      * @return      */</span>     @<span class="token function">RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/test"</span><span class="token punctuation">)</span>     public String <span class="token function">test</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">,</span> String name<span class="token punctuation">,</span> Boolean sex<span class="token punctuation">,</span> @<span class="token function">DateTimeFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span> Date bir<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"id =="</span><span class="token operator">+</span>id<span class="token operator">+</span><span class="token string">"== 姓名 =="</span><span class="token operator">+</span>name<span class="token operator">+</span><span class="token string">"== 性别 =="</span><span class="token operator">+</span>sex<span class="token operator">+</span><span class="token string">"日期"</span> <span class="token operator">+</span>bir<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> </code></pre> <p>前端访问和后端打印结果，注：时间已特别定义格式为yyyy-MM-dd，所以浏览器访问时也需要按照特定格式；访问形式：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230112/eaba057f22666490c339e05cea389949.jpg" alt="SpringMVC接受参数"><img decoding="async" src="http://img.555519.xyz/uploads/20230112/98c795464aac5c5b2e45e6154d46b30d.jpg" alt="SpringMVC接受参数"><br /> 4.2 接受对象类型数据：前台传递的参数形式，只需要保证传递参数名和接收的参数名变量名一致即可，将自动封装。conteoller方法：</p> <pre><code class="prism language-c"><span class="token comment">//接收对象类型的参数</span>     @<span class="token function">RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/test1"</span><span class="token punctuation">)</span>     public String <span class="token function">test1</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> </code></pre> <p>如果对象中包含对象，前台访问时可标注对象。<br /> 访问形式：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230112/40b563ba1074703d0c4d92662d1de406.jpg" alt="SpringMVC接受参数"><img decoding="async" src="http://img.555519.xyz/uploads/20230112/d4558787278745b7ab41128d9a96a476.jpg" alt="SpringMVC接受参数"></p> <pre><code> 4.3  接受数组或集合类型数据：将要接收数组作为控制器方法的参数声明即可；前端语法：要求前台传递的多个参数的参数名都要与接收的数组变量名一致，springMVC自动将多个变量名放入一个数组中，conteoller方法： </code></pre> <pre><code class="prism language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/test2"</span><span class="token punctuation">)</span>     <span class="token keyword">public</span> String <span class="token function">test2</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> names<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         <span class="token keyword">for</span> <span class="token punctuation">(</span>String name<span class="token operator">:</span>names<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> </code></pre> <p>访问形式：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230112/8b714d9495024df28230b62a108e2034.jpg" alt="SpringMVC接受参数"></p> <p>注：form表单方式：</p> <pre><code class="prism language-js"> <span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"url"</span> method<span class="token operator">=</span><span class="token string">"post"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"names"</span><span class="token operator">/</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"names"</span><span class="token operator">/</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>buttom<span class="token operator">&gt;</span>commit<span class="token operator">&lt;</span><span class="token operator">/</span>buttom<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span> </code></pre> <p>注意：springMVC不允许直接接收集合类型参数，但是允许间接接收（将接收的集合放入自定义的对象中完成参数接收）</p> <pre><code class="prism language-java">    <span class="token comment">/***      * 接收集合类型的参数      * 将集合放入对象中接收      * @return      */</span>     <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/test3"</span><span class="token punctuation">)</span>     <span class="token keyword">public</span> String <span class="token function">test3</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         user<span class="token punctuation">.</span><span class="token function">getLists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>str <span class="token operator">-</span><span class="token operator">&gt;</span> System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//lamda表达式</span>         <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> </code></pre> </p></div> 			
                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-451.htm">vue实现右键菜单栏_vue.js_</a></p>
                                                        <p>下一个：<a href="/html/category/article-453.htm">python定义整型常量_Python笔记——数据类型、变量和常量</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2826.htm" title="Python生成迷宫">Python生成迷宫</a></li>
                        <li class="py-2"><a href="/html/category/article-527.htm" title="Confluent之Kafka Connector详细分析">Confluent之Kafka Connector详细分析</a></li>
                        <li class="py-2"><a href="/html/category/article-2242.htm" title="Spring中的Ant路径匹配工具组件AntPathMatcher">Spring中的Ant路径匹配工具组件AntPathMatcher</a></li>
                        <li class="py-2"><a href="/html/category/article-1055.htm" title="Java 轻松掌握字符缓冲流的使用_java">Java 轻松掌握字符缓冲流的使用_java</a></li>
                        <li class="py-2"><a href="/html/category/article-513.htm" title="springboot整合log4j的踩坑实战记录_java">springboot整合log4j的踩坑实战记录_java</a></li>
                        <li class="py-2"><a href="/html/category/article-1955.htm" title="@DateTimeFormat 和 @JsonFormat 注解">@DateTimeFormat 和 @JsonFormat 注解</a></li>
                        <li class="py-2"><a href="/html/category/article-4069.htm" title="Rust如何开发eBPF应用">Rust如何开发eBPF应用</a></li>
                        <li class="py-2"><a href="/html/category/article-1334.htm" title="【openstack】cloudkitty组件，入门级安装（快速）_在线工具">【openstack】cloudkitty组件，入门级安装（快速）_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-1344.htm" title="Java8新特性之Instant详解">Java8新特性之Instant详解</a></li>
                        <li class="py-2"><a href="/html/category/article-3757.htm" title="Python 图_系列之纵横对比  Bellman-Ford 和  Dijkstra 最短路径算法">Python 图_系列之纵横对比  Bellman-Ford 和  Dijkstra 最短路径算法</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">8</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            
            </div>
        </div>
    </section>
    
        <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    SwedenAddress 版权所有
                    <br />
                    Powered by WordPress
                </p>
                <div class="col-lg-4 main-social-footer-29">
                    <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                    <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                    <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                    <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                </div>
            </div>
        </div>
    </section>
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-long-arrow-up"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- /move top -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>