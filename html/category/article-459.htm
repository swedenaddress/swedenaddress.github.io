<!doctype html>
<html lang="zh-CN">

<head>
    <!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="canonical" href="https://swedenaddress.github.io/html/category/article-459.htm" />
<link rel="icon" href="/assets/addons/xcblog/img/swedenaddress/favicon.ico" type="image/x-icon"/>
<title>STM8S103F3P6 的开发, 烧录和Debug笔记 &#8211; Milton _在线工具 - SwedenAddress</title>
<link rel="stylesheet" href="/assets/addons/xcblog/css/swedenaddress/style-starter.css">
<link href="https://fonts.googleapis.com/css?family=Josefin+Slab:400,700,700i&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?ff0c66a832e6568df61664f01ded8b73";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="home">
    <section class=" w3l-header-4 header-sticky">
    <header class="absolute-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a class="navbar-brand" href="/">
                        Sweden Address
                    </a>
                                <button class="navbar-toggler bg-gradient collapsed" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="fa icon-expand fa-bars"></span>
                    <span class="fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
        </div>
        </nav>
        </div>
    </header>
</section>
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/jquery-3.3.1.min.js"></script> <!-- Common jquery plugin -->
<!--bootstrap working-->
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/bootstrap.min.js"></script>
<!-- //bootstrap working-->
<!-- disable body scroll which navbar is in active -->
<script>
$(function() {
    $('.navbar-toggler').click(function() {
        $('body').toggleClass('noscroll');
    })
});
</script>
    <!-- breadcrumbs -->
    <section class="w3l-inner-banner-main">
        <div class="about-inner about ">
            <div class="container">
                <div class="main-titles-head text-center">
                    <h1 class="header-name" style="word-break: break-all;">
                        STM8S103F3P6 的开发, 烧录和Debug笔记 &#8211; Milton _在线工具                    </h1>
                    
                </div>
            </div>
        </div>
        <div class="breadcrumbs-sub">
            <div class="container">
                <ul class="breadcrumbs-custom-path">
                    <li class="right-side propClone"><a href="/" class="">首页 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="right-side propClone"><a href="/html/category/" class="">文章分类 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="active ">正文</li>
                </ul>
            </div>
        </div>
        </div>
    </section>
    <!-- breadcrumbs //-->
    <section class="w3l-content-with-photo-4" id="about">
        <div class="content-with-photo4-block ">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<h1 id="stm8s103f3">STM8S103F3</h1> <ul> <li>基本信息: 16MHz 8位 MCU, 8K字节Flash, 1K内存, 640字节EEPROM, 内置振荡源, 支持3.3V和5V电压, 支持SPI, UART, I2C, ADC, PWM</li> <li>产品手册: <a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.st.com/resource/en/datasheet/stm8s103f2.pdf"  target="_blank"  rel="nofollow">https://www.st.com/resource/en/datasheet/stm8s103f2.pdf</a> </li> </ul> <h2 id="内核">内核</h2> <ul> <li>16 MHz advanced STM8 core with Harvard architecture and 3-stage pipeline 16MHz, 哈佛结构, 三级流水线</li> <li>Extended instruction set</li> </ul> <h2 id="存储">存储</h2> <ul> <li>Program memory: 8 Kbyte Flash; data retention 20 years at 55 °C after 10 kcycle 程序8K字节, 可擦写1万次</li> <li>Data memory: 640 byte true data EEPROM; endurance 300 kcycle 数据640字节, 可擦写30万次</li> <li>RAM: 1 Kbyte 内存1K字节</li> </ul> <h2 id="时钟-重置和电源管理">时钟, 重置和电源管理</h2> <ul> <li>2.95 to 5.5 V operating voltage 支持2.95V到5.5V的电压</li> <li>Flexible clock control, 4 master clock sources <ul> <li>Low power crystal resonator oscillator</li> <li>External clock input</li> <li>Internal, user-trimmable 16 MHz RC 可调节的内部16MHz振荡源</li> <li>Internal low-power 128 kHz RC 低功耗内部128KHz振荡源</li> </ul> </li> <li>Clock security system with clock monitor</li> <li>Power management: <ul> <li>Low-power modes (wait, active-halt, halt)</li> <li>Switch-off peripheral clocks individually</li> </ul> </li> <li>Permanently active, low-consumption poweron and power-down reset</li> </ul> <h2 id="中断管理">中断管理</h2> <ul> <li>Nested interrupt controller with 32 interrupts</li> <li>Up to 27 external interrupts on 6 vectors</li> </ul> <h2 id="时钟">时钟</h2> <ul> <li>Advanced control timer: 16-bit, 4 CAPCOM channels, 3 complementary outputs, dead-time insertion and flexible synchronization</li> <li>16-bit general purpose timer, with 3 CAPCOM channels (IC, OC or PWM)</li> <li>8-bit basic timer with 8-bit prescaler</li> <li>Auto wake-up timer</li> <li>Window watchdog and independent watchdog timers</li> </ul> <h2 id="通信接口">通信接口</h2> <ul> <li>UART with clock output for synchronous operation, SmartCard, IrDA, LIN master mode</li> <li>SPI interface up to 8 Mbit/s</li> <li>I2C interface up to 400 kbit/s</li> </ul> <h2 id="adc转换接口">ADC转换接口</h2> <ul> <li>10-bit, ±1 LSB ADC with up to 5 multiplexed channels, scan mode and analog watchdog 5个10位ADC</li> </ul> <h2 id="ios">I/Os</h2> <ul> <li>Up to 28 I/Os on a 32-pin package including 21 high sink outputs</li> <li>Highly robust I/O design, immune against current injection</li> </ul> <h2 id="unique-id">Unique ID</h2> <ul> <li>96-bit unique key for each device</li> </ul> <h1 id="硬件">硬件</h1> <h2 id="st-link-v2-用于烧录">ST-Link V2 用于烧录</h2> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220430/8f1bd7df70222064d2fd1cfa09414ee6.jpg" alt="STM8S103F3P6 的开发, 烧录和Debug笔记 - Milton _在线工具"></p> <h2 id="stm8s103f3p6-开发板">STM8S103F3P6 开发板</h2> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220430/603a4e8dff48189dedeff60baf8eb143.jpg" alt="STM8S103F3P6 的开发, 烧录和Debug笔记 - Milton _在线工具"></p> <p>开发板电路图</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220430/66d1dbc9be21a99fea28765e67a999a4.jpg" alt="STM8S103F3P6 的开发, 烧录和Debug笔记 - Milton _在线工具"></p> <h2 id="接线">接线</h2> <p>ST-LINK和开发板的SWIM口是一一对应的, 直接连到开发板的同名PIN</p> <pre><code>ST-LINK-V2  STM8S103F3  SWIM        -&gt; SWIM RST         -&gt; NRSt VCC         -&gt; 3V3 GND         -&gt; GND </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220430/b3293f5ba3315dacdeae01fc639196bb.jpg" alt="STM8S103F3P6 的开发, 烧录和Debug笔记 - Milton _在线工具"></p> <h1 id="软件">软件</h1> <h2 id="st-visual-develop-stvd-和-stvpst-visual-programmer">ST Visual Develop (STVD) 和 STVP(ST Visual Programmer)</h2> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.st.com/en/development-tools/stvd-stm8.html"  target="_blank"  rel="nofollow">https://www.st.com/en/development-tools/stvd-stm8.html</a></p> <ul> <li>STVD是开发工具, 当前版本是4.3.12</li> <li>STVP是烧录工具, 当前版本是4.3.1</li> </ul> <h2 id="cosmic-c-compiler">Cosmic C Compiler</h2> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cosmicsoftware.com/download_stm8_free.php"  target="_blank"  rel="nofollow">https://www.cosmicsoftware.com/download_stm8_free.php</a></p> <p>需要注册, 安装后需要注册获得 license 文件, 并放到安装目录下</p> <h2 id="开发工具库-spl">开发工具库 SPL</h2> <ul> <li>ST Microelectronics 提供的原始SPL <a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.st.com/en/embedded-software/stsw-stm8069.html"  target="_blank"  rel="nofollow">https://www.st.com/en/embedded-software/stsw-stm8069.html</a> </li> <li>GitHub 上第三方维护的 STM8S103F3_SPL(推荐) <a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/CircuitDigest/STM8S103F3_SPL"  target="_blank"  rel="nofollow">https://github.com/CircuitDigest/STM8S103F3_SPL</a> </li> </ul> <h1 id="开发">开发</h1> <h2 id="创建项目">创建项目</h2> <p>打开 STVD</p> <ol> <li>File -&gt; WorkSpace, New Workspace 输入 Workspace 名称, 项目名和路径</li> <li>创建项目, 注意在路径中增加子目录给项目, 否则项目会和Workspace生成到同一个目录下</li> <li>设置工具链: 选择STM8 Cosmic, 指定toolchains到对应的目录, 默认的目录为 <code>C:\Program Files (x86)\COSMIC\FSE_Compilers\CXSTM8</code> </li> <li>选择芯片型号, 例如对于 STM8S103F3P6 选择 STM8S103F3P, 然后点 Select 按钮, 会出现在下面的 Selected MCU 中, 然后点 OK</li> </ol> <p>建好后能看到项目结构下有三个目录Source Files, Include Files 和 External Dependencies, 在 Source Files 下创建了 main.c 和 stm8_interrupt_vector.c 这两个文件</p> <p>这时候直接按 F7 检查是否能正确编译</p> <h2 id="添加spl">添加SPL</h2> <p>将下载的SPL的 inc 和 src 目录解压到项目目录下, 目录结构如下</p> <pre><code class="language-bash">. │  main.c │  stm8_interrupt_vector.c ├─Debug ├─Release └─STM8S103F3_SPL     ├─inc     │      stm8s.h     │      stm8s103_ADC.h     │      stm8s103_LCD_16x2.h     |      ...     │      stm8s_uart1.h     │      stm8s_wwdg.h     │     ├─src     │      stm8s_adc1.c     │      stm8s_awu.c     │      ...     │      stm8s_tim2.c     │      stm8s_uart1.c     │      stm8s_wwdg.c     │     ├─stm8s103 Libraries     └─Tutorials </code></pre> <p>也可以SPL放到项目其他目录下, 位置无所谓, 因为文件是否包含是通过STVD的项目配置控制的.</p> <ol> <li>在STVD中, 在项目结构下创建 SPL Inc 目录和 SPL Src 目录</li> <li>将STM8S103F3_SPL/inc下的.h文件添加到项目的 SPL Inc</li> <li>将STM8S103F3_SPL/src下的.c文件添加到项目的 SPL Src</li> </ol> <h2 id="测试代码">测试代码</h2> <p>修改 main.c, 下面的代码会驱动板载LED(B5)闪灯</p> <pre><code class="language-c">#include "stm8s.h"  void delay (int ms) //Function Definition  { 	int i = 0; 	int j = 0; 	for (i=0; i&lt;=ms; i++) 	{ 		for (j=0; j&lt;120; j++) // Nop = Fosc/4 			_asm("nop"); //Perform no operation //assembly code 	} }  main() { 	GPIO_DeInit(GPIOB); // prepare Port B for working   	GPIO_Init(GPIOB, GPIO_PIN_5, GPIO_MODE_OUT_PP_LOW_SLOW); 	while (1) 	{ 		GPIO_WriteReverse(GPIOB,GPIO_PIN_5); 		delay (100); 	} } </code></pre> <h2 id="编译">编译</h2> <p>直接按 F7 编译</p> <h2 id="debug">Debug</h2> <h3 id="设置">设置</h3> <ol> <li>在ST Visual Develop中, 点击 Debug instrument -&gt; Target Settings</li> <li>Debug Instrument Selection 选择 Swim ST-Link</li> <li>勾选 Restart the application with Swim Off on stop debug</li> <li>Target Port Selection 保留默认的 usb://usb</li> <li>勾选 Show the selected target notification at start of debugging session</li> <li>点击OK</li> </ol> <h3 id="开始debug">开始Debug</h3> <ol> <li>点击图标栏中的蓝色 D 图标, 或者菜单中的 Debug -&gt; Start Debugging 开始 Debug</li> <li>弹出提示选择Target, 如果有设置多个则选择 Swim ST-Link, 点击OK</li> <li>ST Visual Develop 会将程序写入目标开发板, 然后进入Debug状态, 程序停留在第一行</li> </ol> <p>这时候就可以进行debug了</p> <ol> <li>在代码行号右边点左键, 可以增加断点</li> <li>按 F5 往下继续执行 (直到遇到断点)</li> <li>按 F10 单步运行, Alt + F10 汇编单步运行,  Ctr + F10 运行到光标当前位置</li> <li>按 F11 进入方法, Ctr + F11 跳出方法</li> </ol> <h3 id="退出debug">退出Debug</h3> <p>点击图标栏或者菜单中的 Stop Debugging 退出 Debug</p> <h1 id="单独烧录">单独烧录</h1> <p>运行STVP</p> <p>点击 Configure -&gt; Configure ST Visual Programmer, 选择 ST-LINK + USB + SWIM + STM8S103F3</p> <p>在STVP中, 打开项目 Debug 目录下的 .s19 文件, 写入 PROGRAM MEMORY</p> <h2 id="写入后程序不运行的解决">写入后程序不运行的解决</h2> <p>写完后ST-LINK亮红灯, 并不会自动重启, 此时在STVP中打开Configure对话框点击一下确认, 就会变回蓝灯, 程序就会开始运行</p> <h2 id="the-device-is-protected解决方法">The device is protected解决方法</h2> <p>在STVP软件中, 在"PROGRAM MEMORY"和"DATA MEMORY"界面用<code>Ctrl</code>+<code>R</code>读出数据, 提示"The device is protected"</p> <ol> <li>右侧主面板上切换到"OPTION BYTE"页</li> <li>在表格的ROP选项, 选择"read out Protection OFF"</li> <li>菜单栏点击 Program -&gt; Current tab 保存配置, 配置写入之后就解开写保护了</li> <li>回到"PROGRAM MEMORY"和"DATA MEMORY"界面, 用<code>Ctrl</code>+<code>R</code>就可以读出数据了</li> </ol> <h1 id="参考">参考</h1> <ul> <li>官方产品页 <a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.st.com/en/microcontrollers-microprocessors/stm8s103f3.html"  target="_blank"  rel="nofollow">https://www.st.com/en/microcontrollers-microprocessors/stm8s103f3.html</a> </li> <li>STM8环境搭建和编译, 烧录 <a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://circuitdigest.com/microcontroller-projects/getting-started-with-stm8s-using-stvd-and-cosmic-c-compiler"  target="_blank"  rel="nofollow">https://circuitdigest.com/microcontroller-projects/getting-started-with-stm8s-using-stvd-and-cosmic-c-compiler</a> <ul> <li>视频 <a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.youtube.com/watch?v=fOQOH4A24DU"  target="_blank"  rel="nofollow">https://www.youtube.com/watch?v=fOQOH4A24DU</a> </li> </ul> </li> <li>STM8的GPIO <a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://circuitdigest.com/microcontroller-projects/gpio-functions-on-stm8s-using-cosmic-c-and-spl-blinking-led-with-push-button"  target="_blank"  rel="nofollow">https://circuitdigest.com/microcontroller-projects/gpio-functions-on-stm8s-using-cosmic-c-and-spl-blinking-led-with-push-button</a> <ul> <li>视频 <a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.youtube.com/watch?v=ipU71yvyVCM"  target="_blank"  rel="nofollow">https://www.youtube.com/watch?v=ipU71yvyVCM</a> </li> </ul> </li> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.instructables.com/STM8s-Breakout-Board-ST-Link-V2-Connection-Failure/"  target="_blank"  rel="nofollow">https://www.instructables.com/STM8s-Breakout-Board-ST-Link-V2-Connection-Failure/</a></li> </ul> 			
                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-458.htm">nohup: ignoring input and redirecting stderr to stdout报错</a></p>
                                                        <p>下一个：<a href="/html/category/article-460.htm">java面向对象是什么意思_java什么是面向对象</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-489.htm" title="CSS中文本居中显示">CSS中文本居中显示</a></li>
                        <li class="py-2"><a href="/html/category/article-482.htm" title="Hyperledger Fabric节点的动态添加和删除">Hyperledger Fabric节点的动态添加和删除</a></li>
                        <li class="py-2"><a href="/html/category/article-497.htm" title="HTML5画布 canvas移动">HTML5画布 canvas移动</a></li>
                        <li class="py-2"><a href="/html/category/article-522.htm" title="用字符串中的ASCII值替换所有特殊字符-JavaScript">用字符串中的ASCII值替换所有特殊字符-JavaScript</a></li>
                        <li class="py-2"><a href="/html/category/article-494.htm" title="python列表添加数据">python列表添加数据</a></li>
                        <li class="py-2"><a href="/html/category/article-518.htm" title="使用TreeMap在Java中对用户定义的对象进行排序">使用TreeMap在Java中对用户定义的对象进行排序</a></li>
                        <li class="py-2"><a href="/html/category/article-491.htm" title="我们可以作为参数传递给MySQL UNIX_TIMESTAMP函数的日期时间值的范围是多少？">我们可以作为参数传递给MySQL UNIX_TIMESTAMP函数的日期时间值的范围是多少？</a></li>
                        <li class="py-2"><a href="/html/category/article-493.htm" title="JavaScript动态操作select下拉框_javascript技巧_">JavaScript动态操作select下拉框_javascript技巧_</a></li>
                        <li class="py-2"><a href="/html/category/article-473.htm" title="VUE前端开发环境版本查看命令方法详解">VUE前端开发环境版本查看命令方法详解</a></li>
                        <li class="py-2"><a href="/html/category/article-478.htm" title="JavaScript如何添加用于将案例交换到字符串原型对象的函数">JavaScript如何添加用于将案例交换到字符串原型对象的函数</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">26</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            
            </div>
        </div>
    </section>
    
        <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    SwedenAddress 版权所有
                    <br />
                    Powered by WordPress
                </p>
                <div class="col-lg-4 main-social-footer-29">
                    <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                    <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                    <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                    <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                </div>
            </div>
        </div>
    </section>
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-long-arrow-up"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- /move top -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>