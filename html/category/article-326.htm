<!doctype html>
<html lang="zh-CN">

<head>
    <!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="canonical" href="https://swedenaddress.github.io/html/category/article-326.htm" />
<link rel="icon" href="/assets/addons/xcblog/img/swedenaddress/favicon.ico" type="image/x-icon"/>
<title>如何保证Redis缓存和数据库一致性？ - SwedenAddress</title>
<link rel="stylesheet" href="/assets/addons/xcblog/css/swedenaddress/style-starter.css">
<link href="https://fonts.googleapis.com/css?family=Josefin+Slab:400,700,700i&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?ff0c66a832e6568df61664f01ded8b73";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="home">
    <section class=" w3l-header-4 header-sticky">
    <header class="absolute-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a class="navbar-brand" href="/">
                        Sweden Address
                    </a>
                                <button class="navbar-toggler bg-gradient collapsed" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="fa icon-expand fa-bars"></span>
                    <span class="fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
        </div>
        </nav>
        </div>
    </header>
</section>
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/jquery-3.3.1.min.js"></script> <!-- Common jquery plugin -->
<!--bootstrap working-->
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/bootstrap.min.js"></script>
<!-- //bootstrap working-->
<!-- disable body scroll which navbar is in active -->
<script>
$(function() {
    $('.navbar-toggler').click(function() {
        $('body').toggleClass('noscroll');
    })
});
</script>
    <!-- breadcrumbs -->
    <section class="w3l-inner-banner-main">
        <div class="about-inner about ">
            <div class="container">
                <div class="main-titles-head text-center">
                    <h1 class="header-name" style="word-break: break-all;">
                        如何保证Redis缓存和数据库一致性？                    </h1>
                    
                </div>
            </div>
        </div>
        <div class="breadcrumbs-sub">
            <div class="container">
                <ul class="breadcrumbs-custom-path">
                    <li class="right-side propClone"><a href="/" class="">首页 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="right-side propClone"><a href="/html/category/" class="">文章分类 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="active ">正文</li>
                </ul>
            </div>
        </div>
        </div>
    </section>
    <!-- breadcrumbs //-->
    <section class="w3l-content-with-photo-4" id="about">
        <div class="content-with-photo4-block ">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p><strong>首先我们先了解下缓存是什么？</strong><br /> 缓存就是把低速存储的结果，临时保存在高速存储的技术。</p> <p><strong>为什么使用redis进行缓存数据？</strong></p> <p>Redis嘛，就是一种运行速度很快，并发很强的跑在内存上的NoSql数据库，支持键到五种数据类型的映射，（string、list、set、zset、hash）,而memecache只能支持简单的数据类型。另外redis可以完成一部份数据的持久化，而memecache完全将数据保存在内存中，不进行持久化，如果服务器出问题，数据将全部丢失，另外一个原因是redis底层实现优化比memecache好。另外采用了多路复用io阻塞机制，数据结构简单，操作节省时间。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220824/09e7d81dd6edd3b78a5a3195766ee6a5.jpg" alt="如何保证Redis缓存和数据库一致性？"></p> <p>那常见的保证缓存与数据库一致的方法有哪些呢？</p> <p>想要保证缓存与数据库的双写一致，一共有4种方式，即4种同步策略：<br /><strong>先更新缓存，再更新数据库；<br /> 先更新数据库，再更新缓存；<br /> 先删除缓存，再更新数据库；<br /> 先更新数据库，再删除缓存。</strong></p> <p>那么我们需要做的就是根据不同的场景来使用合理的方式来解决数据问题。</p> <p><strong>第一种：先删除缓存，再更新数据库</strong></p> <p>在出现失败时可能出现的问题：</p> <p>1：线程A删除缓存成功，线程A更新数据库失败；</p> <p>2 ：线程B从缓存中读取数据；由于缓存被删，进程B无法从缓存中得到数据，进而从数据库读取数据；此时数据库中的数据更新失败，线程B从数据库成功获取旧的数据，然后将数据更新到了缓存。<br /> 最终，缓存和数据库的数据是一致的，但仍然是旧的数据。</p> <p><strong>第二种：先更新数据库，再删除缓存</strong></p> <p>假设这会有两个请求，一个请求A做查询操作，一个请求B做更新操作，那么会有如下情形产生</p> <p>（1）缓存刚好失效<br /> （2）请求A查询数据库，得一个旧值<br /> （3）请求B将新值写入数据库<br /> （4）请求B删除缓存<br /> （5）请求A将查到的旧值写入缓存<br /> 如果发生上述情况，确实是会发生脏数据。<br /> 然而，发生这种情况的概率又有多少呢？<br /> 发生上述情况有一个先天性条件，就是步骤（3）的写数据库操作比步骤（2）的读数据库操作耗时更短，才有可能使得步骤（4）先于步骤（5）。<br /> 数据库的读操作的速度远快于写操作的（不然做读写分离干嘛，做读写分离的意义就是因为读操作比较快，耗资源少），因此步骤（3）耗时比步骤（2）更短，这一情形很难出现。<br /> 先更新数据库，再删缓存依然会有问题，不过，问题出现的可能性会因为上面说的原因，变得比较低。</p> <p><strong>第三种：给所有的缓存一个失效期</strong></p> <p>第三种方案可以说是一个大杀器，任何不一致，都可以靠失效期解决，失效期越短，数据一致性越高。但是失效期越短，查数据库就会越频繁。因此失效期应该根据业务来定。<br /> 1.并发不高的情况：<br /> 读: 读redis-&gt;没有，读mysql-&gt;把mysql数据写回redis，有的话直接从redis中取；<br /> 写: 写mysql-&gt;成功，再写redis；<br /> 2.并发高的情况：<br /> 读: 读redis-&gt;没有，读mysql-&gt;把mysql数据写回redis，有的话直接从redis中取；<br /> 写：异步话，先写入redis的缓存，就直接返回；定期或特定动作将数据保存到mysql，可以做到多次更新，一次保存；</p> <p><strong>第四种：加锁，使线程顺序执行</strong></p> <p>如果一个服务部署到了多个机器，就变成了分布式锁，或者是分布式队列按顺序去操作数据库或者 Redis，带来的副作用就是：数据库本来是并发的，现在变成串行的了，加锁或者排队执行的方案降低了系统性能，所以这个方案看起来不太可行。</p> <p><strong>第五种：采用双删</strong></p> <p>先删除缓存，再更新数据库，当更新数据后休眠一段时间再删除一次缓存。</p> <p>方案推荐两种：</p> <p>1：项目整合quartz等定时任务框架，去实现延时3–5s再去执行最后一步任务 。（推荐使用）<br /> 2：创建线程池，线程池中拿一个线程，线程体中延时3-5s再去执行最后一步任务（不能忘了启动线程）</p> <p><strong>第六种：异步更新缓存(基于订阅binlog的同步机制)</strong></p> <p>MySQL binlog增量订阅消费+消息队列+增量数据更新到redis读Redis</p> <p>热数据基本都在Redis写MySQL:增删改都是操作MySQL更新Redis数据：MySQ的数据操作binlog，来更新到Redis：</p> <p>1)数据操作主要分为两大块：一个是全量(将全部数据一次写入到redis)一个是增量(实时更新)。</p> <p>这里说的是增量,指的是mysql的update、insert、delate变更数据。</p> <p>2)读取binlog后分析 ，利用消息队列,推送更新各台的redis缓存数据。<br /> 这样一旦MySQL中产生了新的写入、更新、删除等操作，就可以把binlog相关的消息推送至Redis，Redis再根据binlog中的记录，对Redis进行更新。<br /> 其实这种机制，很类似MySQL的主从备份机制，因为MySQL的主备也是通过binlog来实现的数据一致性。<br /> 这里可以结合使用canal(阿里的一款开源框架)，通过该框架可以对MySQL的binlog进行订阅，而canal正是模仿了mysql的slave数据库的备份请求，使得Redis的数据更新达到了相同的效果。<br /> 当然，这里的消息推送工具你也可以采用别的第三方：kafka、rabbitMQ等来实现推送更新Redis。</p> <p>以上就是redis和数据库数据保持一致的方案。<br /><strong>微信搜索IT说说公众号，获取更多java技术资源！</strong></p> </div> 			
                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-325.htm">idea社区版中使用tomcat部署Maven搭建的web项目</a></p>
                                                        <p>下一个：<a href="/html/category/article-327.htm">c#对Datatable数据的处理：DataTable.Select()和DataTable.DefaultView.ToTable()；DataRow转DataTable</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6106.htm" title="猫打疫苗总共多少钱（猫打疫苗多少钱一只啊）">猫打疫苗总共多少钱（猫打疫苗多少钱一只啊）</a></li>
                        <li class="py-2"><a href="/html/category/article-5931.htm" title="厦门宠物寄养哪里好 厦门宠物寄养哪里好点">厦门宠物寄养哪里好 厦门宠物寄养哪里好点</a></li>
                        <li class="py-2"><a href="/html/category/article-6019.htm" title="动物医院申请条件有哪些要求和条件呢（动物医院诊疗许可证办理）">动物医院申请条件有哪些要求和条件呢（动物医院诊疗许可证办理）</a></li>
                        <li class="py-2"><a href="/html/category/article-4404.htm" title="动物疫苗品牌排名前十 动物疫苗品牌排名前十名">动物疫苗品牌排名前十 动物疫苗品牌排名前十名</a></li>
                        <li class="py-2"><a href="/html/category/article-4294.htm" title="开宠物店的方案（开宠物店的方案有哪些）">开宠物店的方案（开宠物店的方案有哪些）</a></li>
                        <li class="py-2"><a href="/html/category/article-3731.htm" title="夯实基础图解作用域链和闭包">夯实基础图解作用域链和闭包</a></li>
                        <li class="py-2"><a href="/html/category/article-4517.htm" title="味蕾工坊（味蕾工坊蛋糕）">味蕾工坊（味蕾工坊蛋糕）</a></li>
                        <li class="py-2"><a href="/html/category/article-1631.htm" title="Vue动态样式:class用法">Vue动态样式:class用法</a></li>
                        <li class="py-2"><a href="/html/category/article-2532.htm" title="面向对象编程-终结篇 es6新增语法">面向对象编程-终结篇 es6新增语法</a></li>
                        <li class="py-2"><a href="/html/category/article-4126.htm" title="vue 配置全局模块、SASS（自动引入模块）">vue 配置全局模块、SASS（自动引入模块）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            
            </div>
        </div>
    </section>
    
        <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    SwedenAddress 版权所有
                    <br />
                    Powered by WordPress
                </p>
                <div class="col-lg-4 main-social-footer-29">
                    <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                    <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                    <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                    <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                </div>
            </div>
        </div>
    </section>
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-long-arrow-up"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- /move top -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>