<!doctype html>
<html lang="zh-CN">

<head>
    <!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="canonical" href="https://swedenaddress.github.io/html/category/article-339.htm" />
<link rel="icon" href="/assets/addons/xcblog/img/swedenaddress/favicon.ico" type="image/x-icon"/>
<title>Springboot 使用RestTemplate - SwedenAddress</title>
<link rel="stylesheet" href="/assets/addons/xcblog/css/swedenaddress/style-starter.css">
<link href="https://fonts.googleapis.com/css?family=Josefin+Slab:400,700,700i&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?ff0c66a832e6568df61664f01ded8b73";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="home">
    <section class=" w3l-header-4 header-sticky">
    <header class="absolute-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a class="navbar-brand" href="/">
                        Sweden Address
                    </a>
                                <button class="navbar-toggler bg-gradient collapsed" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="fa icon-expand fa-bars"></span>
                    <span class="fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
        </div>
        </nav>
        </div>
    </header>
</section>
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/jquery-3.3.1.min.js"></script> <!-- Common jquery plugin -->
<!--bootstrap working-->
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/bootstrap.min.js"></script>
<!-- //bootstrap working-->
<!-- disable body scroll which navbar is in active -->
<script>
$(function() {
    $('.navbar-toggler').click(function() {
        $('body').toggleClass('noscroll');
    })
});
</script>
    <!-- breadcrumbs -->
    <section class="w3l-inner-banner-main">
        <div class="about-inner about ">
            <div class="container">
                <div class="main-titles-head text-center">
                    <h1 class="header-name" style="word-break: break-all;">
                        Springboot 使用RestTemplate                    </h1>
                    
                </div>
            </div>
        </div>
        <div class="breadcrumbs-sub">
            <div class="container">
                <ul class="breadcrumbs-custom-path">
                    <li class="right-side propClone"><a href="/" class="">首页 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="right-side propClone"><a href="/html/category/" class="">文章分类 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="active ">正文</li>
                </ul>
            </div>
        </div>
        </div>
    </section>
    <!-- breadcrumbs //-->
    <section class="w3l-content-with-photo-4" id="about">
        <div class="content-with-photo4-block ">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="htmledit_views"> <p><strong>最近项目中springboot使用了RestTemplate，在此了解和学习了一下，有问题请指正</strong></p> <h2 id="%E5%88%9B%E5%BB%BARestTemplate%C2%A0">创建RestTemplate&nbsp;</h2> <pre><code class="language-java">//自创建RestTemplate  public static RestTemplate restTemplate() {         SimpleClientHttpRequestFactory requestFactory = new SimpleClientHttpRequestFactory();         requestFactory.setConnectTimeout(30000);// 设置连接超时，单位毫秒         requestFactory.setReadTimeout(30000);  //设置读取超时         RestTemplate restTemplate = new RestTemplate();         restTemplate.setRequestFactory(requestFactory);         logger.info("RestTemplate初始化完成");         return restTemplate;     }    //使用注解注入 @Autowired private  RestTemplate restTemplate;</code></pre> <p>引用的是spring-web-4.3.6.RELEASE.jar</p> <h2 id="%E8%AE%BE%E7%BD%AE%E8%AF%B7%E6%B1%82%E5%A4%B4HttpHeaders">设置请求头HttpHeaders</h2> <p>请求头中常设置的参数是Content-Type，一般用setContentType(MediaType mediaType)方式添加MediaType类中存在的值，或者用add(name，value)的方式添加所需要的值</p> <p>MediaType类关于具体值的源码如下：</p> <pre><code class="language-java">public static final MediaType ALL = valueOf("*/*");     public static final String ALL_VALUE = "*/*";     public static final MediaType APPLICATION_ATOM_XML = valueOf("application/atom+xml");     public static final String APPLICATION_ATOM_XML_VALUE = "application/atom+xml";     public static final MediaType APPLICATION_FORM_URLENCODED = valueOf("application/x-www-form-urlencoded");     public static final String APPLICATION_FORM_URLENCODED_VALUE = "application/x-www-form-urlencoded";     public static final MediaType APPLICATION_JSON = valueOf("application/json");     public static final String APPLICATION_JSON_VALUE = "application/json";     public static final MediaType APPLICATION_JSON_UTF8 = valueOf("application/json;charset=UTF-8");     public static final String APPLICATION_JSON_UTF8_VALUE = "application/json;charset=UTF-8";     public static final MediaType APPLICATION_OCTET_STREAM = valueOf("application/octet-stream");     public static final String APPLICATION_OCTET_STREAM_VALUE = "application/octet-stream";     public static final MediaType APPLICATION_PDF = valueOf("application/pdf");     public static final String APPLICATION_PDF_VALUE = "application/pdf";     public static final MediaType APPLICATION_RSS_XML = valueOf("application/rss+xml");     public static final String APPLICATION_RSS_XML_VALUE = "application/rss+xml";     public static final MediaType APPLICATION_XHTML_XML = valueOf("application/xhtml+xml");     public static final String APPLICATION_XHTML_XML_VALUE = "application/xhtml+xml";     public static final MediaType APPLICATION_XML = valueOf("application/xml");     public static final String APPLICATION_XML_VALUE = "application/xml";     public static final MediaType IMAGE_GIF = valueOf("image/gif");     public static final String IMAGE_GIF_VALUE = "image/gif";     public static final MediaType IMAGE_JPEG = valueOf("image/jpeg");     public static final String IMAGE_JPEG_VALUE = "image/jpeg";     public static final MediaType IMAGE_PNG = valueOf("image/png");     public static final String IMAGE_PNG_VALUE = "image/png";     public static final MediaType MULTIPART_FORM_DATA = valueOf("multipart/form-data");     public static final String MULTIPART_FORM_DATA_VALUE = "multipart/form-data";     public static final MediaType TEXT_EVENT_STREAM = valueOf("text/event-stream");     public static final String TEXT_EVENT_STREAM_VALUE = "text/event-stream";     public static final MediaType TEXT_HTML = valueOf("text/html");     public static final String TEXT_HTML_VALUE = "text/html";     public static final MediaType TEXT_MARKDOWN = valueOf("text/markdown");     public static final String TEXT_MARKDOWN_VALUE = "text/markdown";     public static final MediaType TEXT_PLAIN = valueOf("text/plain");     public static final String TEXT_PLAIN_VALUE = "text/plain";     public static final MediaType TEXT_XML = valueOf("text/xml");     public static final String TEXT_XML_VALUE = "text/xml";     private static final String PARAM_QUALITY_FACTOR = "q";</code></pre> <p>&nbsp;<strong>具体写法如下：</strong></p> <pre><code class="language-java">HttpHeaders headers = new HttpHeaders(); //相当于headers.add("Content-Type","application/json;charset=UTF-8"); headers.setContentType(MediaType.APPLICATION_JSON_UTF8); 或者添加MediaType类没有的值 headers.add("Content-Type","application/x-www-form-urlencoded; charset=UTF-8");</code></pre> <h2>post请求</h2> <h3>postForEntity</h3> <p><strong>如果请求参数是form-data类型的可以如下写法：</strong></p> <pre><code class="language-java">String url = "http://127.0.0.1:8080/login"; LinkedMultiValueMap&lt;String, Object&gt; paramMap = new LinkedMultiValueMap&lt;&gt;(); paramMap.add("username", "zhangsan"); paramMap.add("password", "123456"); paramMap.add("randomStr",String.valueOf(System.currentTimeMillis())); HttpEntity&lt;LinkedMultiValueMap&lt;String, Object&gt;&gt; httpEntity = new HttpEntity&lt;&gt;(paramMap, requestHeaders);  ResponseEntity&lt;String&gt; exchange = restTemplate.postForEntity(url, httpEntity, String.class);  String resultRemote = exchange.getBody();//得到返回的值 </code></pre> <p><strong>具体的请求参数和返回的参数样例如下：</strong></p> <p style="margin-left:0pt;">参数：</p> <p style="margin-left:0pt;">｛</p> <p style="margin-left:0pt;">username: 张三</p> <p style="margin-left:0pt;">password: 123456</p> <p style="margin-left:0pt;">randomStr: 1597300142432</p> <p style="margin-left:0pt;">｝</p> <p style="margin-left:0pt;">返回：</p> <p style="margin-left:21pt;">{<!-- --></p> <p style="margin-left:21pt;">"code": 200,</p> <p style="margin-left:21pt;">"msg": "操作成功",</p> <p style="margin-left:21pt;">"data": {<!-- --></p> <p style="margin-left:21pt;">"token": "dfghjkl",</p> <p style="margin-left:21pt;">"username": "张三",</p> <p style="margin-left:21pt;">},</p> <p style="margin-left:21pt;">"timestamp": 1597299860</p> <p style="margin-left:0pt;">}</p> <p><strong>如果请求参数是json，而且里面还有json数组</strong></p> <pre><code class="language-java">Map&lt;String,Object&gt; jsonMap = new HashMap&lt;&gt;(); jsonMap.put("com","ty"); Map&lt;String,Object&gt; deMap = new HashMap&lt;&gt;(); deMap.put("name", "设备"); List&lt;Object&gt; list = new ArrayList&lt;&gt;(); list.add(deMap); jsonMap.put("des",list); logger.info("----"+JSONObject.toJSONString(jsonMap));  HttpEntity&lt;String&gt;  httpEntitys = new HttpEntity&lt;&gt;(JSONObject.toJSONString(jsonMap),requestHeader); ResponseEntity&lt;String&gt; exchanges = restTemplate.postForEntity(url, httpEntitys, String.class);  String resultRemote = exchanges.getBody(); Map stringToMap = JSONObject.parseObject(resultRemote);</code></pre> <p>例子：</p> <p style="margin-left:0pt;">{<!-- --></p> <p style="margin-left:0pt;">&nbsp; &nbsp; des": [{<!-- --></p> <p style="margin-left:0pt;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "name": "设备"</p> <p style="margin-left:0pt;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}],</p> <p style="margin-left:0pt;">"com": "ty"</p> <p style="margin-left:0pt;">}</p> <p style="margin-left:0pt;">返回：</p> <p style="margin-left:0pt;">{<!-- --></p> <p style="margin-left:0pt;">"code": 200,</p> <p style="margin-left:0pt;">"msg": "操作成功",</p> <p style="margin-left:0pt;">"data": "567897890-090",</p> <p style="margin-left:0pt;">"timestamp": 2367301740</p> <p style="margin-left:0pt;">}</p> <p style="margin-left:0pt;">&nbsp;</p> <h2 style="margin-left:0pt;">Get请求</h2> <h3>getForEntity请求不带参数，默认请求头</h3> <pre><code class="language-java">//请求不带参数，默认请求头 String url = "xxx.xx.xx"; ResponseEntity&lt;String&gt; result = restTemplate.getForEntity(url,String.class);   </code></pre> <h3 style="margin-left:0pt;">getForEntity请求带参数</h3> <pre><code class="language-java">//URL作为String String url = "http://127.0.0.1:8080/login?name={name}"; Map&lt;String,String&gt; map = new HashMap&lt;&gt;(); map.put("name","张三"); ResponseEntity&lt;String&gt; result = restTemplate.getForEntity(url,String.class,map);  //URL作为URI,参数存进URI中 UriComponents uriComponents = UriComponentsBuilder.fromUriString(url).build().expand("李四").encode(); URI uri = uriComponents.toUri(); ResponseEntity&lt;String&gt; result = restTemplate.getForEntity(uri,String.class);   //返回参数也可以是自定义对象例如User String url = "http://127.0.0.1:8080/login?name={name}"; Map&lt;String,String&gt; map = new HashMap&lt;&gt;(); map.put("name","张三"); ResponseEntity&lt;User&gt; result = restTemplate.getForEntity(url,User.class,map); </code></pre> <h3 style="margin-left:0pt;">get请求带请求头 exchange</h3> <pre><code class="language-java">HttpHeaders resultRequestHeader = new HttpHeaders(); resultRequestHeader.add("Authorization", "wetyuigyihjj"); resultRequestHeader.add("charset", "UTF-8"); resultRequestHeader.setContentType(MediaType.APPLICATION_JSON); LinkedMultiValueMap&lt;String, Object&gt; resultParamMap = new LinkedMultiValueMap&lt;&gt;();  HttpEntity&lt;String&gt;  resultHttpEntity = new HttpEntity&lt;&gt;(null, resultRequestHeader); ResponseEntity&lt;String&gt; exchange = restTemplate.exchange(resultUrl, HttpMethod.GET,resultHttpEntity,String.class);  resultRemote = exchange.getBody(); logger.info("结果resultRemote:"+resultRemote); Map stringToMap = JSONObject.parseObject(resultRemote);</code></pre> <h2 style="margin-left:0pt;">PUT请求</h2> <pre><code class="language-java">//put方法的参数和postForEntity方法的参数基本一致 String url = "http://127.0.0.1:8080/login"; Map&lt;String,Object&gt; jsonMap = new HashMap&lt;&gt;(); jsonMap.put("username","admin"); jsonMap.put("password","123456"); HttpEntity&lt;String&gt;  httpEntitys = new HttpEntity&lt;&gt;(JSONObject.toJSONString(jsonMap),requestHeaders);  restTemplate.put(url,httpEntitys,String.class);</code></pre> <p style="margin-left:0pt;">&nbsp;</p> <h3 style="margin-left:0pt;">DELETE 请求</h3> <pre><code class="language-java">String url = "http://127.0.0.1:8080/get?name={name}"; restTemplate.delete(url,"张三");</code></pre> <p style="margin-left:0pt;">&nbsp;</p> <h2 style="margin-left:0pt;">exchange方法</h2> <h3>post请求</h3> <pre><code class="language-java">String url = "http://127.0.0.1:8080/login"; LinkedMultiValueMap&lt;String, Object&gt; paramMap = new LinkedMultiValueMap&lt;&gt;(); paramMap.add("username", "zhangsan"); paramMap.add("password", "123456"); paramMap.add("randomStr",String.valueOf(System.currentTimeMillis())); HttpEntity&lt;LinkedMultiValueMap&lt;String, Object&gt;&gt; httpEntity = new HttpEntity&lt;&gt;(paramMap, requestHeaders);  ResponseEntity&lt;String&gt; result = restTemplate.exchange(url, HttpMethod.POST,httpEntitys,String.class);  String resultRemote = exchange.getBody();//得到返回的值</code></pre> <pre>&nbsp;</pre> <h3>get请求</h3> <pre><code class="language-java">ResponseEntity&lt;String&gt; exchange = restTemplate.exchange(resultUrl, HttpMethod.GET,resultHttpEntity,String.class);  或者  ResponseEntity&lt;String&gt; exchange = restTemplate.exchange(url, HttpMethod.GET,null,String.class);</code></pre> <p>&nbsp;</p> <h3>put请求</h3> <pre><code class="language-java">String url = "http://127.0.0.1:8080/login"; LinkedMultiValueMap&lt;String, Object&gt; paramMap = new LinkedMultiValueMap&lt;&gt;(); paramMap.add("username", "zhangsan"); paramMap.add("password", "123456"); paramMap.add("randomStr",String.valueOf(System.currentTimeMillis())); HttpEntity&lt;LinkedMultiValueMap&lt;String, Object&gt;&gt; httpEntity = new HttpEntity&lt;&gt;(paramMap, requestHeaders);  ResponseEntity&lt;String&gt; result = restTemplate.exchange(url, HttpMethod.PUT,httpEntitys,String.class);</code></pre> <h3>delete请求</h3> <pre><code class="language-java">String url = "http://127.0.0.1:8080/get"; ResponseEntity&lt;String&gt; result = restTemplate.exchange(url + "?id={id}", HttpMethod.DELETE, null, String.class, 56789);</code></pre> </p></div> 			
                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-338.htm">InnoDB的逻辑存储结构是什么，表空间组成包括哪些？_在线工具</a></p>
                                                        <p>下一个：<a href="/html/category/article-340.htm">kafka踩坑java找不到kafka-run-class.sh: line 309: exec: java: not found</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6709.htm" title="宠物店一个月挣5万（宠物店一个月盈利大概是多少）">宠物店一个月挣5万（宠物店一个月盈利大概是多少）</a></li>
                        <li class="py-2"><a href="/html/category/article-4481.htm" title="动物接种疫苗的方法有几种呢（动物接种疫苗的方法有几种呢图片）">动物接种疫苗的方法有几种呢（动物接种疫苗的方法有几种呢图片）</a></li>
                        <li class="py-2"><a href="/html/category/article-4294.htm" title="开宠物店的方案（开宠物店的方案有哪些）">开宠物店的方案（开宠物店的方案有哪些）</a></li>
                        <li class="py-2"><a href="/html/category/article-4516.htm" title="公务员国考考试报名入口官网（国家公务员国考报名入口）">公务员国考考试报名入口官网（国家公务员国考报名入口）</a></li>
                        <li class="py-2"><a href="/html/category/article-6194.htm" title="瑞鹏宠物医院什么时候上市（瑞鹏宠物医院创始人简历）">瑞鹏宠物医院什么时候上市（瑞鹏宠物医院创始人简历）</a></li>
                        <li class="py-2"><a href="/html/category/article-4517.htm" title="味蕾工坊（味蕾工坊蛋糕）">味蕾工坊（味蕾工坊蛋糕）</a></li>
                        <li class="py-2"><a href="/html/category/article-4552.htm" title="济南领养宠物的地方 济南领养宠物的地方有哪些">济南领养宠物的地方 济南领养宠物的地方有哪些</a></li>
                        <li class="py-2"><a href="/html/category/article-6754.htm" title="宠物医院收费价目（宠物医院收费价目表内江）">宠物医院收费价目（宠物医院收费价目表内江）</a></li>
                        <li class="py-2"><a href="/html/category/article-4371.htm" title="瑞鹏宠物医院百度百科（瑞鹏宠物医院成立时间）">瑞鹏宠物医院百度百科（瑞鹏宠物医院成立时间）</a></li>
                        <li class="py-2"><a href="/html/category/article-4370.htm" title="女生学动物医学好吗专科生（女生学动物医学专业好吗）">女生学动物医学好吗专科生（女生学动物医学专业好吗）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            
            </div>
        </div>
    </section>
    
        <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    SwedenAddress 版权所有
                    <br />
                    Powered by WordPress
                </p>
                <div class="col-lg-4 main-social-footer-29">
                    <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                    <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                    <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                    <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                </div>
            </div>
        </div>
    </section>
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-long-arrow-up"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- /move top -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>