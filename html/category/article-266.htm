<!doctype html>
<html lang="zh-CN">

<head>
    <!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="canonical" href="https://swedenaddress.github.io/html/category/article-266.htm" />
<link rel="icon" href="/assets/addons/xcblog/img/swedenaddress/favicon.ico" type="image/x-icon"/>
<title>KMP算法中的next数组详解 - SwedenAddress</title>
<link rel="stylesheet" href="/assets/addons/xcblog/css/swedenaddress/style-starter.css">
<link href="https://fonts.googleapis.com/css?family=Josefin+Slab:400,700,700i&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?ff0c66a832e6568df61664f01ded8b73";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="home">
    <section class=" w3l-header-4 header-sticky">
    <header class="absolute-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a class="navbar-brand" href="/">
                        Sweden Address
                    </a>
                                <button class="navbar-toggler bg-gradient collapsed" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="fa icon-expand fa-bars"></span>
                    <span class="fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
        </div>
        </nav>
        </div>
    </header>
</section>
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/jquery-3.3.1.min.js"></script> <!-- Common jquery plugin -->
<!--bootstrap working-->
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/bootstrap.min.js"></script>
<!-- //bootstrap working-->
<!-- disable body scroll which navbar is in active -->
<script>
$(function() {
    $('.navbar-toggler').click(function() {
        $('body').toggleClass('noscroll');
    })
});
</script>
    <!-- breadcrumbs -->
    <section class="w3l-inner-banner-main">
        <div class="about-inner about ">
            <div class="container">
                <div class="main-titles-head text-center">
                    <h1 class="header-name" style="word-break: break-all;">
                        KMP算法中的next数组详解                    </h1>
                    
                </div>
            </div>
        </div>
        <div class="breadcrumbs-sub">
            <div class="container">
                <ul class="breadcrumbs-custom-path">
                    <li class="right-side propClone"><a href="/" class="">首页 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="right-side propClone"><a href="/html/category/" class="">文章分类 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="active ">正文</li>
                </ul>
            </div>
        </div>
        </div>
    </section>
    <!-- breadcrumbs //-->
    <section class="w3l-content-with-photo-4" id="about">
        <div class="content-with-photo4-block ">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<h1 id="kmp-算法中对-next-数组的理解">KMP 算法中对 next 数组的理解</h1> <h2 id="next-数组的意义">next 数组的意义</h2> <p>此处 next[j] = k；则有 k 前面的浅蓝色区域和 j 前面的浅蓝色区域相同；</p> <p>next[j] 表示当位置 j 的字符串与主串不匹配时，下一个需要和主串比较的字串位置在 next[j] 处；有下图：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/435eb439c59f823a4adf7f414fd7fb7c.jpg" alt="KMP算法中的next数组详解"></p> <p>若当前位置 j 与主串某一个字符不匹配，则下一次比较的是 K 与主串的当前位置，这个 K 也就是next[j]；由于两个浅蓝色区域相同，因此 K 前面的区域肯定与主串相同，不需比较；如下图：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/a0e7afd996bbf8b9f0001f2a96233b18.jpg" alt="KMP算法中的next数组详解"></p> <p>由上图可知，K 前面的区域不需比较；</p> <h2 id="next-数组的推导">next 数组的推导</h2> <p>从 next 数组所表达的意义可知，我们要求 next[j]，首先要找到一个 K，这个 K 前面的浅蓝色区域和 j 前面的浅蓝色区域相同；如下图：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/435eb439c59f823a4adf7f414fd7fb7c.jpg" alt="KMP算法中的next数组详解"></p> <p>根据规定 next[1] = 0；接下来求其他的 next[j]；</p> <p>对于 next[2] 可得其必然为 next[2] = 1；</p> <p>如下图：当第二个元素不匹配时，j 将退回到 1 处进行比较，因此 next[2] 一定为 1；</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/b67eacc23d3f1e47d84109d7b3ddf7f7.jpg" alt="KMP算法中的next数组详解"></p> <p>接下来是一般情况的推导，此处使用递推法进行推导，即已知 next[j] 求 next[j + 1]；</p> <p>若 next[j] = k 则有下图：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/c3ddd12bc3b9bc60bfc05429ffbd34bc.jpg" alt="KMP算法中的next数组详解"></p> <p>由于 next[j = k，可知浅蓝色部分相同；接下来分两种情况讨论；</p> <ul> <li> <p>ch[K] == ch[j]，这种情况时，可以得到下图；</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/ceb8888dbf20ba362e53d01f9f9b9722.jpg" alt="KMP算法中的next数组详解"></p> </li> </ul> <p>由图可知：对于 j + 1，能够找到一个 K + 1 使得有浅蓝色区域相同，那么当 j + 1 不匹配时，下一次将比较 K + 1 和主串；因此 next[j + 1] = K + 1 = next[j] + 1；</p> <ul> <li> <p>ch[K] != ch[j]，这种情况就变的复杂，这也是整个 KMP 算法中最难理解的部分；</p> <p>从本节的开头可以知道，求 next[j + 1] 最关键的一点在于求 j + 1 之前有多长的后缀和前缀匹配，即找出多大的浅蓝色区域匹配；我们现在面对的图如下：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/256b1e9b972765f60b4e1665bef93d48.jpg" alt="KMP算法中的next数组详解"></p> </li> </ul> <p>我们的目的是找到一个 K1 使得出现下列情况：找到 K1 使得浅蓝色部分相同；</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/55433722a109b8d4415ea5499788f9cf.jpg" alt="KMP算法中的next数组详解"></p> <p>要想浅蓝色部分相同，分为两个部分，使得 1 和 2 相同，使得 K1 和 j 相同；</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/d6730e1627357bb0951dd56e35ea6260.jpg" alt="KMP算法中的next数组详解"></p> <p>想要让 1 和 2 相同是难以比较的，但是可以转化为另一个问题，如下图：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/cc72ad97bf27299bd8a4f3b49058dfdc.jpg" alt="KMP算法中的next数组详解"></p> <p><strong>想要找出 1 和 3 相同的区域，等价与找到 1 和 2 相同的区域；</strong>为什么呢？因为 next[j] = K，因此 j 前面与 K 前面相同如下图：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/435eb439c59f823a4adf7f414fd7fb7c.jpg" alt="KMP算法中的next数组详解"></p> <p>这个等价关系非常重要，是这部分推导的关键；将其单独抽离出来如下图：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/cee276050b3fcc10c73f6c70d6eb0d81.jpg" alt="KMP算法中的next数组详解"></p> <p>那么如何得到 K1 使得 1 和 2 相同呢？回到文首 next[j] 所表示的意义，<strong>next[j] = k；则有 k 前面的浅蓝色区域和 j 前面的浅蓝色区域相同</strong> 而 next[K] 是在 j 前面的是已知的，因此可得 K1 = next[K]，此时得到的 K1 即可满足 1 和 3 相同；</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/cc72ad97bf27299bd8a4f3b49058dfdc.jpg" alt="KMP算法中的next数组详解">到此就解决了 1 和 3 相等的问题，直接比较 K1 和 j 若两者相同，则可得到下图；</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/55433722a109b8d4415ea5499788f9cf.jpg" alt="KMP算法中的next数组详解"></p> <p>那么 next[j + 1] = K1 + 1 = next[K] + 1 = next[next[j]] + 1；</p> <p>那么若 ch[j] != ch[K1] 呢？那么就又演化为如下问题：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/aca4be87b68f1d5156b4cf0448e0e8e8.jpg" alt="KMP算法中的next数组详解"></p> <p>这个图和本小节开始的图相同，那么按照此方法解决即可；</p> <p>可得结果：next[j + 1] = next[K1] + 1 = next[next[K]] + 1 = next[next[next[j]]] + 1</p> <p>若下一次 K2 依然和 j 不相等，那么又接着递归即可；一直到 Kn = 0；</p> <h2 id="一个例子">一个例子</h2> <p>接下来使用上面的结论来计算一个字符串的 next 数组；</p> <p>有数组 ababaaababaa 转化为如下表：</p> <table> <thead> <tr> <th style="text-align: center">S</th> <th style="text-align: center">a</th> <th style="text-align: center">b</th> <th style="text-align: center">a</th> <th style="text-align: center">b</th> <th style="text-align: center">a</th> <th style="text-align: center">a</th> <th style="text-align: center">a</th> <th style="text-align: center">b</th> <th style="text-align: center">a</th> <th style="text-align: center">b</th> <th style="text-align: center">a</th> <th style="text-align: center">a</th> </tr> </thead> <tbody> <tr> <td style="text-align: center">编号</td> <td style="text-align: center">1</td> <td style="text-align: center">2</td> <td style="text-align: center">3</td> <td style="text-align: center">4</td> <td style="text-align: center">5</td> <td style="text-align: center">6</td> <td style="text-align: center">7</td> <td style="text-align: center">8</td> <td style="text-align: center">9</td> <td style="text-align: center">10</td> <td style="text-align: center">11</td> <td style="text-align: center">12</td> </tr> <tr> <td style="text-align: center">next</td> <td style="text-align: center">0</td> <td style="text-align: center">1</td> <td style="text-align: center">1</td> <td style="text-align: center">2</td> <td style="text-align: center">3</td> <td style="text-align: center">4</td> <td style="text-align: center">2</td> <td style="text-align: center">2</td> <td style="text-align: center">3</td> <td style="text-align: center">4</td> <td style="text-align: center">5</td> <td style="text-align: center">6</td> </tr> </tbody> </table> <p>按如下顺序填表的 next 栏：</p> <ul> <li>对于 next[1] 规定为 0，根据前面的分析：next[2] = 1；</li> <li>对于 next[3]，则观察 2 和 next[2] = 1，即 b 和 a，不相等；而next[next[2]] = 0，因此 next[3] = 1；</li> <li>对于 next[4]，观察 3 和 next[3] = 1，即 a 和 a，相等，故 next[4] = next[3] + 1 = 2；</li> <li>对于 next[5]，观察 4 和 next[4] = 2，即 b 和 b，相等，故 next[5] = next[4] + 1 = 3；</li> <li>对于 next[6]，观察 5 和 next[5] = 3，即 a 和 a，相等，故 next[6] = next[5] + 1 = 4；</li> <li>对于 next[7]，观察 6 和 next[6] = 4，即 a 和 b，不相等，next[next[6]] = 2，与 6 比较即 b 和 a，不相等，继续递归 next[next[next[6]]] = next[next[4]] = next[2] = 1；比较 1 和 6 即 a 和 a，相等，因此 next[6] = next[next[next[6]] + 1 = 2；</li> <li>对于 next[8]，观察 7 和 next[7] = 2，即 a 和 b，不相等，next[next[7]] = 1，1 和 7相等，因此 next[8] = next[next[7]] + 1 = next[2] + 1 = 2；</li> <li>对于 next[9]，观察 8 和 next[8] = 2，即 b 和 b，相等，故 next[9] = next[8] + 1 = 3；</li> <li>对于 next[10]，观察 9 和 next[9] = 1，即 a 和 a，相等，故 next[10] = next[9] + 1 = 4；</li> <li>对于 next[11]，观察 10 和 next[10] = 2，即 b 和 b，相等，故 next[11] = next[10] + 1 = 5；</li> <li>对于 next[12]，观察 11 和 next[11] = 3，即 a 和 a，相等，故 next[12] = next[11] + 1 = 6；</li> </ul> <h2 id="代码实现">代码实现</h2> <p>通过以上分析得到的获取 next 数组的代码如下：</p> <pre><code class="language-cpp">void get_next(String T, int next[]) {     int k = 0, j = 1;     next[1] = 0;     while (j &lt; T.length)     {         if(k == 0 || T.ch[k] == T.ch[j]) {             k++;             j++;             next[j] = k;         } else {             k = next[k];         }     } }</code></pre> <p>那么接下来的 KMP 算法代码就比较容易了：</p> <pre><code class="language-cpp">int KMP(String S, String T, int next[]) {     int i = 1, j = 1;     while (i &lt;= S.length &amp;&amp; j &lt;= T.length)     {         if(j == 0 || S.ch[i] == T.ch[j]) {             i++;             j++;         } else {             j = next[j];         }     }     if(j &gt; T.length) {         return i - T.length;     } else {         return 0;     } }</code></pre> <p>测试代码如下：</p> <pre><code class="language-cpp">#include&lt;iostream&gt; using namespace std; const int MAX = 255; typedef struct {     char ch[MAX];     int length; } String;  void InitiString(String &amp;s, char chars[]) {     int len = 0;     while(chars[len] != '\0') {         s.ch[len + 1] = chars[len];         len++;     }     s.length = len; }  void get_next(String T, int next[]) {     int k = 0, j = 1;     next[1] = 0;     while (j &lt; T.length)     {         if(k == 0 || T.ch[k] == T.ch[j]) {             k++;             j++;             next[j] = k;         } else {             k = next[k];         }     } }  int KMP(String S, String T, int next[]) {     int i = 1, j = 1;     while (i &lt;= S.length &amp;&amp; j &lt;= T.length)     {         if(j == 0 || S.ch[i] == T.ch[j]) {             i++;             j++;         } else {             j = next[j];         }     }     if(j &gt; T.length) {         return i - T.length;     } else {         return 0;     } }  int main() {     char char1[20] = "aabaabaabaac";     char char2[20] = "aabaac";     String S, T;     InitiString(S, char1);     InitiString(T, char2);     int next[MAX];     get_next(T, next);     int index  = KMP(S, T, next);     printf("%d", index);     return 0; }</code></pre> <p>输出结果：</p> <pre><code class="language-cpp">7</code></pre> 			
                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-265.htm">Blazor组件的生命周期解析_实用技巧_</a></p>
                                                        <p>下一个：<a href="/html/category/article-267.htm">PHP增/减运算符</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1324.htm" title="Task提高异步执行效率技巧_C#教程_">Task提高异步执行效率技巧_C#教程_</a></li>
                        <li class="py-2"><a href="/html/category/article-523.htm" title="vue &#8211; 如何实现导入excel功能">vue &#8211; 如何实现导入excel功能</a></li>
                        <li class="py-2"><a href="/html/category/article-4324.htm" title="动物疫苗证明怎么写（动物疫苗证明怎么写的）">动物疫苗证明怎么写（动物疫苗证明怎么写的）</a></li>
                        <li class="py-2"><a href="/html/category/article-4371.htm" title="瑞鹏宠物医院百度百科（瑞鹏宠物医院成立时间）">瑞鹏宠物医院百度百科（瑞鹏宠物医院成立时间）</a></li>
                        <li class="py-2"><a href="/html/category/article-1956.htm" title="企业应用架构研究系列二十八：身份认证 Beginning Out With IdentityServer4">企业应用架构研究系列二十八：身份认证 Beginning Out With IdentityServer4</a></li>
                        <li class="py-2"><a href="/html/category/article-4295.htm" title="妙三多接种注意事项（妙三多接种间隔时间）">妙三多接种注意事项（妙三多接种间隔时间）</a></li>
                        <li class="py-2"><a href="/html/category/article-4125.htm" title="基于vue-seamless-scroll实现无缝滚动效果_vue.js">基于vue-seamless-scroll实现无缝滚动效果_vue.js</a></li>
                        <li class="py-2"><a href="/html/category/article-522.htm" title="用字符串中的ASCII值替换所有特殊字符-JavaScript">用字符串中的ASCII值替换所有特殊字符-JavaScript</a></li>
                        <li class="py-2"><a href="/html/category/article-4294.htm" title="开宠物店的方案（开宠物店的方案有哪些）">开宠物店的方案（开宠物店的方案有哪些）</a></li>
                        <li class="py-2"><a href="/html/category/article-3123.htm" title="Python调用C语言方法">Python调用C语言方法</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">16</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            
            </div>
        </div>
    </section>
    
        <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    SwedenAddress 版权所有
                    <br />
                    Powered by WordPress
                </p>
                <div class="col-lg-4 main-social-footer-29">
                    <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                    <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                    <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                    <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                </div>
            </div>
        </div>
    </section>
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-long-arrow-up"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- /move top -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>