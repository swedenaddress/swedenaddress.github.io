<!doctype html>
<html lang="zh-CN">

<head>
    <!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="canonical" href="https://swedenaddress.github.io/html/category/article-505.htm" />
<link rel="icon" href="/assets/addons/xcblog/img/swedenaddress/favicon.ico" type="image/x-icon"/>
<title>Springboot2 集成Swagger2，解决配置完成后不显示的坑 - SwedenAddress</title>
<link rel="stylesheet" href="/assets/addons/xcblog/css/swedenaddress/style-starter.css">
<link href="https://fonts.googleapis.com/css?family=Josefin+Slab:400,700,700i&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?ff0c66a832e6568df61664f01ded8b73";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="home">
    <section class=" w3l-header-4 header-sticky">
    <header class="absolute-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a class="navbar-brand" href="/">
                        Sweden Address
                    </a>
                                <button class="navbar-toggler bg-gradient collapsed" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="fa icon-expand fa-bars"></span>
                    <span class="fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
        </div>
        </nav>
        </div>
    </header>
</section>
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/jquery-3.3.1.min.js"></script> <!-- Common jquery plugin -->
<!--bootstrap working-->
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/bootstrap.min.js"></script>
<!-- //bootstrap working-->
<!-- disable body scroll which navbar is in active -->
<script>
$(function() {
    $('.navbar-toggler').click(function() {
        $('body').toggleClass('noscroll');
    })
});
</script>
    <!-- breadcrumbs -->
    <section class="w3l-inner-banner-main">
        <div class="about-inner about ">
            <div class="container">
                <div class="main-titles-head text-center">
                    <h1 class="header-name" style="word-break: break-all;">
                        Springboot2 集成Swagger2，解决配置完成后不显示的坑                    </h1>
                    
                </div>
            </div>
        </div>
        <div class="breadcrumbs-sub">
            <div class="container">
                <ul class="breadcrumbs-custom-path">
                    <li class="right-side propClone"><a href="/" class="">首页 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="right-side propClone"><a href="/html/category/" class="">文章分类 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="active ">正文</li>
                </ul>
            </div>
        </div>
        </div>
    </section>
    <!-- breadcrumbs //-->
    <section class="w3l-content-with-photo-4" id="about">
        <div class="content-with-photo4-block ">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="htmledit_views"> <p><span style="color:#000000;">为新项目做准备重新搭建环境，决定使用Springboot2+mybatis环境，使用shiro做权限管理<span style="color:#000000;">，并搭配pagehelper，generator等。在配置Swagger2的时候出现访问时界面空白的坑，刚开始以为是配置的插件过多导致的不兼容，重新配置了其他环境，但问题依然存在，后来查找资料解决了问题。现在此作记录。目前使用Springboot 版本为&nbsp; 2.0.3.RELEASE。</span></span></p> <p><span style="color:#000000;">一、springboot2导包（maven）：</span></p> <p><span style="color:#000000;">在pom.xml中</span></p> <pre class="has"><code class="language-html">&lt;!--Swagger2--&gt; &lt;dependency&gt;    &lt;groupId&gt;io.springfox&lt;/groupId&gt;    &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;    &lt;version&gt;${springfox-swagger2.version}&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt;    &lt;groupId&gt;io.springfox&lt;/groupId&gt;    &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;    &lt;version&gt;${springfox-swagger2.version}&lt;/version&gt; &lt;/dependency&gt;</code></pre> <pre class="has"><code class="language-html">&lt;springfox-swagger2.version&gt;2.8.0&lt;/springfox-swagger2.version&gt;</code></pre> <p><span style="color:#000000;">二、Swagger2配置</span></p> <p><span style="color:#000000;">&nbsp;&nbsp;&nbsp; 新建<span style="color:#000000;">Swagger2配置文件<span style="color:#000000;"><span style="color:#000000;">Swagger2</span></span>Config.java</span></span></p> <p><span style="color:#000000;"><span style="color:#000000;">&nbsp;&nbsp;&nbsp; 配置文件<span style="color:#000000;"><span style="color:#000000;"><span style="color:#000000;"><span style="color:#000000;">Swagger2</span></span>Config.java</span></span>中：支持多个api文档</span></span></p> <pre><code class="language-html hljs"></code></pre> <pre class="has"><code class="language-html">//注解开启 swagger2 功能 @EnableSwagger2 //注解标示,这是一个配置类,@Configuation注解包含了@Component注解 //可以不用在使用@Component注解标记这是个bean了 @Configuration @EnableWebMvc public class Swagger2Config implements WebMvcConfigurer {     @Value("${base.location}")//项目初始目录  一般就是自己springboot启动类的包名      private String baseLocation;      /**      * 将Swagger2 的swagger-ui.html加入资源路径下,否则Swagger2静态页面不能访问。要想使资源能够访问，可以有两种方法      * 一：需要配置类继承WebMvcConfigurationSupport 类，实现addResourceHandlers方法。      *      但是实现了WebMvcConfigurationSupport以后，Spring Boot的 WebMvc自动配置就会失效，具体表现比如访问不到      *      静态资源（js，css等）了，这是因为WebMvc的自动配置都在WebMvcAutoConfiguration类中，但是类中有这个注解      *      @ConditionalOnMissingBean({WebMvcConfigurationSupport.class})，意思是一旦在容器中检测到      *      WebMvcConfigurationSupport这个类，WebMvcAutoConfiguration类中的配置都不生效。      *      所以一旦我们自己写的配置类继承了WebMvcConfigurationSupport，相当于容器中已经有了WebMvcConfigurationSupport，      *      所有默认配置都不会生效，都得自己在配置文件中配置。      * 二：继承WebMvcConfigurer接口，这里采用此方法 网上有人说使用该方法会导致date编译等问题，可能在配置文件中得到解决，      *      本人没有碰到，不多做解释      * @param registry      */     @Override     public void addResourceHandlers(ResourceHandlerRegistry registry) {         registry.addResourceHandler("swagger-ui.html")                 .addResourceLocations("classpath:/META-INF/resources/");          registry.addResourceHandler("/webjars/**")                 .addResourceLocations("classpath:/META-INF/resources/webjars/");     }      /**      * 通过 createRestApi函数来构建一个DocketBean      * 函数名,可以随意命名,喜欢什么命名就什么命名      * 接口文档默认访问路径http://localhost:8080/swagger-ui.html，      *          配置文件中有配置此处为http://localhost:8080/springboot2/swagger-ui.html      * 注解说明参考博客：https://blog.csdn.net/qq_28009065/article/details/79104103，      */      @Bean     public Docket commonDocket() {         return new Docket(DocumentationType.SWAGGER_2)                 .groupName("通用API接口文档")                 .apiInfo(apiInfo("测试环境通用接口"))                 .pathMapping("/")                 .select()                 .apis(RequestHandlerSelectors.basePackage(baseLocation+".web.controller"))//指向自己的controller即可                 .paths(PathSelectors.any())                 .build();     }     // //    @Bean //    public Docket normalUserDocket() { //        return new Docket(DocumentationType.SWAGGER_2) //                .groupName("普通用户API文档") //                .apiInfo(apiInfo("提供普通用户接口")) //                .protocols(Sets.newHashSet("https","http")) //                .produces(Sets.newHashSet("html/text")) //                .pathMapping("/") //                .select() //                .apis(RequestHandlerSelectors.basePackage(baseLocation+".controller.candidate"))//设置生成的Docket对应的Controller为candidate下的所有Controller //                .paths(PathSelectors.any()) //                .build(); //    } // //    @Bean //    public Docket companyUserDocket() { //        return new Docket(DocumentationType.SWAGGER_2) //                .groupName("企业用户API接口文档") //                .apiInfo(apiInfo("提供企业用户接口")) //                .pathMapping("/") //                .select() //                .apis(RequestHandlerSelectors.basePackage(baseLocation+".controller.company")) //                .paths(PathSelectors.any()) //                .build(); //    } //设置文档信息     private ApiInfo apiInfo(String desc) {         return new ApiInfoBuilder()                 //页面标题                 .title(desc)                 //设置作者联系方式,可有可无                 .contact(new Contact("chaoge", "https://my.csdn.net/xiaochaogge", "z28126308@163.com"))                 //版本号                 .version("1.0")                 //描述                 .description("API 描述")                 .build();      } }  /*     Docket类的方法：     Docket groupName(String var):设置栏目名      Docket apiInfo(ApiInfo apiInfo):设置文档信息      Docket pathMapping(String path):设置api根路径      Docket protocols(Set&lt;String&gt; protocols):设置协议，Sets为com.goolge.common下的类，Sets.newHashSet("https","http")相当于new HashSet(){<!-- -->{add("https");add("http");}};      ApiSelectorBuilder select():初始化并返回一个API选择构造器        ApiSelectorBuilder类的方法：      ApiSelectorBuilder apis(Predicate&lt;RequestHandler&gt; selector):添加选择条件并返回添加后的ApiSelectorBuilder对象      ApiSelectorBuilder paths(Predicate&lt;String&gt; selector):设置路径筛选，该方法中含一句pathSelector = and(pathSelector, selector);表明条件为相与        RequestHandlerSelectors类的方法：      Predicate&lt;RequestHandler&gt; any()：返回包含所有满足条件的请求处理器的断言，该断言总为true      Predicate&lt;RequestHandler&gt; none()：返回不满足条件的请求处理器的断言,该断言总为false      Predicate&lt;RequestHandler&gt; basePackage(final String basePackage)：返回一个断言(Predicate)，该断言包含所有匹配basePackage下所有类的请求路径的请求处理器        PathSelectors类的方法：      Predicate&lt;String&gt; any():满足条件的路径，该断言总为true      Predicate&lt;String&gt; none():不满足条件的路径,该断言总为false      Predicate&lt;String&gt; regex(final String pathRegex):符合正则的路径    设置swagger-ui.html默认路径，servlet的配置文件添加:      &lt;mvc:annotation-driven&gt;&lt;/mvc:annotation-driven&gt;     &lt;mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars"/&gt;      swagger-ui.html位于springfox-swagger-ui jar包中的META-INF/resources/目录下，项目编译后swagger-ui.html将添加到classpath的/META-INF/resources/下，所以添加mapping="/webjars/**" 可通过localhost:端口号/项目名/swagger-ui.html打开SwaggerUI  常用注解:      Swagger所有注解并非必须，若不加就只显示类目/方法名/参数名没有注释而已，但若注解中含@ApiParam不对应@RequestParam将无效果      @Api:注解controller，value为@RequestMapping路径      @ApiOperation:注解方法，value为简要描述,notes为全面描述,hidden=true Swagger将不显示该方法，默认为false      @ApiParam:注解参数,hidden=true Swagger参数列表将不显示该参数,name对应参数名，value为注释，defaultValue设置默认值,allowableValues设置范围值,required设置参数是否必须，默认为false      @ApiModel:注解Model      @ApiModelProperty:注解Model下的属性，当前端传过来的是一个对象时swagger中该对象的属性注解就是ApiModelProperty中的value      @ApiIgnore:注解类、参数、方法，注解后将不在Swagger UI中显示   */</code></pre> <p>在application.properties中（网上有人可能出现的date格式错误等问题，笔者目前还没有出现此类问题，但是也贴出有关的配置供参考）</p> <pre class="has"><code class="language-html">spring.jackson.serialization.indent_output=true spring.jackson.serialization.write-dates-as-timestamps=true spring.http.converters.preferred-json-mapper=jackson #设置时区 spring.jackson.time-zone=GMT+8 spring.jackson.date-format=yyyy-MM-dd HH:mm:ss spring.jackson.joda-date-time-format=yyyy-MM-dd HH:mm:ss</code></pre> <p>新建WebMVCCongig.java类实现WebMvcConfigurer接口（没有这步操作Swagger2已经可以使用）设置跨域请求</p> <pre class="has"><code class="language-html">@Configuration public class WebMVCConfig implements WebMvcConfigurer {      @Override     public void addResourceHandlers(ResourceHandlerRegistry registry){         registry.addResourceHandler("/static/**")                 .addResourceLocations("classpath:/static/");     }      @Override     public void addCorsMappings(CorsRegistry registry) {         registry.addMapping("/**")//设置允许跨域的路径                 .allowedOrigins("*")//设置允许跨域请求的域名                 .allowCredentials(true)//是否允许证书 不再默认开启                 .allowedMethods("GET", "POST", "PUT", "DELETE")//设置允许的方法                 .maxAge(3600);//跨域允许时间     } }</code></pre> <p>三、在controller类中</p> <pre class="has"><code class="language-html">@CrossOrigin @RestController @RequestMapping("/test") @Api(tags="测试类",value="测试类") public class TestController {     @ApiOperation(value="【PC端】提交订单", notes="提交一组识别的标签id，返回生成的订单详情")     @RequestMapping(value = "/test/{id}", method = RequestMethod.POST, produces  = "application/json;charset=UTF-8")     public Integer test(@PathVariable Integer id){         System.out.println(id);         return id;     } }</code></pre> <p>四、效果图</p> <p><img decoding="async" alt="" class="has" src="http://img.555519.xyz/uploads3/20220903/c848eea28bb307623f7c0c8c367c897b.jpg"></p> <p>以上仅供参考，如果各位遇到其他问题也欢迎互相探讨</p> </div> 			
                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-504.htm">Infrastructure 知识: dnf对module的处理</a></p>
                                                        <p>下一个：<a href="/html/category/article-506.htm">【数据结构之线性表】顺序表简单实现图书系统</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3123.htm" title="Python调用C语言方法">Python调用C语言方法</a></li>
                        <li class="py-2"><a href="/html/category/article-2241.htm" title="高并发下redis缓存常见问题">高并发下redis缓存常见问题</a></li>
                        <li class="py-2"><a href="/html/category/article-1632.htm" title="MongoDB利用oplog恢复数据的方法_MongoDB_">MongoDB利用oplog恢复数据的方法_MongoDB_</a></li>
                        <li class="py-2"><a href="/html/category/article-1942.htm" title="如何在MySQL中添加两个或多个字符串？">如何在MySQL中添加两个或多个字符串？</a></li>
                        <li class="py-2"><a href="/html/category/article-4325.htm" title="都挺好苏明玉人物前史（苏明玉）干货满满，">都挺好苏明玉人物前史（苏明玉）干货满满，</a></li>
                        <li class="py-2"><a href="/html/category/article-2531.htm" title="自动化加载Express的路由设置">自动化加载Express的路由设置</a></li>
                        <li class="py-2"><a href="/html/category/article-2532.htm" title="面向对象编程-终结篇 es6新增语法">面向对象编程-终结篇 es6新增语法</a></li>
                        <li class="py-2"><a href="/html/category/article-1927.htm" title="常用注解使用总结系列: @Order 注解">常用注解使用总结系列: @Order 注解</a></li>
                        <li class="py-2"><a href="/html/category/article-791.htm" title="Linux网络——NFS服务">Linux网络——NFS服务</a></li>
                        <li class="py-2"><a href="/html/category/article-522.htm" title="用字符串中的ASCII值替换所有特殊字符-JavaScript">用字符串中的ASCII值替换所有特殊字符-JavaScript</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">8</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            
            </div>
        </div>
    </section>
    
        <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    SwedenAddress 版权所有
                    <br />
                    Powered by WordPress
                </p>
                <div class="col-lg-4 main-social-footer-29">
                    <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                    <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                    <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                    <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                </div>
            </div>
        </div>
    </section>
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-long-arrow-up"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- /move top -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>