<!doctype html>
<html lang="zh-CN">

<head>
    <!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="canonical" href="https://swedenaddress.github.io/html/category/article-276.htm" />
<link rel="icon" href="/assets/addons/xcblog/img/swedenaddress/favicon.ico" type="image/x-icon"/>
<title>CentOS 7.5 配置 - SwedenAddress</title>
<link rel="stylesheet" href="/assets/addons/xcblog/css/swedenaddress/style-starter.css">
<link href="https://fonts.googleapis.com/css?family=Josefin+Slab:400,700,700i&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?ff0c66a832e6568df61664f01ded8b73";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="home">
    <section class=" w3l-header-4 header-sticky">
    <header class="absolute-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a class="navbar-brand" href="/">
                        Sweden Address
                    </a>
                                <button class="navbar-toggler bg-gradient collapsed" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="fa icon-expand fa-bars"></span>
                    <span class="fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
        </div>
        </nav>
        </div>
    </header>
</section>
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/jquery-3.3.1.min.js"></script> <!-- Common jquery plugin -->
<!--bootstrap working-->
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/bootstrap.min.js"></script>
<!-- //bootstrap working-->
<!-- disable body scroll which navbar is in active -->
<script>
$(function() {
    $('.navbar-toggler').click(function() {
        $('body').toggleClass('noscroll');
    })
});
</script>
    <!-- breadcrumbs -->
    <section class="w3l-inner-banner-main">
        <div class="about-inner about ">
            <div class="container">
                <div class="main-titles-head text-center">
                    <h1 class="header-name" style="word-break: break-all;">
                        CentOS 7.5 配置                    </h1>
                    
                </div>
            </div>
        </div>
        <div class="breadcrumbs-sub">
            <div class="container">
                <ul class="breadcrumbs-custom-path">
                    <li class="right-side propClone"><a href="/" class="">首页 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="right-side propClone"><a href="/html/category/" class="">文章分类 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="active ">正文</li>
                </ul>
            </div>
        </div>
        </div>
    </section>
    <!-- breadcrumbs //-->
    <section class="w3l-content-with-photo-4" id="about">
        <div class="content-with-photo4-block ">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <div class="toc"> <h3>文章目录</h3> <ul> <li><a href="#CentOS_75__2" rel="nofollow">CentOS 7.5 配置</a></li> <li> <ul> <li><a href="#_15" rel="nofollow">添加用户超权限</a></li> <li><a href="#_42" rel="nofollow">安装中文输入法</a></li> <li><a href="#_vscode_61" rel="nofollow">安装 vscode</a></li> <li><a href="#_gccg__git_90" rel="nofollow">安装 gcc/g++ 和 git</a></li> <li> <ul> <li><a href="#_SCL_102" rel="nofollow">安装 SCL</a></li> <li><a href="#_gccg_1021_136" rel="nofollow">安装 gcc/g++ 10.2.1</a></li> <li><a href="#_git_227_154" rel="nofollow">安装 git 2.27</a></li> </ul> </li> <li><a href="#_cmake_320_188" rel="nofollow">安装 cmake 3.20</a></li> <li><a href="#_Eigen_340_207" rel="nofollow">安装 Eigen 3.4.0</a></li> <li><a href="#_openCV_450_264" rel="nofollow">安装 openCV 4.5.0</a></li> <li><a href="#CentOS__358" rel="nofollow">CentOS 遇到的报错</a></li> <li> <ul> <li><a href="#_360" rel="nofollow">用户超权限</a></li> <li><a href="#yum__369" rel="nofollow">yum 锁</a></li> <li><a href="#CentOS_U_385" rel="nofollow">CentOS U盘挂载问题</a></li> </ul> </li> </ul> </li> </ul> </div> <h1><a id="CentOS_75__2" rel="nofollow"></a>CentOS 7.5 配置</h1> <p>CentOS 下载链接：https://pan.baidu.com/s/1dPYs97Ew-Liz_chnkpV4kw<br /> 提取码：4kxf</p> <p>UltraISO 中文破解版：https://blog.csdn.net/Asher117/article/details/93618082?spm=1001.2014.3001.5506</p> <p>安装过程可参考：</p> <ul> <li>https://blog.csdn.net/qq_18945757/article/details/90033158?spm=1001.2014.3001.5506</li> <li>https://blog.csdn.net/qq_40309341/article/details/109513000?spm=1001.2014.3001.5506</li> </ul> <p>如果是虚拟机的话可以参考????<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://mp.weixin.qq.com/s?__biz=MzA3MTk0NjYxMw==&amp;mid=2650385850&amp;idx=1&amp;sn=66ccf6630709ee902fe00d7344244a3d&amp;chksm=8728d5a0b05f5cb69b1bb5a021cc85cd7b9ca964f711354f4f24e0abc512fe6da41e45f376cd&amp;scene=21#wechat_redirect"  rel="nofollow">此篇</a>。</p> <h2><a id="_15" rel="nofollow"></a>添加用户超权限</h2> <blockquote> <p>参考: https://blog.csdn.net/qq_23327993/article/details/122063031</p> </blockquote> <p>Linux 可以通过<code>sudo</code> 来动态赋予超级用户权限，但是对于先新增的用户不会默认赋予<code>sudo</code> 权力，如下报错：</p> <pre><code class="prism language-bashs">xxx is not in the sudoers file.This incident will be reported.</code></pre> <p>解决方法是修改文件<code>/etc/sudoer</code> 文件：</p> <pre><code class="prism language-bash"><span class="token comment"># 切换为超级用户</span><span class="token function">su</span><span class="token comment"># 赋予文件"写"权限</span><span class="token function">chmod</span> u+w /etc/sudoers<span class="token comment"># 使用 vim 打开文件</span><span class="token function">vi</span> /etc/sudoers</code></pre> <p>在<code>root ALL=(ALL:ALL) ALL</code> 后头添加</p> <pre><code>&lt;userName&gt;  ALL=(ALL:ALL)   ALL</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221117/585074a21f62da5b2497226930a60611.jpg" alt="CentOS 7.5 配置"></p> <h2><a id="_42" rel="nofollow"></a>安装中文输入法</h2> <blockquote> <p>参考: https://blog.csdn.net/m0_37515193/article/details/101212159</p> </blockquote> <p>安装 ibus-libpinyin</p> <pre><code class="prism language-bash">yum<span class="token function">install</span> ibus-libpinyin</code></pre> <p><strong>重启系统</strong>后，打开终端，重启 ibus</p> <pre><code class="prism language-bash">ibus restart</code></pre> <p>打开设置 -&gt; Region &amp; Language，点击<code>+</code>，有这个 Chinese (Intelligent Pinyin) 的选项<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221117/52bae829b242a142195322d30054b511.jpg" alt="CentOS 7.5 配置"></p> <p>一切正常的话，就有<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221117/f25f525bed5eece599d279ee6e124984.jpg" alt="CentOS 7.5 配置"></p> <h2><a id="_vscode_61" rel="nofollow"></a>安装 vscode</h2> <blockquote> <p>vscode yyds，官方有相关的教程：</p> <ul> <li>https://code.visualstudio.com/docs/setup/linux</li> </ul> <p>这个也可以参考一下：</p> <ul> <li>https://blog.csdn.net/yy345730585/article/details/89469513</li> </ul> </blockquote> <p>执行以下代码：</p> <pre><code class="prism language-shell"><span class="token function">sudo</span><span class="token function">rpm</span> --import https://packages.microsoft.com/keys/microsoft.asc<span class="token function">sudo</span><span class="token function">sh</span> -c<span class="token string">'echo -e "<code></code>\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" &gt; /etc/yum.repos.d/vscode.repo'</span> yum check-update<span class="token function">sudo</span> yum<span class="token function">install</span> code</code></pre> <p>安装完成在终端输入<code>code</code> 即可启动 vscode。</p> <p>VSCode 可以通过<code>dnf</code> 或<code>yum</code> 包管理器来安装更新，使用<code>dnf</code> 的指令如下：</p> <pre><code class="prism language-bash"><span class="token function">sudo</span> dnf check-update<span class="token function">sudo</span> dnf<span class="token function">install</span> code</code></pre> <p><code>yum</code> 的指令如下：</p> <pre><code class="prism language-bash">yum check-update<span class="token function">sudo</span> yum<span class="token function">install</span> code</code></pre> <h2><a id="_gccg__git_90" rel="nofollow"></a>安装 gcc/g++ 和 git</h2> <p>CentOS 7 自带的 gcc/g++ 和 git 的版本偏低了。gcc 4.8.5 是不支持 c17 特性，vscode 推荐 git 版本要大于 2.0（原自带的 git 是 1.8 的）。</p> <blockquote> <p>参考: https://blog.csdn.net/b_ingram/article/details/121569398</p> </blockquote> <p>这里是使用这个 SCL 软件集，SCL 提供包括 gcc, git, python 等多版本的软件包，且不同版本的切换也比较方便。</p> <blockquote> <p>SCL ( Software Collections ) 是一个CentOS/RHEL Linux平台的软件多版本共存解决方案，为RHEL/CentOS Linux用户提供一种方便、安全地安装和使用应用程序和运行时环境的多个版本的方式，同时避免把系统搞乱。</p> <p>参考：https://blog.csdn.net/A642960662/article/details/123076029</p> </blockquote> <h3><a id="_SCL_102" rel="nofollow"></a>安装 SCL</h3> <pre><code class="prism language-bash"><span class="token comment"># 超级权限用户</span><span class="token function">su</span><span class="token comment"># 安装 SCL</span> yum<span class="token function">install</span> centos-release-scl</code></pre> <p>可以在以下网站查看 SCL 项目：</p> <ul> <li>https://www.softwarecollections.org/en/?spm=a2c4e.10696291.0.0.719919a4kVhmwD</li> <li>https://www.softwarecollections.org/en/scls/?search=&amp;policy=&amp;repo=&amp;order_by=-create_date&amp;per_page=10</li> </ul> <p>查看安装哪些软件集</p> <pre><code class="prism language-bash">yum list all --enablerepo<span class="token operator">=</span><span class="token string">'centos-sclo-rh'</span><span class="token operator">&gt;</span> xxx.txt<span class="token comment"># 重定向输出</span></code></pre> <p>查看已安装的软件</p> <pre><code class="prism language-bash">scl --list</code></pre> <p>激活软件包</p> <pre><code class="prism language-bash">scl<span class="token builtin class-name">enable</span><span class="token operator">&lt;</span>scl-package-name<span class="token operator">&gt;</span><span class="token operator">&lt;</span>command<span class="token operator">&gt;</span></code></pre> <p><code>&lt;command&gt;</code>最常用的就是<code>bash</code>，即在当前的<code>bash</code> 生效，退出了当前的 shell 就失效了。<br /> 想要启动终端就激活软件包可以将<code>source /opt/rh/&lt;packName&gt;/enable</code> 写入到环境变量<code>/etc/profile</code>，即执行</p> <pre><code class="prism language-bash"><span class="token builtin class-name">echo</span><span class="token string">"source /opt/rh/&lt;packName&gt;/enable"</span><span class="token operator">&gt;&gt;</span>/etc/profile</code></pre> <blockquote> <p>参考：https://zhuanlan.zhihu.com/p/112764855</p> </blockquote> <h3><a id="_gccg_1021_136" rel="nofollow"></a>安装 gcc/g++ 10.2.1</h3> <pre><code class="prism language-bash"><span class="token comment"># 进入超权限用户</span><span class="token function">su</span><span class="token comment"># 安装开发工具集, 这里选择版本 10</span> yum<span class="token function">install</span> devtoolset-10<span class="token comment"># 激活对应工具集</span> scl<span class="token builtin class-name">enable</span> devtoolset-10<span class="token function">bash</span></code></pre> <p>可以采用添加环境变量的方式在打开终端时激活<code>devtoolset-10</code>，也可以通过软链接的方式</p> <pre><code class="prism language-bash"><span class="token comment"># 可以先将原先的 4.8.5 版本的 gcc 改名掉</span><span class="token function">ln</span> -s /opt/rh/devtoolset-10/root/bin/gcc /usr/bin/gcc<span class="token function">ln</span> -s /opt/rh/devtoolset-10/root/bin/g++ /usr/bin/g++</code></pre> <h3><a id="_git_227_154" rel="nofollow"></a>安装 git 2.27</h3> <p>卸载原先的 git，执行</p> <pre><code class="prism language-bash"><span class="token function">sudo</span> yum remove<span class="token function">git</span></code></pre> <p>通过 SCL 进行安装</p> <pre><code class="prism language-bash">yum<span class="token function">install</span> rh-git227</code></pre> <p>设置软链接</p> <pre><code class="prism language-bash"><span class="token function">ln</span> -s /opt/rh/rh-git227/root/bin/git /usr/bin/git<span class="token function">ln</span> -s /opt/rh/rh-git227/root/bin/git-shell /usr/bin/git-shell<span class="token function">ln</span> -s /opt/rh/rh-git227/root/bin/git-receive-pack /usr/bin/git-receive-pack<span class="token function">ln</span> -s /opt/rh/rh-git227/root/bin/git-upload-archive /usr/bin/git-upload-archive<span class="token function">ln</span> -s /opt/rh/rh-git227/root/bin/git-upload-pack /usr/bin/git-upload-pack</code></pre> <p>安装完成后，会发现在 /opt/rh/ 目录下多了一个 httpd24 的目录，这个在使用<code>git clone xxx</code> 命令时需要使用到，因此需要进行激活，否则会报错：</p> <pre><code class="prism language-shell">error<span class="token keyword">while</span> loading shared libraries: libcurl-httpd24.so.4: cannot<span class="token function">open</span> shared object file: No such<span class="token function">file</span> or directory</code></pre> <p>激活的命令自然就是：</p> <pre><code class="prism language-bash">scl<span class="token builtin class-name">enable</span> httpd24<span class="token function">bash</span></code></pre> <p>推荐的一劳永逸的方式是写到 /opt/profile 中</p> <pre><code class="prism language-bash"><span class="token builtin class-name">echo</span><span class="token string">"source /opt/rh/httpd24/enable"</span><span class="token operator">&gt;&gt;</span>/etc/profile</code></pre> <h2><a id="_cmake_320_188" rel="nofollow"></a>安装 cmake 3.20</h2> <p>各个版本的 CMake 可以在这查看：https://cmake.org/files/</p> <p>我们直接安装已编译好的版本（解压即可使用），执行</p> <pre><code class="prism language-bash"><span class="token comment"># 下载指定版本的cmake</span><span class="token function">wget</span> https://cmake.org/files/v3.20/cmake-3.20.0-linux-x86_64.tar.gz<span class="token comment"># 解压到指定路径 /opt/, 若想解压到当前路径，省去 -C /opt/</span><span class="token function">tar</span> -zxvf cmake-3.20.0-linux-x86_64 -C /opt/<span class="token comment"># 创建链接，注意必须使用绝对路径</span><span class="token comment"># [path to cmake] = /home/iam/Downloads/cmake-3.20.0-linux-x86_64/bin/cmake</span><span class="token function">sudo</span><span class="token function">ln</span> -s<span class="token punctuation">[</span>path to cmake<span class="token punctuation">]</span> /usr/bin/cmake<span class="token function">sudo</span><span class="token function">ln</span> -s<span class="token punctuation">[</span>path to ccmake<span class="token punctuation">]</span> /usr/bin/ccmake<span class="token function">sudo</span><span class="token function">ln</span> -s<span class="token punctuation">[</span>path to cmake-gui<span class="token punctuation">]</span> /usr/bin/cmake-gui<span class="token function">sudo</span><span class="token function">ln</span> -s<span class="token punctuation">[</span>path to ctest<span class="token punctuation">]</span> /usr/bin/ctest<span class="token function">sudo</span><span class="token function">ln</span> -s<span class="token punctuation">[</span>path to cpack<span class="token punctuation">]</span> /usr/bin/cpack</code></pre> <h2><a id="_Eigen_340_207" rel="nofollow"></a>安装 Eigen 3.4.0</h2> <p>安装 Eigen 之前，需要完成 gcc 和 cmake 的安装。</p> <p>Eigen 官网：https://eigen.tuxfamily.org/index.php?title=Main_Page</p> <p>需要下载源码并进行编译安装</p> <pre><code class="prism language-bash"><span class="token comment"># 下载压缩包</span><span class="token function">wget</span> https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.gz<span class="token comment"># 解压到当前路径</span><span class="token function">tar</span> -zxvf eigen-3.4.0.tar.gz<span class="token comment"># 进入解压中的文件</span><span class="token builtin class-name">cd</span> eigen-3.40<span class="token function">mkdir</span> build<span class="token builtin class-name">cd</span> build<span class="token comment"># 编译安装</span> cmake<span class="token punctuation">..</span><span class="token function">make</span><span class="token function">install</span></code></pre> <p>默认的安装路径在<code>/usr/local/include/eigen3</code>，在使用的时候可以直接<code>#include&lt;Eigen/Dense&gt;</code> ，但在 VScode 中会显示报错（实际上是没问题的），使用<code>#include&lt;eigen3/Eigen/Dense&gt;</code> 可以解决报错问题。</p> <p><strong>测试代码:</strong></p> <p>test.cpp</p> <pre><code class="prism language-C++">#include &lt;iostream&gt; #include &lt;eigen3/Eigen/Dense&gt; using namespace std; using namespace Eigen; int main(int argc, char **argv) {     Matrix2d A;     A &lt;&lt; 1,2,3,4;     cout &lt;&lt; "A=\n" &lt;&lt; A &lt;&lt; endl;     return 0; }</code></pre> <p>CMakeLists.txt</p> <pre><code class="prism language-Cmake">cmake_minimum_required(VERSION 3.10) project(eigenTest) include_directories("/usr/local/include/eigen3") add_executable(test test.cpp)</code></pre> <p>终端执行：</p> <pre><code class="prism language-bash"><span class="token function">ls</span><span class="token comment"># -&gt; test.cpp CMakeLists.txt</span><span class="token function">mkdir</span> build<span class="token builtin class-name">cd</span> build cmake<span class="token punctuation">..</span><span class="token function">make</span> ./test</code></pre> <h2><a id="_openCV_450_264" rel="nofollow"></a>安装 openCV 4.5.0</h2> <p>安装之前，需要完成 gcc, cmake 和 git 的安装。</p> <blockquote> <p>参考：https://blog.csdn.net/qianbin3200896/article/details/117160054</p> </blockquote> <p>首先，安装依赖项</p> <pre><code class="prism language-bash"><span class="token function">sudo</span> yum -y<span class="token function">install</span> epel-release<span class="token function">sudo</span> yum -y<span class="token function">install</span> gtk2-devel<span class="token function">sudo</span> yum<span class="token function">install</span> -y libpng-devel<span class="token function">sudo</span> yum<span class="token function">install</span> -y jasper-devel<span class="token function">sudo</span> yum<span class="token function">install</span> -y openexr-devel<span class="token function">sudo</span> yum<span class="token function">install</span> -y libwebp-devel<span class="token function">sudo</span> yum -y<span class="token function">install</span> libjpeg-turbo-devel<span class="token function">sudo</span> yum -y<span class="token function">install</span> libtiff-devel<span class="token function">sudo</span> yum -y<span class="token function">install</span> tbb-devel eigen3-devel<span class="token function">sudo</span> yum -y<span class="token function">install</span> boost boost-thread boost-devel<span class="token function">sudo</span> yum -y<span class="token function">install</span> libv4l-devel</code></pre> <p>然后，下载 opencv 和 opencv_contrib 安装包(从码云下即可)</p> <pre><code class="prism language-bash"><span class="token function">git</span> clone https://gitee.com/binghai228/opencv.git<span class="token builtin class-name">cd</span> opencv<span class="token function">git</span> checkout<span class="token number">4.5</span>.0<span class="token comment"># 选择分支</span><span class="token builtin class-name">cd</span><span class="token punctuation">..</span><span class="token function">git</span> clone https://gitee.com/binghai228/opencv_contrib<span class="token builtin class-name">cd</span> opencv_contrib<span class="token function">git</span> checkout<span class="token number">4.5</span>.0<span class="token comment"># 选择分支</span><span class="token builtin class-name">cd</span><span class="token punctuation">..</span></code></pre> <p>分支选择完成后，将 opencv_contrib<strong>复制到</strong> opencv 的目录下。</p> <p>接着，下载 opencv_contrib 的 module 的部分缺失文件，可在此处下载：</p> <blockquote> <p>链接：https://pan.baidu.com/s/1L5KHpbNxAI7BwB592cGX3g<br /> 提取码：qszy</p> </blockquote> <p>把下载的文件放到opencv_contrib/modules/xfeatures2d/src。</p> <p>最后，开始编译，执行：</p> <pre><code class="prism language-bash"><span class="token builtin class-name">cd</span> opencv<span class="token function">mkdir</span> build<span class="token builtin class-name">cd</span> build</code></pre> <p>将 opencv/modules/features2d 复制到这个 build 目录，执行</p> <pre><code class="prism language-bash">cmake -D<span class="token assign-left variable">CMAKE_BUILD_TYPE</span><span class="token operator">=</span>Release -D<span class="token assign-left variable">CMAKE_INSTALL_PREFIX</span><span class="token operator">=</span>/usr/local  -D<span class="token assign-left variable">OPENCV_EXTRA_MODULES_PATH</span><span class="token operator">=</span><span class="token punctuation">..</span>/opencv_contrib/modules/ -D<span class="token assign-left variable">WITH_TBB</span><span class="token operator">=</span>OFF  -D<span class="token assign-left variable">WITH_CUDA</span><span class="token operator">=</span>OFF -D<span class="token assign-left variable">BUILD_opencv_gpu</span><span class="token operator">=</span>OFF -D<span class="token assign-left variable">BUILD_opencv_gpuarithm</span><span class="token operator">=</span>OFF -D<span class="token assign-left variable">OPENCV_GENERATE_PKGCONFIG</span><span class="token operator">=</span>ON<span class="token punctuation">..</span></code></pre> <p>编译</p> <pre><code class="prism language-bash"><span class="token function">make</span></code></pre> <p>这个过程比较久，耐心等待。构建完成进行安装:</p> <pre><code class="prism language-bash"><span class="token function">sudo</span><span class="token function">make</span><span class="token function">install</span></code></pre> <p>安装完成后，开始配置 opencv 库的可执行路径。</p> <p>添加库路径：</p> <pre><code class="prism language-bash"><span class="token function">ln</span> -s /usr/local/lib64/pkgconfig/opencv4.pc /usr/share/pkgconfig/ ldconfig</code></pre> <p>添加环境变量：</p> <pre><code class="prism language-bash"><span class="token function">vi</span> /etc/profile</code></pre> <p>打开此文件，在文件某尾加上</p> <pre><code>export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib64/pkgconfig export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib64</code></pre> <p>最后令其生效：</p> <pre><code>source /etc/profile</code></pre> <p>接下来，进行 pkg-config 配置，默认的 pkg 搜索链接路径为 /usr/lib/pkgconfig，需要将 opencv.pc 拷贝到 pkg 的默认路径下:</p> <pre><code>cp /usr/local/lib64/pkgconfig/opencv4.pc /usr/lib/pkgconfig</code></pre> <p>输入命令：</p> <pre><code>ldconfig</code></pre> <p>重启以后，输入下面的命令查看当前 opencv 版本号：</p> <pre><code class="prism language-bash">pkg-config --modversion opencv4<span class="token comment"># 4.5.0</span></code></pre> <h2><a id="CentOS__358" rel="nofollow"></a>CentOS 遇到的报错</h2> <h3><a id="_360" rel="nofollow"></a>用户超权限</h3> <p>错误提示：</p> <pre><code class="prism language-shell">xxx is not<span class="token keyword">in</span> the sudoers file.This incident will be reported.</code></pre> <p>前面已有介绍，此处不在赘述。</p> <h3><a id="yum__369" rel="nofollow"></a>yum 锁</h3> <blockquote> <p>参考：https://blog.csdn.net/Dan1374219106/article/details/112450922</p> </blockquote> <p>错误提示：</p> <pre><code class="prism language-shell">Another app is currently holding the yum lock； waiting<span class="token keyword">for</span> it to exit<span class="token punctuation">..</span>.</code></pre> <p>解决方法：</p> <pre><code class="prism language-bash"><span class="token function">rm</span> -f /var/run/yum.pid</code></pre> <p>然后重新运行之前的<code>yum</code> 命令。</p> <h3><a id="CentOS_U_385" rel="nofollow"></a>CentOS U盘挂载问题</h3> <p>exfat 文件系统的 U 盘 centos 识别不了，比较的麻烦。参考：https://cloud.tencent.com/developer/article/1626805 ，建议格式改成 ntfs 的。</p> <p>如果 ntfs 还是无法挂载，参考：https://blog.csdn.net/weixin_39917791/article/details/110578210。</p> </div> 			
                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-275.htm">java时间相关类详解（Date类，Calendar类，LocalDate类，时间格式化，时间戳）</a></p>
                                                        <p>下一个：<a href="/html/category/article-277.htm">DataView 过滤、排序、DISTINCT功能</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1955.htm" title="@DateTimeFormat 和 @JsonFormat 注解">@DateTimeFormat 和 @JsonFormat 注解</a></li>
                        <li class="py-2"><a href="/html/category/article-515.htm" title="css文字在图片下方_web前端入门到实战：CSS让文字环绕图片显示">css文字在图片下方_web前端入门到实战：CSS让文字环绕图片显示</a></li>
                        <li class="py-2"><a href="/html/category/article-1353.htm" title="关于Redis缓存和数据库一致性问题">关于Redis缓存和数据库一致性问题</a></li>
                        <li class="py-2"><a href="/html/category/article-518.htm" title="使用TreeMap在Java中对用户定义的对象进行排序">使用TreeMap在Java中对用户定义的对象进行排序</a></li>
                        <li class="py-2"><a href="/html/category/article-3123.htm" title="Python调用C语言方法">Python调用C语言方法</a></li>
                        <li class="py-2"><a href="/html/category/article-1632.htm" title="MongoDB利用oplog恢复数据的方法_MongoDB_">MongoDB利用oplog恢复数据的方法_MongoDB_</a></li>
                        <li class="py-2"><a href="/html/category/article-1056.htm" title="vue项目的excel的导入与导出">vue项目的excel的导入与导出</a></li>
                        <li class="py-2"><a href="/html/category/article-2532.htm" title="面向对象编程-终结篇 es6新增语法">面向对象编程-终结篇 es6新增语法</a></li>
                        <li class="py-2"><a href="/html/category/article-519.htm" title="Springboot 整合 xxljob 动态API调度任务(进阶篇)">Springboot 整合 xxljob 动态API调度任务(进阶篇)</a></li>
                        <li class="py-2"><a href="/html/category/article-516.htm" title="PHP特质">PHP特质</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">56</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            
            </div>
        </div>
    </section>
    
        <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    SwedenAddress 版权所有
                    <br />
                    Powered by WordPress
                </p>
                <div class="col-lg-4 main-social-footer-29">
                    <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                    <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                    <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                    <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                </div>
            </div>
        </div>
    </section>
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-long-arrow-up"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- /move top -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>