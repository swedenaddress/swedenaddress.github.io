<!doctype html>
<html lang="zh-CN">

<head>
    <!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="canonical" href="https://swedenaddress.github.io/html/category/article-376.htm" />
<link rel="icon" href="/assets/addons/xcblog/img/swedenaddress/favicon.ico" type="image/x-icon"/>
<title>k8s &#8211; 控制器（deployment） - SwedenAddress</title>
<link rel="stylesheet" href="/assets/addons/xcblog/css/swedenaddress/style-starter.css">
<link href="https://fonts.googleapis.com/css?family=Josefin+Slab:400,700,700i&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?ff0c66a832e6568df61664f01ded8b73";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="home">
    <section class=" w3l-header-4 header-sticky">
    <header class="absolute-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a class="navbar-brand" href="/">
                        Sweden Address
                    </a>
                                <button class="navbar-toggler bg-gradient collapsed" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="fa icon-expand fa-bars"></span>
                    <span class="fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
        </div>
        </nav>
        </div>
    </header>
</section>
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/jquery-3.3.1.min.js"></script> <!-- Common jquery plugin -->
<!--bootstrap working-->
<script src="/assets/addons/xcblog/js/frontend/swedenaddress/bootstrap.min.js"></script>
<!-- //bootstrap working-->
<!-- disable body scroll which navbar is in active -->
<script>
$(function() {
    $('.navbar-toggler').click(function() {
        $('body').toggleClass('noscroll');
    })
});
</script>
    <!-- breadcrumbs -->
    <section class="w3l-inner-banner-main">
        <div class="about-inner about ">
            <div class="container">
                <div class="main-titles-head text-center">
                    <h1 class="header-name" style="word-break: break-all;">
                        k8s &#8211; 控制器（deployment）                    </h1>
                    
                </div>
            </div>
        </div>
        <div class="breadcrumbs-sub">
            <div class="container">
                <ul class="breadcrumbs-custom-path">
                    <li class="right-side propClone"><a href="/" class="">首页 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="right-side propClone"><a href="/html/category/" class="">文章分类 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="active ">正文</li>
                </ul>
            </div>
        </div>
        </div>
    </section>
    <!-- breadcrumbs //-->
    <section class="w3l-content-with-photo-4" id="about">
        <div class="content-with-photo4-block ">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="htmledit_views"> <ul> <li>通过kind为Pod定义的资源是一个自主式pod,如果pod被删除了，pod不会自我恢复，如果连yaml文件也找不到了,那只能卷铺盖跑路了。<strong>Replicaset（副本控制器）</strong>创建的pod,可以管理pod维持在固定的个数，并可以实现pod的动态扩缩容。<strong>Deployment</strong>功能更加强大，在replicaset的基础上增加了滚动更新等功能。</li> </ul> <h2><strong>Replicaset</strong></h2> <p>k8s中的一种副本控制器，主要作用是控制其管理的pod,使pod副本数始终维持在一定数量，他会监听这些pod,故障会重启，pod减少会创建。</p> <p>组成部分：</p> <p>1 、用户期望的pod副本数，用来定义这个控制器管理的副本数量。</p> <p>2、标签选择器，选择管理的pod.</p> <p>3、pod资源模版，根据模版创建pod</p> <p>资源清单示例：</p> <p>kubectl explain rs</p> <pre><code>apiVersion: apps/v1 kind: ReplicaSet metadata:   name: rs-test   labels:     rs: test spec:    # 副本数    replicas: 2    # 选择管理pod标签    selector:      matchLabels:        rs: test    template:      metadata:        name: rs-test-dmoe        labels:          rs: test      spec:        containers:        - name: ts          image: nginx          ports:          - containerPort: 80</code></pre> <p>可以通过edit编辑<strong>Replicaset 或yaml文件</strong>中<strong><span style="color:#fe2c24;"></span></strong><span style="color:#fe2c24;">replicas</span><strong></strong>修改副本数完成扩缩容</p> <p>命令扩缩容：</p> <p>kubectl &nbsp;scale &nbsp;资源类型&nbsp; 资源名称&nbsp; --replicas=3</p> <p>通过观察发现<strong>Replicaset 名字为</strong>父级元数据定义的名称<strong>，Pod名为</strong>Replicaset-随机数</p> <p><img decoding="async" alt="" height="53" src="http://img.555519.xyz/uploads3/20220821/f3751b4441bffd7bb974c646b37a4c72.jpg"></p> <p><img decoding="async" alt="" height="48" src="http://img.555519.xyz/uploads3/20220821/ece21b4098868910b901ba94ef9dfddc.jpg"></p> <p><strong>Replicaset</strong>不具有更新功能，只有新建的pod才会使用新的镜像。</p> <p>扩展：</p> <p><span style="color:#fe2c24;">蓝绿发布：原有的一个控制器rs1,在创建另一个控制器rs2.通过修改service标签使之匹配到rs2.</span></p> <h2>Deployment (推荐使用)</h2> <p>是k8s中最常用的资源对象，<strong>为ReplicaSet和Pod的创建提供了一种声明式的定义方法。</strong></p> <p style="margin-left:.0001pt;"><strong><span style="color:#ff0000;">声明式定义</span></strong><strong>是指直接修改资源清单yaml文件，然后通过kubectl</strong><strong></strong><strong>apply</strong><strong>&nbsp;-f</strong><strong>资源清单yaml文件，就可以更改资源。</strong></p> <p style="margin-left:.0001pt;"><strong>Deployment控制器是建立在rs之上的一个控制器，可以管理多个rs，每次更新镜像版本，都会生成一个新的rs，把旧的rs替换掉，多个rs同时存在，但是只有一个rs运行</strong></p> <p><strong>通过一个Deployment会创建一个新的Replicaset控制器，通过Replicaset会创建和管理pod,删除Deployment控制器之下的所有资源也会被删除。</strong></p> <p><strong>使用Deployment而不是Replicaset,因为Deployment下可以有多个Replicaset,滚动更新或升级时，Deployment会创建新的Replicaset，通过Replicaset操作Pod完成升级，回滚时使用指定的Replicaset，在把pod重新创建出来完成回滚。</strong></p> <p><strong>可以实现：</strong></p> <p style="margin-left:.0001pt;">1、创建ReplicaSet和Pod</p> <p style="margin-left:.0001pt;">2、滚动升级（不停止旧服务的状态下升级）和回滚应用（将应用回滚到之前的版本）</p> <p style="margin-left:.0001pt;">3、平滑地扩容和缩容</p> <p style="margin-left:.0001pt;">4、暂停和继续Deployment</p> <p style="margin-left:.0001pt;">资源清单示例：</p> <pre><code>apiVersion: apps/v1 kind: Deployment metadata:   name: deploy-test   labels:     dep: app1 spec:   # 定义rs   # minReadySeconds 在等待设置的时间后才进行升级,默认无等待   # paused 暂停，更新时先暂停服务 默认不暂停   # progressDeadlineSeconds	升级过程中有可能由于各种原因升级卡住（这个时候还没有明确的升级失败），比如在拉取被墙的镜像，权限不够等错误。那么这个时候就需要有个 deadline ，在 deadline 之内如果还卡着，那么就上报这个情况，这个时候这个 Deployment 状态就被标记为 False，并且注明原因。但是它并不会阻止 Deployment 继续进行卡住后面的操作。完全由用户进行控制。   # 副本数   replicas: 2   # 保留历史版本数量 默认10   # revisionHistoryLimit   #  更新策略   # strategy：       # 只有类型为滚蛋更新时，可以配置最大副本数和最少副本数   #   rollingUpdate：         # 创建的最大数量，最多允许超出的指定的目标副本数有几个；   #     maxSurge：         # 删除的最大数量，假设有5个副本，最多一个不可用，就表示最少有4个可用   #     maxUnavailable：       # 类型分两种，重新创建（先删除后创建）和滚动更新（先创建后删除），默认滚动更新   #   type：   # 选择管理的pod   selector:     matchLabels:       dep: app1-pod   template:     metadata:       name: deploy-pod       labels:         dep: app1-pod     spec:       containers:       - name: app-cont         image: nginx         ports:         - containerPort: 80         volumeMounts:         - mountPath: /tmpdir           name: vol-dep       volumes:       - name: vol-dep         persistentVolumeClaim:           claimName: test-pvc       # 配置dns服务器       dnsConfig:         # 服务器地址         nameservers:         - 192.168.1.1         # 添加解析后缀名         searches:         - 123.cn       # 配置dns策略，默认使用集群dns(ClusterFirst)       # dnsPolicy: ClusterFirst       # None 无任何策略：使用自定义的策略       # Default 默认：使用宿主机的dns配置，/etc/resolv.conf       # ClusterFirst 集群DNS优先，与 Default 相反，会预先使用 kube-dns (或 CoreDNS ) 的信息当预设置参数写入到该 Pod 内的DNS配置。       # ClusterFirstWithHostNet 集群 DNS 优先，并伴随着使用宿主机网络：同时使用 hostNetwork 与 kube-dns 作为 Pod 预设 DNS 配置       # 给容器hosts文件添加域名解析       # 在pod中增加域名解析的 &nbsp;     hostAliases: &nbsp;     – ip: 192.166.111.111 &nbsp; &nbsp;     hostnames: &nbsp; &nbsp;     – www.123.com</code></pre> <p style="margin-left:.0001pt;">dnsconfig 展示</p> <p style="margin-left:.0001pt;">配置前</p> <p style="margin-left:.0001pt;"><img decoding="async" alt="" height="61" src="http://img.555519.xyz/uploads3/20220821/ce99726681cf7063316909f79c4f7cc0.jpg"></p> <p>&nbsp;配置后</p> <p style="margin-left:.0001pt;"><img loading="lazy" decoding="async" alt="" height="86" src="http://img.555519.xyz/uploads3/20220821/ad0eea985dd3c02b86cfa757d52af0bc.jpg"></p> <p>hostAliases 展示</p> <p><img loading="lazy" decoding="async" alt="" height="66" src="http://img.555519.xyz/uploads3/20220821/e6d79406c4ca810fd89d52cdcbfbc790.jpg"></p> <p>&nbsp;其他字段</p> <pre><code>hostIPC	&lt;boolean&gt; #使用主机IPC hostNetwork	&lt;boolean&gt;  #是否使用宿主机的网络 hostPID	&lt;boolean&gt; #可以设置容器里是否可以看到宿主机上的进程。True可以 hostname	&lt;string&gt; imagePullSecrets	&lt;[]Object&gt; #定义初始化容器 initContainers	&lt;[]Object&gt;   #定义pod调度到具体哪个节点上 nodeName	&lt;string&gt;  #定义节点选择器 nodeSelector	&lt;map[string]string&gt;  #overhead是1.16引入的字段，在没有引入 Overhead 之前，只要一个节点的资源可用量大于等于 Pod 的 requests 时，这个 Pod 就可以被调度到这个节点上。引入 Overhead 之后，只有节点的资源可用量大于等于 Overhead 加上 requests 的和时才能被调度上来。 overhead	&lt;map[string]string&gt;  preemptionPolicy	&lt;string&gt; priority	&lt;integer&gt; priorityClassName	&lt;string&gt; readinessGates	&lt;[]Object&gt;  restartPolicy	&lt;string&gt;   #Pod重启策略 runtimeClassName	&lt;string&gt; schedulerName	&lt;string&gt; securityContext	&lt;Object&gt; #是否开启特权模式 serviceAccount	&lt;string&gt; serviceAccountName	&lt;string&gt; setHostnameAsFQDN	&lt;boolean&gt; shareProcessNamespace	&lt;boolean&gt; subdomain	&lt;string&gt; terminationGracePeriodSeconds	&lt;integer&gt; #在真正删除容器之前，K8S会先发终止信号（kill -15 {pid}）给容器，默认30s tolerations	&lt;[]Object&gt;  #定义容忍度 topologySpreadConstraints	&lt;[]Object&gt; volumes	&lt;[]Object&gt;  #挂载存储卷</code></pre> <p><img loading="lazy" decoding="async" alt="" height="66" src="http://img.555519.xyz/uploads3/20220821/f2570dcdd6a44a9b5d120dd93dff9537.jpg"></p> <p><strong>&nbsp;字段说明：</strong></p> <ul> <li style="margin-left:.0001pt;">1.NAME&nbsp;：列出名称空间中deployment的名称。</li> <li style="margin-left:.0001pt;">2.READY：显示deployment有多少副本数。它遵循ready/desired的模式。</li> <li style="margin-left:.0001pt;">3.UP-TO-DATE：&nbsp;显示已更新到所需状态的副本数。</li> <li style="margin-left:.0001pt;">4.AVAILABLE：&nbsp;显示你的可以使用多少个应用程序副本。</li> <li style="margin-left:.0001pt;">5.AGE&nbsp;：显示应用程序已运行的时间。</li> <li style="margin-left:.0001pt;"><strong>命名</strong></li> <li style="margin-left:.0001pt;"> <p style="margin-left:.0001pt;">ReplicaSet的名称始终设置为[DEPLOYMENT-NAME]-[RANDOM-STRING]。</p> </li> <li style="margin-left:.0001pt;"> <p style="margin-left:.0001pt;"><span style="background-color:#ffffff;">Pod名称为</span>[DEPLOYMENT-NAME]-[RANDOM-STRING]-[RANDOM-STRING]。</p> </li> <li style="margin-left:.0001pt;"> <p style="margin-left:.0001pt;"><span style="background-color:#ffffff;">RANDOM-STRING是随机生成的</span></p> </li> <li style="margin-left:.0001pt;"> <h3 style="margin-left:.0001pt;"><strong>扩容、缩容、滚动更新、回滚</strong></h3> </li> <li style="margin-left:.0001pt;"><strong>扩缩容可以使通过更新yaml文件replicas数量完成。</strong></li> <li style="margin-left:.0001pt;"><strong>也可以使用命令</strong>kubectl &nbsp;scale &nbsp;资源类型&nbsp; 资源名称&nbsp; --replicas=3</li> <li style="margin-left:.0001pt;">滚动更新和回滚</li> <li style="margin-left:.0001pt;"> <pre><code># 镜像升级 kubectl set image deployment 应用名 镜像=镜像:版本名 # 查看升级状态 kubectl rollout status deployment 应用名 # 查看历史版本 kubectl rollout history deployment 应用名 # 查看版本详情 kubectl rollout history deployment 应用名 --revision=2 # 版本回滚到上一版本 kubectl rollout undo deployment 应用名 # 版本回滚到指定版本 kubectl rollout undo deployment 应用名 --to-revision=版本号 # 暂停更新操作 kubectl rollout pause deployment 应用名 # 恢复部署操作 kubectl rollout resume  deployment 应用名 # 弹性伸缩（通过命令修改副本的数量） kubectl scale deployment 应用名 --replicas=数量</code></pre> </li> </ul> </div> 			
                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-375.htm">mybatis的的代理开发</a></p>
                                                        <p>下一个：<a href="/html/category/article-377.htm">Eureka的配置项详解</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7215.htm" title="宠物粮厂家招聘 宠物粮厂家招聘最新信息">宠物粮厂家招聘 宠物粮厂家招聘最新信息</a></li>
                        <li class="py-2"><a href="/html/category/article-7077.htm" title="电影演员李羚近况（这都可以？）演员李羚年轻时候的照片，传闻中的陈芊芊分集剧情，李羚，">电影演员李羚近况（这都可以？）演员李羚年轻时候的照片，传闻中的陈芊芊分集剧情，李羚，</a></li>
                        <li class="py-2"><a href="/html/category/article-6616.htm" title="成都宠物领养平台领养可靠吗现在还有吗知乎（成都领养宠物中心）">成都宠物领养平台领养可靠吗现在还有吗知乎（成都领养宠物中心）</a></li>
                        <li class="py-2"><a href="/html/category/article-6938.htm" title="什么叫品牌营销 什么叫品牌活动呢(什么叫品牌营销策划?)">什么叫品牌营销 什么叫品牌活动呢(什么叫品牌营销策划?)</a></li>
                        <li class="py-2"><a href="/html/category/article-7076.htm" title="一首《十送红军》为何总让人热泪盈眶呢（这样也行？）一首《十送红军》为何总让人热泪盈眶的歌，东方母亲，十送红军电视剧，">一首《十送红军》为何总让人热泪盈眶呢（这样也行？）一首《十送红军》为何总让人热泪盈眶的歌，东方母亲，十送红军电视剧，</a></li>
                        <li class="py-2"><a href="/html/category/article-6107.htm" title="开宠物食品店赚钱吗现在（开宠物食品店需要多少钱）">开宠物食品店赚钱吗现在（开宠物食品店需要多少钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-7214.htm" title="宠物粮食市场份额预测分析 宠物粮食市场份额预测分析报告">宠物粮食市场份额预测分析 宠物粮食市场份额预测分析报告</a></li>
                        <li class="py-2"><a href="/html/category/article-6571.htm" title="﻿动物疫苗价格 ">﻿动物疫苗价格 </a></li>
                        <li class="py-2"><a href="/html/category/article-6062.htm" title="猫粮制作机器多少钱一套（猫粮制作过程视频）">猫粮制作机器多少钱一套（猫粮制作过程视频）</a></li>
                        <li class="py-2"><a href="/html/category/article-7168.htm" title="花样年华 电视剧（电视剧继父的花样年华33-40集播放）">花样年华 电视剧（电视剧继父的花样年华33-40集播放）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">20</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            
            </div>
        </div>
    </section>
    
        <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    SwedenAddress 版权所有
                    <br />
                    Powered by WordPress
                </p>
                <div class="col-lg-4 main-social-footer-29">
                    <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                    <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                    <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                    <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                </div>
            </div>
        </div>
    </section>
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-long-arrow-up"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- /move top -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>